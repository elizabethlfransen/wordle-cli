#!/usr/bin/env node
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/ansi-align/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-align/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst stringWidth = __webpack_require__(/*! string-width */ \"./node_modules/ansi-align/node_modules/string-width/index.js\")\n\nfunction ansiAlign (text, opts) {\n  if (!text) return text\n\n  opts = opts || {}\n  const align = opts.align || 'center'\n\n  // short-circuit `align: 'left'` as no-op\n  if (align === 'left') return text\n\n  const split = opts.split || '\\n'\n  const pad = opts.pad || ' '\n  const widthDiffFn = align !== 'right' ? halfDiff : fullDiff\n\n  let returnString = false\n  if (!Array.isArray(text)) {\n    returnString = true\n    text = String(text).split(split)\n  }\n\n  let width\n  let maxWidth = 0\n  text = text.map(function (str) {\n    str = String(str)\n    width = stringWidth(str)\n    maxWidth = Math.max(width, maxWidth)\n    return {\n      str,\n      width\n    }\n  }).map(function (obj) {\n    return new Array(widthDiffFn(maxWidth, obj.width) + 1).join(pad) + obj.str\n  })\n\n  return returnString ? text.join(split) : text\n}\n\nansiAlign.left = function left (text) {\n  return ansiAlign(text, { align: 'left' })\n}\n\nansiAlign.center = function center (text) {\n  return ansiAlign(text, { align: 'center' })\n}\n\nansiAlign.right = function right (text) {\n  return ansiAlign(text, { align: 'right' })\n}\n\nmodule.exports = ansiAlign\n\nfunction halfDiff (maxWidth, curWidth) {\n  return Math.floor((maxWidth - curWidth) / 2)\n}\n\nfunction fullDiff (maxWidth, curWidth) {\n  return maxWidth - curWidth\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-align/index.js?");

/***/ }),

/***/ "./node_modules/ansi-align/node_modules/ansi-regex/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/ansi-align/node_modules/ansi-regex/index.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-align/node_modules/ansi-regex/index.js?");

/***/ }),

/***/ "./node_modules/ansi-align/node_modules/emoji-regex/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ansi-align/node_modules/emoji-regex/index.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-align/node_modules/emoji-regex/index.js?");

/***/ }),

/***/ "./node_modules/ansi-align/node_modules/string-width/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/ansi-align/node_modules/string-width/index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst stripAnsi = __webpack_require__(/*! strip-ansi */ \"./node_modules/ansi-align/node_modules/strip-ansi/index.js\");\nconst isFullwidthCodePoint = __webpack_require__(/*! is-fullwidth-code-point */ \"./node_modules/is-fullwidth-code-point/index.js\");\nconst emojiRegex = __webpack_require__(/*! emoji-regex */ \"./node_modules/ansi-align/node_modules/emoji-regex/index.js\");\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports[\"default\"] = stringWidth;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-align/node_modules/string-width/index.js?");

/***/ }),

/***/ "./node_modules/ansi-align/node_modules/strip-ansi/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/ansi-align/node_modules/strip-ansi/index.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst ansiRegex = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-align/node_modules/ansi-regex/index.js\");\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-align/node_modules/strip-ansi/index.js?");

/***/ }),

/***/ "./node_modules/ansi/lib/ansi.js":
/*!***************************************!*\
  !*** ./node_modules/ansi/lib/ansi.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n/**\n * References:\n *\n *   - http://en.wikipedia.org/wiki/ANSI_escape_code\n *   - http://www.termsys.demon.co.uk/vtansi.htm\n *\n */\n\n/**\n * Module dependencies.\n */\n\nvar emitNewlineEvents = __webpack_require__(/*! ./newlines */ \"./node_modules/ansi/lib/newlines.js\")\n  , prefix = '\\x1b[' // For all escape codes\n  , suffix = 'm'     // Only for color codes\n\n/**\n * The ANSI escape sequences.\n */\n\nvar codes = {\n    up: 'A'\n  , down: 'B'\n  , forward: 'C'\n  , back: 'D'\n  , nextLine: 'E'\n  , previousLine: 'F'\n  , horizontalAbsolute: 'G'\n  , eraseData: 'J'\n  , eraseLine: 'K'\n  , scrollUp: 'S'\n  , scrollDown: 'T'\n  , savePosition: 's'\n  , restorePosition: 'u'\n  , queryPosition: '6n'\n  , hide: '?25l'\n  , show: '?25h'\n}\n\n/**\n * Rendering ANSI codes.\n */\n\nvar styles = {\n    bold: 1\n  , italic: 3\n  , underline: 4\n  , inverse: 7\n}\n\n/**\n * The negating ANSI code for the rendering modes.\n */\n\nvar reset = {\n    bold: 22\n  , italic: 23\n  , underline: 24\n  , inverse: 27\n}\n\n/**\n * The standard, styleable ANSI colors.\n */\n\nvar colors = {\n    white: 37\n  , black: 30\n  , blue: 34\n  , cyan: 36\n  , green: 32\n  , magenta: 35\n  , red: 31\n  , yellow: 33\n  , grey: 90\n  , brightBlack: 90\n  , brightRed: 91\n  , brightGreen: 92\n  , brightYellow: 93\n  , brightBlue: 94\n  , brightMagenta: 95\n  , brightCyan: 96\n  , brightWhite: 97\n}\n\n\n/**\n * Creates a Cursor instance based off the given `writable stream` instance.\n */\n\nfunction ansi (stream, options) {\n  if (stream._ansicursor) {\n    return stream._ansicursor\n  } else {\n    return stream._ansicursor = new Cursor(stream, options)\n  }\n}\nmodule.exports = exports = ansi\n\n/**\n * The `Cursor` class.\n */\n\nfunction Cursor (stream, options) {\n  if (!(this instanceof Cursor)) {\n    return new Cursor(stream, options)\n  }\n  if (typeof stream != 'object' || typeof stream.write != 'function') {\n    throw new Error('a valid Stream instance must be passed in')\n  }\n\n  // the stream to use\n  this.stream = stream\n\n  // when 'enabled' is false then all the functions are no-ops except for write()\n  this.enabled = options && options.enabled\n  if (typeof this.enabled === 'undefined') {\n    this.enabled = stream.isTTY\n  }\n  this.enabled = !!this.enabled\n\n  // then `buffering` is true, then `write()` calls are buffered in\n  // memory until `flush()` is invoked\n  this.buffering = !!(options && options.buffering)\n  this._buffer = []\n\n  // controls the foreground and background colors\n  this.fg = this.foreground = new Colorer(this, 0)\n  this.bg = this.background = new Colorer(this, 10)\n\n  // defaults\n  this.Bold = false\n  this.Italic = false\n  this.Underline = false\n  this.Inverse = false\n\n  // keep track of the number of \"newlines\" that get encountered\n  this.newlines = 0\n  emitNewlineEvents(stream)\n  stream.on('newline', function () {\n    this.newlines++\n  }.bind(this))\n}\nexports.Cursor = Cursor\n\n/**\n * Helper function that calls `write()` on the underlying Stream.\n * Returns `this` instead of the write() return value to keep\n * the chaining going.\n */\n\nCursor.prototype.write = function (data) {\n  if (this.buffering) {\n    this._buffer.push(arguments)\n  } else {\n    this.stream.write.apply(this.stream, arguments)\n  }\n  return this\n}\n\n/**\n * Buffer `write()` calls into memory.\n *\n * @api public\n */\n\nCursor.prototype.buffer = function () {\n  this.buffering = true\n  return this\n}\n\n/**\n * Write out the in-memory buffer.\n *\n * @api public\n */\n\nCursor.prototype.flush = function () {\n  this.buffering = false\n  var str = this._buffer.map(function (args) {\n    if (args.length != 1) throw new Error('unexpected args length! ' + args.length);\n    return args[0];\n  }).join('');\n  this._buffer.splice(0); // empty\n  this.write(str);\n  return this\n}\n\n\n/**\n * The `Colorer` class manages both the background and foreground colors.\n */\n\nfunction Colorer (cursor, base) {\n  this.current = null\n  this.cursor = cursor\n  this.base = base\n}\nexports.Colorer = Colorer\n\n/**\n * Write an ANSI color code, ensuring that the same code doesn't get rewritten.\n */\n\nColorer.prototype._setColorCode = function setColorCode (code) {\n  var c = String(code)\n  if (this.current === c) return\n  this.cursor.enabled && this.cursor.write(prefix + c + suffix)\n  this.current = c\n  return this\n}\n\n\n/**\n * Set up the positional ANSI codes.\n */\n\nObject.keys(codes).forEach(function (name) {\n  var code = String(codes[name])\n  Cursor.prototype[name] = function () {\n    var c = code\n    if (arguments.length > 0) {\n      c = toArray(arguments).map(Math.round).join(';') + code\n    }\n    this.enabled && this.write(prefix + c)\n    return this\n  }\n})\n\n/**\n * Set up the functions for the rendering ANSI codes.\n */\n\nObject.keys(styles).forEach(function (style) {\n  var name = style[0].toUpperCase() + style.substring(1)\n    , c = styles[style]\n    , r = reset[style]\n\n  Cursor.prototype[style] = function () {\n    if (this[name]) return this\n    this.enabled && this.write(prefix + c + suffix)\n    this[name] = true\n    return this\n  }\n\n  Cursor.prototype['reset' + name] = function () {\n    if (!this[name]) return this\n    this.enabled && this.write(prefix + r + suffix)\n    this[name] = false\n    return this\n  }\n})\n\n/**\n * Setup the functions for the standard colors.\n */\n\nObject.keys(colors).forEach(function (color) {\n  var code = colors[color]\n\n  Colorer.prototype[color] = function () {\n    this._setColorCode(this.base + code)\n    return this.cursor\n  }\n\n  Cursor.prototype[color] = function () {\n    return this.foreground[color]()\n  }\n})\n\n/**\n * Makes a beep sound!\n */\n\nCursor.prototype.beep = function () {\n  this.enabled && this.write('\\x07')\n  return this\n}\n\n/**\n * Moves cursor to specific position\n */\n\nCursor.prototype.goto = function (x, y) {\n  x = x | 0\n  y = y | 0\n  this.enabled && this.write(prefix + y + ';' + x + 'H')\n  return this\n}\n\n/**\n * Resets the color.\n */\n\nColorer.prototype.reset = function () {\n  this._setColorCode(this.base + 39)\n  return this.cursor\n}\n\n/**\n * Resets all ANSI formatting on the stream.\n */\n\nCursor.prototype.reset = function () {\n  this.enabled && this.write(prefix + '0' + suffix)\n  this.Bold = false\n  this.Italic = false\n  this.Underline = false\n  this.Inverse = false\n  this.foreground.current = null\n  this.background.current = null\n  return this\n}\n\n/**\n * Sets the foreground color with the given RGB values.\n * The closest match out of the 216 colors is picked.\n */\n\nColorer.prototype.rgb = function (r, g, b) {\n  var base = this.base + 38\n    , code = rgb(r, g, b)\n  this._setColorCode(base + ';5;' + code)\n  return this.cursor\n}\n\n/**\n * Same as `cursor.fg.rgb(r, g, b)`.\n */\n\nCursor.prototype.rgb = function (r, g, b) {\n  return this.foreground.rgb(r, g, b)\n}\n\n/**\n * Accepts CSS color codes for use with ANSI escape codes.\n * For example: `#FF000` would be bright red.\n */\n\nColorer.prototype.hex = function (color) {\n  return this.rgb.apply(this, hex(color))\n}\n\n/**\n * Same as `cursor.fg.hex(color)`.\n */\n\nCursor.prototype.hex = function (color) {\n  return this.foreground.hex(color)\n}\n\n\n// UTIL FUNCTIONS //\n\n/**\n * Translates a 255 RGB value to a 0-5 ANSI RGV value,\n * then returns the single ANSI color code to use.\n */\n\nfunction rgb (r, g, b) {\n  var red = r / 255 * 5\n    , green = g / 255 * 5\n    , blue = b / 255 * 5\n  return rgb5(red, green, blue)\n}\n\n/**\n * Turns rgb 0-5 values into a single ANSI color code to use.\n */\n\nfunction rgb5 (r, g, b) {\n  var red = Math.round(r)\n    , green = Math.round(g)\n    , blue = Math.round(b)\n  return 16 + (red*36) + (green*6) + blue\n}\n\n/**\n * Accepts a hex CSS color code string (# is optional) and\n * translates it into an Array of 3 RGB 0-255 values, which\n * can then be used with rgb().\n */\n\nfunction hex (color) {\n  var c = color[0] === '#' ? color.substring(1) : color\n    , r = c.substring(0, 2)\n    , g = c.substring(2, 4)\n    , b = c.substring(4, 6)\n  return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)]\n}\n\n/**\n * Turns an array-like object into a real array.\n */\n\nfunction toArray (a) {\n  var i = 0\n    , l = a.length\n    , rtn = []\n  for (; i<l; i++) {\n    rtn.push(a[i])\n  }\n  return rtn\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi/lib/ansi.js?");

/***/ }),

/***/ "./node_modules/ansi/lib/newlines.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi/lib/newlines.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Accepts any node Stream instance and hijacks its \"write()\" function,\n * so that it can count any newlines that get written to the output.\n *\n * When a '\\n' byte is encountered, then a \"newline\" event will be emitted\n * on the stream, with no arguments. It is up to the listeners to determine\n * any necessary deltas required for their use-case.\n *\n * Ex:\n *\n *   var cursor = ansi(process.stdout)\n *     , ln = 0\n *   process.stdout.on('newline', function () {\n *    ln++\n *   })\n */\n\n/**\n * Module dependencies.\n */\n\nvar assert = __webpack_require__(/*! assert */ \"assert\")\nvar NEWLINE = '\\n'.charCodeAt(0)\n\nfunction emitNewlineEvents (stream) {\n  if (stream._emittingNewlines) {\n    // already emitting newline events\n    return\n  }\n\n  var write = stream.write\n\n  stream.write = function (data) {\n    // first write the data\n    var rtn = write.apply(stream, arguments)\n\n    if (stream.listeners('newline').length > 0) {\n      var len = data.length\n        , i = 0\n      // now try to calculate any deltas\n      if (typeof data == 'string') {\n        for (; i<len; i++) {\n          processByte(stream, data.charCodeAt(i))\n        }\n      } else {\n        // buffer\n        for (; i<len; i++) {\n          processByte(stream, data[i])\n        }\n      }\n    }\n\n    return rtn\n  }\n\n  stream._emittingNewlines = true\n}\nmodule.exports = emitNewlineEvents\n\n\n/**\n * Processes an individual byte being written to a stream\n */\n\nfunction processByte (stream, b) {\n  assert.equal(typeof b, 'number')\n  if (b === NEWLINE) {\n    stream.emit('newline')\n  }\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi/lib/newlines.js?");

/***/ }),

/***/ "./node_modules/boxen/node_modules/ansi-styles/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/boxen/node_modules/ansi-styles/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = __webpack_require__(/*! color-convert */ \"./node_modules/color-convert/index.js\");\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/boxen/node_modules/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/boxen/node_modules/chalk/source/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/boxen/node_modules/chalk/source/index.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/boxen/node_modules/ansi-styles/index.js\");\nconst {stdout: stdoutColor, stderr: stderrColor} = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = __webpack_require__(/*! ./util */ \"./node_modules/boxen/node_modules/chalk/source/util.js\");\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = __webpack_require__(/*! ./templates */ \"./node_modules/boxen/node_modules/chalk/source/templates.js\");\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/boxen/node_modules/chalk/source/index.js?");

/***/ }),

/***/ "./node_modules/boxen/node_modules/chalk/source/templates.js":
/*!*******************************************************************!*\
  !*** ./node_modules/boxen/node_modules/chalk/source/templates.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/boxen/node_modules/chalk/source/templates.js?");

/***/ }),

/***/ "./node_modules/boxen/node_modules/chalk/source/util.js":
/*!**************************************************************!*\
  !*** ./node_modules/boxen/node_modules/chalk/source/util.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/boxen/node_modules/chalk/source/util.js?");

/***/ }),

/***/ "./node_modules/camelcase/index.js":
/*!*****************************************!*\
  !*** ./node_modules/camelcase/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = camelCase;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/camelcase/index.js?");

/***/ }),

/***/ "./node_modules/cli-boxes/index.js":
/*!*****************************************!*\
  !*** ./node_modules/cli-boxes/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst cliBoxes = __webpack_require__(/*! ./boxes.json */ \"./node_modules/cli-boxes/boxes.json\");\n\nmodule.exports = cliBoxes;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = cliBoxes;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/cli-boxes/index.js?");

/***/ }),

/***/ "./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/color-convert/conversions.js?");

/***/ }),

/***/ "./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\nconst route = __webpack_require__(/*! ./route */ \"./node_modules/color-convert/route.js\");\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/color-convert/index.js?");

/***/ }),

/***/ "./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/color-convert/route.js?");

/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/color-name/index.js?");

/***/ }),

/***/ "./node_modules/eastasianwidth/eastasianwidth.js":
/*!*******************************************************!*\
  !*** ./node_modules/eastasianwidth/eastasianwidth.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("var eaw = {};\n\nif (false) {} else {\n  module.exports = eaw;\n}\n\neaw.eastAsianWidth = function(character) {\n  var x = character.charCodeAt(0);\n  var y = (character.length == 2) ? character.charCodeAt(1) : 0;\n  var codePoint = x;\n  if ((0xD800 <= x && x <= 0xDBFF) && (0xDC00 <= y && y <= 0xDFFF)) {\n    x &= 0x3FF;\n    y &= 0x3FF;\n    codePoint = (x << 10) | y;\n    codePoint += 0x10000;\n  }\n\n  if ((0x3000 == codePoint) ||\n      (0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n      (0xFFE0 <= codePoint && codePoint <= 0xFFE6)) {\n    return 'F';\n  }\n  if ((0x20A9 == codePoint) ||\n      (0xFF61 <= codePoint && codePoint <= 0xFFBE) ||\n      (0xFFC2 <= codePoint && codePoint <= 0xFFC7) ||\n      (0xFFCA <= codePoint && codePoint <= 0xFFCF) ||\n      (0xFFD2 <= codePoint && codePoint <= 0xFFD7) ||\n      (0xFFDA <= codePoint && codePoint <= 0xFFDC) ||\n      (0xFFE8 <= codePoint && codePoint <= 0xFFEE)) {\n    return 'H';\n  }\n  if ((0x1100 <= codePoint && codePoint <= 0x115F) ||\n      (0x11A3 <= codePoint && codePoint <= 0x11A7) ||\n      (0x11FA <= codePoint && codePoint <= 0x11FF) ||\n      (0x2329 <= codePoint && codePoint <= 0x232A) ||\n      (0x2E80 <= codePoint && codePoint <= 0x2E99) ||\n      (0x2E9B <= codePoint && codePoint <= 0x2EF3) ||\n      (0x2F00 <= codePoint && codePoint <= 0x2FD5) ||\n      (0x2FF0 <= codePoint && codePoint <= 0x2FFB) ||\n      (0x3001 <= codePoint && codePoint <= 0x303E) ||\n      (0x3041 <= codePoint && codePoint <= 0x3096) ||\n      (0x3099 <= codePoint && codePoint <= 0x30FF) ||\n      (0x3105 <= codePoint && codePoint <= 0x312D) ||\n      (0x3131 <= codePoint && codePoint <= 0x318E) ||\n      (0x3190 <= codePoint && codePoint <= 0x31BA) ||\n      (0x31C0 <= codePoint && codePoint <= 0x31E3) ||\n      (0x31F0 <= codePoint && codePoint <= 0x321E) ||\n      (0x3220 <= codePoint && codePoint <= 0x3247) ||\n      (0x3250 <= codePoint && codePoint <= 0x32FE) ||\n      (0x3300 <= codePoint && codePoint <= 0x4DBF) ||\n      (0x4E00 <= codePoint && codePoint <= 0xA48C) ||\n      (0xA490 <= codePoint && codePoint <= 0xA4C6) ||\n      (0xA960 <= codePoint && codePoint <= 0xA97C) ||\n      (0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n      (0xD7B0 <= codePoint && codePoint <= 0xD7C6) ||\n      (0xD7CB <= codePoint && codePoint <= 0xD7FB) ||\n      (0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n      (0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n      (0xFE30 <= codePoint && codePoint <= 0xFE52) ||\n      (0xFE54 <= codePoint && codePoint <= 0xFE66) ||\n      (0xFE68 <= codePoint && codePoint <= 0xFE6B) ||\n      (0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n      (0x1F200 <= codePoint && codePoint <= 0x1F202) ||\n      (0x1F210 <= codePoint && codePoint <= 0x1F23A) ||\n      (0x1F240 <= codePoint && codePoint <= 0x1F248) ||\n      (0x1F250 <= codePoint && codePoint <= 0x1F251) ||\n      (0x20000 <= codePoint && codePoint <= 0x2F73F) ||\n      (0x2B740 <= codePoint && codePoint <= 0x2FFFD) ||\n      (0x30000 <= codePoint && codePoint <= 0x3FFFD)) {\n    return 'W';\n  }\n  if ((0x0020 <= codePoint && codePoint <= 0x007E) ||\n      (0x00A2 <= codePoint && codePoint <= 0x00A3) ||\n      (0x00A5 <= codePoint && codePoint <= 0x00A6) ||\n      (0x00AC == codePoint) ||\n      (0x00AF == codePoint) ||\n      (0x27E6 <= codePoint && codePoint <= 0x27ED) ||\n      (0x2985 <= codePoint && codePoint <= 0x2986)) {\n    return 'Na';\n  }\n  if ((0x00A1 == codePoint) ||\n      (0x00A4 == codePoint) ||\n      (0x00A7 <= codePoint && codePoint <= 0x00A8) ||\n      (0x00AA == codePoint) ||\n      (0x00AD <= codePoint && codePoint <= 0x00AE) ||\n      (0x00B0 <= codePoint && codePoint <= 0x00B4) ||\n      (0x00B6 <= codePoint && codePoint <= 0x00BA) ||\n      (0x00BC <= codePoint && codePoint <= 0x00BF) ||\n      (0x00C6 == codePoint) ||\n      (0x00D0 == codePoint) ||\n      (0x00D7 <= codePoint && codePoint <= 0x00D8) ||\n      (0x00DE <= codePoint && codePoint <= 0x00E1) ||\n      (0x00E6 == codePoint) ||\n      (0x00E8 <= codePoint && codePoint <= 0x00EA) ||\n      (0x00EC <= codePoint && codePoint <= 0x00ED) ||\n      (0x00F0 == codePoint) ||\n      (0x00F2 <= codePoint && codePoint <= 0x00F3) ||\n      (0x00F7 <= codePoint && codePoint <= 0x00FA) ||\n      (0x00FC == codePoint) ||\n      (0x00FE == codePoint) ||\n      (0x0101 == codePoint) ||\n      (0x0111 == codePoint) ||\n      (0x0113 == codePoint) ||\n      (0x011B == codePoint) ||\n      (0x0126 <= codePoint && codePoint <= 0x0127) ||\n      (0x012B == codePoint) ||\n      (0x0131 <= codePoint && codePoint <= 0x0133) ||\n      (0x0138 == codePoint) ||\n      (0x013F <= codePoint && codePoint <= 0x0142) ||\n      (0x0144 == codePoint) ||\n      (0x0148 <= codePoint && codePoint <= 0x014B) ||\n      (0x014D == codePoint) ||\n      (0x0152 <= codePoint && codePoint <= 0x0153) ||\n      (0x0166 <= codePoint && codePoint <= 0x0167) ||\n      (0x016B == codePoint) ||\n      (0x01CE == codePoint) ||\n      (0x01D0 == codePoint) ||\n      (0x01D2 == codePoint) ||\n      (0x01D4 == codePoint) ||\n      (0x01D6 == codePoint) ||\n      (0x01D8 == codePoint) ||\n      (0x01DA == codePoint) ||\n      (0x01DC == codePoint) ||\n      (0x0251 == codePoint) ||\n      (0x0261 == codePoint) ||\n      (0x02C4 == codePoint) ||\n      (0x02C7 == codePoint) ||\n      (0x02C9 <= codePoint && codePoint <= 0x02CB) ||\n      (0x02CD == codePoint) ||\n      (0x02D0 == codePoint) ||\n      (0x02D8 <= codePoint && codePoint <= 0x02DB) ||\n      (0x02DD == codePoint) ||\n      (0x02DF == codePoint) ||\n      (0x0300 <= codePoint && codePoint <= 0x036F) ||\n      (0x0391 <= codePoint && codePoint <= 0x03A1) ||\n      (0x03A3 <= codePoint && codePoint <= 0x03A9) ||\n      (0x03B1 <= codePoint && codePoint <= 0x03C1) ||\n      (0x03C3 <= codePoint && codePoint <= 0x03C9) ||\n      (0x0401 == codePoint) ||\n      (0x0410 <= codePoint && codePoint <= 0x044F) ||\n      (0x0451 == codePoint) ||\n      (0x2010 == codePoint) ||\n      (0x2013 <= codePoint && codePoint <= 0x2016) ||\n      (0x2018 <= codePoint && codePoint <= 0x2019) ||\n      (0x201C <= codePoint && codePoint <= 0x201D) ||\n      (0x2020 <= codePoint && codePoint <= 0x2022) ||\n      (0x2024 <= codePoint && codePoint <= 0x2027) ||\n      (0x2030 == codePoint) ||\n      (0x2032 <= codePoint && codePoint <= 0x2033) ||\n      (0x2035 == codePoint) ||\n      (0x203B == codePoint) ||\n      (0x203E == codePoint) ||\n      (0x2074 == codePoint) ||\n      (0x207F == codePoint) ||\n      (0x2081 <= codePoint && codePoint <= 0x2084) ||\n      (0x20AC == codePoint) ||\n      (0x2103 == codePoint) ||\n      (0x2105 == codePoint) ||\n      (0x2109 == codePoint) ||\n      (0x2113 == codePoint) ||\n      (0x2116 == codePoint) ||\n      (0x2121 <= codePoint && codePoint <= 0x2122) ||\n      (0x2126 == codePoint) ||\n      (0x212B == codePoint) ||\n      (0x2153 <= codePoint && codePoint <= 0x2154) ||\n      (0x215B <= codePoint && codePoint <= 0x215E) ||\n      (0x2160 <= codePoint && codePoint <= 0x216B) ||\n      (0x2170 <= codePoint && codePoint <= 0x2179) ||\n      (0x2189 == codePoint) ||\n      (0x2190 <= codePoint && codePoint <= 0x2199) ||\n      (0x21B8 <= codePoint && codePoint <= 0x21B9) ||\n      (0x21D2 == codePoint) ||\n      (0x21D4 == codePoint) ||\n      (0x21E7 == codePoint) ||\n      (0x2200 == codePoint) ||\n      (0x2202 <= codePoint && codePoint <= 0x2203) ||\n      (0x2207 <= codePoint && codePoint <= 0x2208) ||\n      (0x220B == codePoint) ||\n      (0x220F == codePoint) ||\n      (0x2211 == codePoint) ||\n      (0x2215 == codePoint) ||\n      (0x221A == codePoint) ||\n      (0x221D <= codePoint && codePoint <= 0x2220) ||\n      (0x2223 == codePoint) ||\n      (0x2225 == codePoint) ||\n      (0x2227 <= codePoint && codePoint <= 0x222C) ||\n      (0x222E == codePoint) ||\n      (0x2234 <= codePoint && codePoint <= 0x2237) ||\n      (0x223C <= codePoint && codePoint <= 0x223D) ||\n      (0x2248 == codePoint) ||\n      (0x224C == codePoint) ||\n      (0x2252 == codePoint) ||\n      (0x2260 <= codePoint && codePoint <= 0x2261) ||\n      (0x2264 <= codePoint && codePoint <= 0x2267) ||\n      (0x226A <= codePoint && codePoint <= 0x226B) ||\n      (0x226E <= codePoint && codePoint <= 0x226F) ||\n      (0x2282 <= codePoint && codePoint <= 0x2283) ||\n      (0x2286 <= codePoint && codePoint <= 0x2287) ||\n      (0x2295 == codePoint) ||\n      (0x2299 == codePoint) ||\n      (0x22A5 == codePoint) ||\n      (0x22BF == codePoint) ||\n      (0x2312 == codePoint) ||\n      (0x2460 <= codePoint && codePoint <= 0x24E9) ||\n      (0x24EB <= codePoint && codePoint <= 0x254B) ||\n      (0x2550 <= codePoint && codePoint <= 0x2573) ||\n      (0x2580 <= codePoint && codePoint <= 0x258F) ||\n      (0x2592 <= codePoint && codePoint <= 0x2595) ||\n      (0x25A0 <= codePoint && codePoint <= 0x25A1) ||\n      (0x25A3 <= codePoint && codePoint <= 0x25A9) ||\n      (0x25B2 <= codePoint && codePoint <= 0x25B3) ||\n      (0x25B6 <= codePoint && codePoint <= 0x25B7) ||\n      (0x25BC <= codePoint && codePoint <= 0x25BD) ||\n      (0x25C0 <= codePoint && codePoint <= 0x25C1) ||\n      (0x25C6 <= codePoint && codePoint <= 0x25C8) ||\n      (0x25CB == codePoint) ||\n      (0x25CE <= codePoint && codePoint <= 0x25D1) ||\n      (0x25E2 <= codePoint && codePoint <= 0x25E5) ||\n      (0x25EF == codePoint) ||\n      (0x2605 <= codePoint && codePoint <= 0x2606) ||\n      (0x2609 == codePoint) ||\n      (0x260E <= codePoint && codePoint <= 0x260F) ||\n      (0x2614 <= codePoint && codePoint <= 0x2615) ||\n      (0x261C == codePoint) ||\n      (0x261E == codePoint) ||\n      (0x2640 == codePoint) ||\n      (0x2642 == codePoint) ||\n      (0x2660 <= codePoint && codePoint <= 0x2661) ||\n      (0x2663 <= codePoint && codePoint <= 0x2665) ||\n      (0x2667 <= codePoint && codePoint <= 0x266A) ||\n      (0x266C <= codePoint && codePoint <= 0x266D) ||\n      (0x266F == codePoint) ||\n      (0x269E <= codePoint && codePoint <= 0x269F) ||\n      (0x26BE <= codePoint && codePoint <= 0x26BF) ||\n      (0x26C4 <= codePoint && codePoint <= 0x26CD) ||\n      (0x26CF <= codePoint && codePoint <= 0x26E1) ||\n      (0x26E3 == codePoint) ||\n      (0x26E8 <= codePoint && codePoint <= 0x26FF) ||\n      (0x273D == codePoint) ||\n      (0x2757 == codePoint) ||\n      (0x2776 <= codePoint && codePoint <= 0x277F) ||\n      (0x2B55 <= codePoint && codePoint <= 0x2B59) ||\n      (0x3248 <= codePoint && codePoint <= 0x324F) ||\n      (0xE000 <= codePoint && codePoint <= 0xF8FF) ||\n      (0xFE00 <= codePoint && codePoint <= 0xFE0F) ||\n      (0xFFFD == codePoint) ||\n      (0x1F100 <= codePoint && codePoint <= 0x1F10A) ||\n      (0x1F110 <= codePoint && codePoint <= 0x1F12D) ||\n      (0x1F130 <= codePoint && codePoint <= 0x1F169) ||\n      (0x1F170 <= codePoint && codePoint <= 0x1F19A) ||\n      (0xE0100 <= codePoint && codePoint <= 0xE01EF) ||\n      (0xF0000 <= codePoint && codePoint <= 0xFFFFD) ||\n      (0x100000 <= codePoint && codePoint <= 0x10FFFD)) {\n    return 'A';\n  }\n\n  return 'N';\n};\n\neaw.characterLength = function(character) {\n  var code = this.eastAsianWidth(character);\n  if (code == 'F' || code == 'W' || code == 'A') {\n    return 2;\n  } else {\n    return 1;\n  }\n};\n\n// Split a string considering surrogate-pairs.\nfunction stringToArray(string) {\n  return string.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g) || [];\n}\n\neaw.length = function(string) {\n  var characters = stringToArray(string);\n  var len = 0;\n  for (var i = 0; i < characters.length; i++) {\n    len = len + this.characterLength(characters[i]);\n  }\n  return len;\n};\n\neaw.slice = function(text, start, end) {\n  textLen = eaw.length(text)\n  start = start ? start : 0;\n  end = end ? end : 1;\n  if (start < 0) {\n      start = textLen + start;\n  }\n  if (end < 0) {\n      end = textLen + end;\n  }\n  var result = '';\n  var eawLen = 0;\n  var chars = stringToArray(text);\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n    var charLen = eaw.length(char);\n    if (eawLen >= start - (charLen == 2 ? 1 : 0)) {\n        if (eawLen + charLen <= end) {\n            result += char;\n        } else {\n            break;\n        }\n    }\n    eawLen += charLen;\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/eastasianwidth/eastasianwidth.js?");

/***/ }),

/***/ "./node_modules/emoji-regex/index.js":
/*!*******************************************!*\
  !*** ./node_modules/emoji-regex/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC)?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\uD83D\\uDC41\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\u2764\\uFE0F|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD1D\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/emoji-regex/index.js?");

/***/ }),

/***/ "./node_modules/has-flag/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-flag/index.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/has-flag/index.js?");

/***/ }),

/***/ "./node_modules/is-fullwidth-code-point/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/is-fullwidth-code-point/index.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("/* eslint-disable yoda */\n\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports[\"default\"] = isFullwidthCodePoint;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/is-fullwidth-code-point/index.js?");

/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./node_modules/has-flag/index.js\");\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/supports-color/index.js?");

/***/ }),

/***/ "./src/WORD_LIST.ts":
/*!**************************!*\
  !*** ./src/WORD_LIST.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WORD_LIST\": () => (/* binding */ WORD_LIST),\n/* harmony export */   \"SOLUTIONS\": () => (/* binding */ SOLUTIONS),\n/* harmony export */   \"DATE_OFFSET\": () => (/* binding */ DATE_OFFSET),\n/* harmony export */   \"getSolutionForDate\": () => (/* binding */ getSolutionForDate)\n/* harmony export */ });\nvar WORD_LIST = [\n    \"aahed\",\n    \"aalii\",\n    \"aargh\",\n    \"aarti\",\n    \"abaca\",\n    \"abaci\",\n    \"abacs\",\n    \"abaft\",\n    \"abaka\",\n    \"abamp\",\n    \"aband\",\n    \"abash\",\n    \"abask\",\n    \"abaya\",\n    \"abbas\",\n    \"abbed\",\n    \"abbes\",\n    \"abcee\",\n    \"abeam\",\n    \"abear\",\n    \"abele\",\n    \"abers\",\n    \"abets\",\n    \"abies\",\n    \"abler\",\n    \"ables\",\n    \"ablet\",\n    \"ablow\",\n    \"abmho\",\n    \"abohm\",\n    \"aboil\",\n    \"aboma\",\n    \"aboon\",\n    \"abord\",\n    \"abore\",\n    \"abram\",\n    \"abray\",\n    \"abrim\",\n    \"abrin\",\n    \"abris\",\n    \"absey\",\n    \"absit\",\n    \"abuna\",\n    \"abune\",\n    \"abuts\",\n    \"abuzz\",\n    \"abyes\",\n    \"abysm\",\n    \"acais\",\n    \"acari\",\n    \"accas\",\n    \"accoy\",\n    \"acerb\",\n    \"acers\",\n    \"aceta\",\n    \"achar\",\n    \"ached\",\n    \"aches\",\n    \"achoo\",\n    \"acids\",\n    \"acidy\",\n    \"acing\",\n    \"acini\",\n    \"ackee\",\n    \"acker\",\n    \"acmes\",\n    \"acmic\",\n    \"acned\",\n    \"acnes\",\n    \"acock\",\n    \"acold\",\n    \"acred\",\n    \"acres\",\n    \"acros\",\n    \"acted\",\n    \"actin\",\n    \"acton\",\n    \"acyls\",\n    \"adaws\",\n    \"adays\",\n    \"adbot\",\n    \"addax\",\n    \"added\",\n    \"adder\",\n    \"addio\",\n    \"addle\",\n    \"adeem\",\n    \"adhan\",\n    \"adieu\",\n    \"adios\",\n    \"adits\",\n    \"adman\",\n    \"admen\",\n    \"admix\",\n    \"adobo\",\n    \"adown\",\n    \"adoze\",\n    \"adrad\",\n    \"adred\",\n    \"adsum\",\n    \"aduki\",\n    \"adunc\",\n    \"adust\",\n    \"advew\",\n    \"adyta\",\n    \"adzed\",\n    \"adzes\",\n    \"aecia\",\n    \"aedes\",\n    \"aegis\",\n    \"aeons\",\n    \"aerie\",\n    \"aeros\",\n    \"aesir\",\n    \"afald\",\n    \"afara\",\n    \"afars\",\n    \"afear\",\n    \"aflaj\",\n    \"afore\",\n    \"afrit\",\n    \"afros\",\n    \"agama\",\n    \"agami\",\n    \"agars\",\n    \"agast\",\n    \"agave\",\n    \"agaze\",\n    \"agene\",\n    \"agers\",\n    \"agger\",\n    \"aggie\",\n    \"aggri\",\n    \"aggro\",\n    \"aggry\",\n    \"aghas\",\n    \"agila\",\n    \"agios\",\n    \"agism\",\n    \"agist\",\n    \"agita\",\n    \"aglee\",\n    \"aglet\",\n    \"agley\",\n    \"agloo\",\n    \"aglus\",\n    \"agmas\",\n    \"agoge\",\n    \"agone\",\n    \"agons\",\n    \"agood\",\n    \"agria\",\n    \"agrin\",\n    \"agros\",\n    \"agued\",\n    \"agues\",\n    \"aguna\",\n    \"aguti\",\n    \"aheap\",\n    \"ahent\",\n    \"ahigh\",\n    \"ahind\",\n    \"ahing\",\n    \"ahint\",\n    \"ahold\",\n    \"ahull\",\n    \"ahuru\",\n    \"aidas\",\n    \"aided\",\n    \"aides\",\n    \"aidoi\",\n    \"aidos\",\n    \"aiery\",\n    \"aigas\",\n    \"aight\",\n    \"ailed\",\n    \"aimed\",\n    \"aimer\",\n    \"ainee\",\n    \"ainga\",\n    \"aioli\",\n    \"aired\",\n    \"airer\",\n    \"airns\",\n    \"airth\",\n    \"airts\",\n    \"aitch\",\n    \"aitus\",\n    \"aiver\",\n    \"aiyee\",\n    \"aizle\",\n    \"ajies\",\n    \"ajiva\",\n    \"ajuga\",\n    \"ajwan\",\n    \"akees\",\n    \"akela\",\n    \"akene\",\n    \"aking\",\n    \"akita\",\n    \"akkas\",\n    \"alaap\",\n    \"alack\",\n    \"alamo\",\n    \"aland\",\n    \"alane\",\n    \"alang\",\n    \"alans\",\n    \"alant\",\n    \"alapa\",\n    \"alaps\",\n    \"alary\",\n    \"alate\",\n    \"alays\",\n    \"albas\",\n    \"albee\",\n    \"alcid\",\n    \"alcos\",\n    \"aldea\",\n    \"alder\",\n    \"aldol\",\n    \"aleck\",\n    \"alecs\",\n    \"alefs\",\n    \"aleft\",\n    \"aleph\",\n    \"alews\",\n    \"aleye\",\n    \"alfas\",\n    \"algal\",\n    \"algas\",\n    \"algid\",\n    \"algin\",\n    \"algor\",\n    \"algum\",\n    \"alias\",\n    \"alifs\",\n    \"aline\",\n    \"alist\",\n    \"aliya\",\n    \"alkie\",\n    \"alkos\",\n    \"alkyd\",\n    \"alkyl\",\n    \"allee\",\n    \"allel\",\n    \"allis\",\n    \"allod\",\n    \"allyl\",\n    \"almah\",\n    \"almas\",\n    \"almeh\",\n    \"almes\",\n    \"almud\",\n    \"almug\",\n    \"alods\",\n    \"aloed\",\n    \"aloes\",\n    \"aloha\",\n    \"aloin\",\n    \"aloos\",\n    \"alowe\",\n    \"altho\",\n    \"altos\",\n    \"alula\",\n    \"alums\",\n    \"alure\",\n    \"alvar\",\n    \"alway\",\n    \"amahs\",\n    \"amain\",\n    \"amate\",\n    \"amaut\",\n    \"amban\",\n    \"ambit\",\n    \"ambos\",\n    \"ambry\",\n    \"ameba\",\n    \"ameer\",\n    \"amene\",\n    \"amens\",\n    \"ament\",\n    \"amias\",\n    \"amice\",\n    \"amici\",\n    \"amide\",\n    \"amido\",\n    \"amids\",\n    \"amies\",\n    \"amiga\",\n    \"amigo\",\n    \"amine\",\n    \"amino\",\n    \"amins\",\n    \"amirs\",\n    \"amlas\",\n    \"amman\",\n    \"ammon\",\n    \"ammos\",\n    \"amnia\",\n    \"amnic\",\n    \"amnio\",\n    \"amoks\",\n    \"amole\",\n    \"amort\",\n    \"amour\",\n    \"amove\",\n    \"amowt\",\n    \"amped\",\n    \"ampul\",\n    \"amrit\",\n    \"amuck\",\n    \"amyls\",\n    \"anana\",\n    \"anata\",\n    \"ancho\",\n    \"ancle\",\n    \"ancon\",\n    \"andro\",\n    \"anear\",\n    \"anele\",\n    \"anent\",\n    \"angas\",\n    \"anglo\",\n    \"anigh\",\n    \"anile\",\n    \"anils\",\n    \"anima\",\n    \"animi\",\n    \"anion\",\n    \"anise\",\n    \"anker\",\n    \"ankhs\",\n    \"ankus\",\n    \"anlas\",\n    \"annal\",\n    \"annas\",\n    \"annat\",\n    \"anoas\",\n    \"anole\",\n    \"anomy\",\n    \"ansae\",\n    \"antae\",\n    \"antar\",\n    \"antas\",\n    \"anted\",\n    \"antes\",\n    \"antis\",\n    \"antra\",\n    \"antre\",\n    \"antsy\",\n    \"anura\",\n    \"anyon\",\n    \"apace\",\n    \"apage\",\n    \"apaid\",\n    \"apayd\",\n    \"apays\",\n    \"apeak\",\n    \"apeek\",\n    \"apers\",\n    \"apert\",\n    \"apery\",\n    \"apgar\",\n    \"aphis\",\n    \"apian\",\n    \"apiol\",\n    \"apish\",\n    \"apism\",\n    \"apode\",\n    \"apods\",\n    \"apoop\",\n    \"aport\",\n    \"appal\",\n    \"appay\",\n    \"appel\",\n    \"appro\",\n    \"appui\",\n    \"appuy\",\n    \"apres\",\n    \"apses\",\n    \"apsis\",\n    \"apsos\",\n    \"apted\",\n    \"apter\",\n    \"aquae\",\n    \"aquas\",\n    \"araba\",\n    \"araks\",\n    \"arame\",\n    \"arars\",\n    \"arbas\",\n    \"arced\",\n    \"archi\",\n    \"arcos\",\n    \"arcus\",\n    \"ardeb\",\n    \"ardri\",\n    \"aread\",\n    \"areae\",\n    \"areal\",\n    \"arear\",\n    \"areas\",\n    \"areca\",\n    \"aredd\",\n    \"arede\",\n    \"arefy\",\n    \"areic\",\n    \"arene\",\n    \"arepa\",\n    \"arere\",\n    \"arete\",\n    \"arets\",\n    \"arett\",\n    \"argal\",\n    \"argan\",\n    \"argil\",\n    \"argle\",\n    \"argol\",\n    \"argon\",\n    \"argot\",\n    \"argus\",\n    \"arhat\",\n    \"arias\",\n    \"ariel\",\n    \"ariki\",\n    \"arils\",\n    \"ariot\",\n    \"arish\",\n    \"arked\",\n    \"arled\",\n    \"arles\",\n    \"armed\",\n    \"armer\",\n    \"armet\",\n    \"armil\",\n    \"arnas\",\n    \"arnut\",\n    \"aroba\",\n    \"aroha\",\n    \"aroid\",\n    \"arpas\",\n    \"arpen\",\n    \"arrah\",\n    \"arras\",\n    \"arret\",\n    \"arris\",\n    \"arroz\",\n    \"arsed\",\n    \"arses\",\n    \"arsey\",\n    \"arsis\",\n    \"artal\",\n    \"artel\",\n    \"artic\",\n    \"artis\",\n    \"aruhe\",\n    \"arums\",\n    \"arval\",\n    \"arvee\",\n    \"arvos\",\n    \"aryls\",\n    \"asana\",\n    \"ascon\",\n    \"ascus\",\n    \"asdic\",\n    \"ashed\",\n    \"ashes\",\n    \"ashet\",\n    \"asked\",\n    \"asker\",\n    \"askoi\",\n    \"askos\",\n    \"aspen\",\n    \"asper\",\n    \"aspic\",\n    \"aspie\",\n    \"aspis\",\n    \"aspro\",\n    \"assai\",\n    \"assam\",\n    \"asses\",\n    \"assez\",\n    \"assot\",\n    \"aster\",\n    \"astir\",\n    \"astun\",\n    \"asura\",\n    \"asway\",\n    \"aswim\",\n    \"asyla\",\n    \"ataps\",\n    \"ataxy\",\n    \"atigi\",\n    \"atilt\",\n    \"atimy\",\n    \"atlas\",\n    \"atman\",\n    \"atmas\",\n    \"atmos\",\n    \"atocs\",\n    \"atoke\",\n    \"atoks\",\n    \"atoms\",\n    \"atomy\",\n    \"atony\",\n    \"atopy\",\n    \"atria\",\n    \"atrip\",\n    \"attap\",\n    \"attar\",\n    \"atuas\",\n    \"audad\",\n    \"auger\",\n    \"aught\",\n    \"aulas\",\n    \"aulic\",\n    \"auloi\",\n    \"aulos\",\n    \"aumil\",\n    \"aunes\",\n    \"aunts\",\n    \"aurae\",\n    \"aural\",\n    \"aurar\",\n    \"auras\",\n    \"aurei\",\n    \"aures\",\n    \"auric\",\n    \"auris\",\n    \"aurum\",\n    \"autos\",\n    \"auxin\",\n    \"avale\",\n    \"avant\",\n    \"avast\",\n    \"avels\",\n    \"avens\",\n    \"avers\",\n    \"avgas\",\n    \"avine\",\n    \"avion\",\n    \"avise\",\n    \"aviso\",\n    \"avize\",\n    \"avows\",\n    \"avyze\",\n    \"awarn\",\n    \"awato\",\n    \"awave\",\n    \"aways\",\n    \"awdls\",\n    \"aweel\",\n    \"aweto\",\n    \"awing\",\n    \"awmry\",\n    \"awned\",\n    \"awner\",\n    \"awols\",\n    \"awork\",\n    \"axels\",\n    \"axile\",\n    \"axils\",\n    \"axing\",\n    \"axite\",\n    \"axled\",\n    \"axles\",\n    \"axman\",\n    \"axmen\",\n    \"axoid\",\n    \"axone\",\n    \"axons\",\n    \"ayahs\",\n    \"ayaya\",\n    \"ayelp\",\n    \"aygre\",\n    \"ayins\",\n    \"ayont\",\n    \"ayres\",\n    \"ayrie\",\n    \"azans\",\n    \"azide\",\n    \"azido\",\n    \"azine\",\n    \"azlon\",\n    \"azoic\",\n    \"azole\",\n    \"azons\",\n    \"azote\",\n    \"azoth\",\n    \"azuki\",\n    \"azurn\",\n    \"azury\",\n    \"azygy\",\n    \"azyme\",\n    \"azyms\",\n    \"baaed\",\n    \"baals\",\n    \"babas\",\n    \"babel\",\n    \"babes\",\n    \"babka\",\n    \"baboo\",\n    \"babul\",\n    \"babus\",\n    \"bacca\",\n    \"bacco\",\n    \"baccy\",\n    \"bacha\",\n    \"bachs\",\n    \"backs\",\n    \"baddy\",\n    \"baels\",\n    \"baffs\",\n    \"baffy\",\n    \"bafts\",\n    \"baghs\",\n    \"bagie\",\n    \"bahts\",\n    \"bahus\",\n    \"bahut\",\n    \"bails\",\n    \"bairn\",\n    \"baisa\",\n    \"baith\",\n    \"baits\",\n    \"baiza\",\n    \"baize\",\n    \"bajan\",\n    \"bajra\",\n    \"bajri\",\n    \"bajus\",\n    \"baked\",\n    \"baken\",\n    \"bakes\",\n    \"bakra\",\n    \"balas\",\n    \"balds\",\n    \"baldy\",\n    \"baled\",\n    \"bales\",\n    \"balks\",\n    \"balky\",\n    \"balls\",\n    \"bally\",\n    \"balms\",\n    \"baloo\",\n    \"balsa\",\n    \"balti\",\n    \"balun\",\n    \"balus\",\n    \"bambi\",\n    \"banak\",\n    \"banco\",\n    \"bancs\",\n    \"banda\",\n    \"bandh\",\n    \"bands\",\n    \"bandy\",\n    \"baned\",\n    \"banes\",\n    \"bangs\",\n    \"bania\",\n    \"banks\",\n    \"banns\",\n    \"bants\",\n    \"bantu\",\n    \"banty\",\n    \"banya\",\n    \"bapus\",\n    \"barbe\",\n    \"barbs\",\n    \"barby\",\n    \"barca\",\n    \"barde\",\n    \"bardo\",\n    \"bards\",\n    \"bardy\",\n    \"bared\",\n    \"barer\",\n    \"bares\",\n    \"barfi\",\n    \"barfs\",\n    \"baric\",\n    \"barks\",\n    \"barky\",\n    \"barms\",\n    \"barmy\",\n    \"barns\",\n    \"barny\",\n    \"barps\",\n    \"barra\",\n    \"barre\",\n    \"barro\",\n    \"barry\",\n    \"barye\",\n    \"basan\",\n    \"based\",\n    \"basen\",\n    \"baser\",\n    \"bases\",\n    \"basho\",\n    \"basij\",\n    \"basks\",\n    \"bason\",\n    \"basse\",\n    \"bassi\",\n    \"basso\",\n    \"bassy\",\n    \"basta\",\n    \"basti\",\n    \"basto\",\n    \"basts\",\n    \"bated\",\n    \"bates\",\n    \"baths\",\n    \"batik\",\n    \"batta\",\n    \"batts\",\n    \"battu\",\n    \"bauds\",\n    \"bauks\",\n    \"baulk\",\n    \"baurs\",\n    \"bavin\",\n    \"bawds\",\n    \"bawks\",\n    \"bawls\",\n    \"bawns\",\n    \"bawrs\",\n    \"bawty\",\n    \"bayed\",\n    \"bayer\",\n    \"bayes\",\n    \"bayle\",\n    \"bayts\",\n    \"bazar\",\n    \"bazoo\",\n    \"beads\",\n    \"beaks\",\n    \"beaky\",\n    \"beals\",\n    \"beams\",\n    \"beamy\",\n    \"beano\",\n    \"beans\",\n    \"beany\",\n    \"beare\",\n    \"bears\",\n    \"beath\",\n    \"beats\",\n    \"beaty\",\n    \"beaus\",\n    \"beaut\",\n    \"beaux\",\n    \"bebop\",\n    \"becap\",\n    \"becke\",\n    \"becks\",\n    \"bedad\",\n    \"bedel\",\n    \"bedes\",\n    \"bedew\",\n    \"bedim\",\n    \"bedye\",\n    \"beedi\",\n    \"beefs\",\n    \"beeps\",\n    \"beers\",\n    \"beery\",\n    \"beets\",\n    \"befog\",\n    \"begad\",\n    \"begar\",\n    \"begem\",\n    \"begot\",\n    \"begum\",\n    \"beige\",\n    \"beigy\",\n    \"beins\",\n    \"bekah\",\n    \"belah\",\n    \"belar\",\n    \"belay\",\n    \"belee\",\n    \"belga\",\n    \"bells\",\n    \"belon\",\n    \"belts\",\n    \"bemad\",\n    \"bemas\",\n    \"bemix\",\n    \"bemud\",\n    \"bends\",\n    \"bendy\",\n    \"benes\",\n    \"benet\",\n    \"benga\",\n    \"benis\",\n    \"benne\",\n    \"benni\",\n    \"benny\",\n    \"bento\",\n    \"bents\",\n    \"benty\",\n    \"bepat\",\n    \"beray\",\n    \"beres\",\n    \"bergs\",\n    \"berko\",\n    \"berks\",\n    \"berme\",\n    \"berms\",\n    \"berob\",\n    \"beryl\",\n    \"besat\",\n    \"besaw\",\n    \"besee\",\n    \"beses\",\n    \"besit\",\n    \"besom\",\n    \"besot\",\n    \"besti\",\n    \"bests\",\n    \"betas\",\n    \"beted\",\n    \"betes\",\n    \"beths\",\n    \"betid\",\n    \"beton\",\n    \"betta\",\n    \"betty\",\n    \"bever\",\n    \"bevor\",\n    \"bevue\",\n    \"bevvy\",\n    \"bewet\",\n    \"bewig\",\n    \"bezes\",\n    \"bezil\",\n    \"bezzy\",\n    \"bhais\",\n    \"bhaji\",\n    \"bhang\",\n    \"bhats\",\n    \"bhels\",\n    \"bhoot\",\n    \"bhuna\",\n    \"bhuts\",\n    \"biach\",\n    \"biali\",\n    \"bialy\",\n    \"bibbs\",\n    \"bibes\",\n    \"biccy\",\n    \"bices\",\n    \"bided\",\n    \"bider\",\n    \"bides\",\n    \"bidet\",\n    \"bidis\",\n    \"bidon\",\n    \"bield\",\n    \"biers\",\n    \"biffo\",\n    \"biffs\",\n    \"biffy\",\n    \"bifid\",\n    \"bigae\",\n    \"biggs\",\n    \"biggy\",\n    \"bigha\",\n    \"bight\",\n    \"bigly\",\n    \"bigos\",\n    \"bijou\",\n    \"biked\",\n    \"biker\",\n    \"bikes\",\n    \"bikie\",\n    \"bilbo\",\n    \"bilby\",\n    \"biled\",\n    \"biles\",\n    \"bilgy\",\n    \"bilks\",\n    \"bills\",\n    \"bimah\",\n    \"bimas\",\n    \"bimbo\",\n    \"binal\",\n    \"bindi\",\n    \"binds\",\n    \"biner\",\n    \"bines\",\n    \"bings\",\n    \"bingy\",\n    \"binit\",\n    \"binks\",\n    \"bints\",\n    \"biogs\",\n    \"biont\",\n    \"biota\",\n    \"biped\",\n    \"bipod\",\n    \"birds\",\n    \"birks\",\n    \"birle\",\n    \"birls\",\n    \"biros\",\n    \"birrs\",\n    \"birse\",\n    \"birsy\",\n    \"bises\",\n    \"bisks\",\n    \"bisom\",\n    \"bitch\",\n    \"biter\",\n    \"bites\",\n    \"bitos\",\n    \"bitou\",\n    \"bitsy\",\n    \"bitte\",\n    \"bitts\",\n    \"bivia\",\n    \"bivvy\",\n    \"bizes\",\n    \"bizzo\",\n    \"bizzy\",\n    \"blabs\",\n    \"blads\",\n    \"blady\",\n    \"blaer\",\n    \"blaes\",\n    \"blaff\",\n    \"blags\",\n    \"blahs\",\n    \"blain\",\n    \"blams\",\n    \"blart\",\n    \"blase\",\n    \"blash\",\n    \"blate\",\n    \"blats\",\n    \"blatt\",\n    \"blaud\",\n    \"blawn\",\n    \"blaws\",\n    \"blays\",\n    \"blear\",\n    \"blebs\",\n    \"blech\",\n    \"blees\",\n    \"blent\",\n    \"blert\",\n    \"blest\",\n    \"blets\",\n    \"bleys\",\n    \"blimy\",\n    \"bling\",\n    \"blini\",\n    \"blins\",\n    \"bliny\",\n    \"blips\",\n    \"blist\",\n    \"blite\",\n    \"blits\",\n    \"blive\",\n    \"blobs\",\n    \"blocs\",\n    \"blogs\",\n    \"blook\",\n    \"bloop\",\n    \"blore\",\n    \"blots\",\n    \"blows\",\n    \"blowy\",\n    \"blubs\",\n    \"blude\",\n    \"bluds\",\n    \"bludy\",\n    \"blued\",\n    \"blues\",\n    \"bluet\",\n    \"bluey\",\n    \"bluid\",\n    \"blume\",\n    \"blunk\",\n    \"blurs\",\n    \"blype\",\n    \"boabs\",\n    \"boaks\",\n    \"boars\",\n    \"boart\",\n    \"boats\",\n    \"bobac\",\n    \"bobak\",\n    \"bobas\",\n    \"bobol\",\n    \"bobos\",\n    \"bocca\",\n    \"bocce\",\n    \"bocci\",\n    \"boche\",\n    \"bocks\",\n    \"boded\",\n    \"bodes\",\n    \"bodge\",\n    \"bodhi\",\n    \"bodle\",\n    \"boeps\",\n    \"boets\",\n    \"boeuf\",\n    \"boffo\",\n    \"boffs\",\n    \"bogan\",\n    \"bogey\",\n    \"boggy\",\n    \"bogie\",\n    \"bogle\",\n    \"bogue\",\n    \"bogus\",\n    \"bohea\",\n    \"bohos\",\n    \"boils\",\n    \"boing\",\n    \"boink\",\n    \"boite\",\n    \"boked\",\n    \"bokeh\",\n    \"bokes\",\n    \"bokos\",\n    \"bolar\",\n    \"bolas\",\n    \"bolds\",\n    \"boles\",\n    \"bolix\",\n    \"bolls\",\n    \"bolos\",\n    \"bolts\",\n    \"bolus\",\n    \"bomas\",\n    \"bombe\",\n    \"bombo\",\n    \"bombs\",\n    \"bonce\",\n    \"bonds\",\n    \"boned\",\n    \"boner\",\n    \"bones\",\n    \"bongs\",\n    \"bonie\",\n    \"bonks\",\n    \"bonne\",\n    \"bonny\",\n    \"bonza\",\n    \"bonze\",\n    \"booai\",\n    \"booay\",\n    \"boobs\",\n    \"boody\",\n    \"booed\",\n    \"boofy\",\n    \"boogy\",\n    \"boohs\",\n    \"books\",\n    \"booky\",\n    \"bools\",\n    \"booms\",\n    \"boomy\",\n    \"boong\",\n    \"boons\",\n    \"boord\",\n    \"boors\",\n    \"boose\",\n    \"boots\",\n    \"boppy\",\n    \"borak\",\n    \"boral\",\n    \"boras\",\n    \"borde\",\n    \"bords\",\n    \"bored\",\n    \"boree\",\n    \"borel\",\n    \"borer\",\n    \"bores\",\n    \"borgo\",\n    \"boric\",\n    \"borks\",\n    \"borms\",\n    \"borna\",\n    \"boron\",\n    \"borts\",\n    \"borty\",\n    \"bortz\",\n    \"bosie\",\n    \"bosks\",\n    \"bosky\",\n    \"boson\",\n    \"bosun\",\n    \"botas\",\n    \"botel\",\n    \"botes\",\n    \"bothy\",\n    \"botte\",\n    \"botts\",\n    \"botty\",\n    \"bouge\",\n    \"bouks\",\n    \"boult\",\n    \"bouns\",\n    \"bourd\",\n    \"bourg\",\n    \"bourn\",\n    \"bouse\",\n    \"bousy\",\n    \"bouts\",\n    \"bovid\",\n    \"bowat\",\n    \"bowed\",\n    \"bower\",\n    \"bowes\",\n    \"bowet\",\n    \"bowie\",\n    \"bowls\",\n    \"bowne\",\n    \"bowrs\",\n    \"bowse\",\n    \"boxed\",\n    \"boxen\",\n    \"boxes\",\n    \"boxla\",\n    \"boxty\",\n    \"boyar\",\n    \"boyau\",\n    \"boyed\",\n    \"boyfs\",\n    \"boygs\",\n    \"boyla\",\n    \"boyos\",\n    \"boysy\",\n    \"bozos\",\n    \"braai\",\n    \"brach\",\n    \"brack\",\n    \"bract\",\n    \"brads\",\n    \"braes\",\n    \"brags\",\n    \"brail\",\n    \"braks\",\n    \"braky\",\n    \"brame\",\n    \"brane\",\n    \"brank\",\n    \"brans\",\n    \"brant\",\n    \"brast\",\n    \"brats\",\n    \"brava\",\n    \"bravi\",\n    \"braws\",\n    \"braxy\",\n    \"brays\",\n    \"braza\",\n    \"braze\",\n    \"bream\",\n    \"brede\",\n    \"breds\",\n    \"breem\",\n    \"breer\",\n    \"brees\",\n    \"breid\",\n    \"breis\",\n    \"breme\",\n    \"brens\",\n    \"brent\",\n    \"brere\",\n    \"brers\",\n    \"breve\",\n    \"brews\",\n    \"breys\",\n    \"brier\",\n    \"bries\",\n    \"brigs\",\n    \"briki\",\n    \"briks\",\n    \"brill\",\n    \"brims\",\n    \"brins\",\n    \"brios\",\n    \"brise\",\n    \"briss\",\n    \"brith\",\n    \"brits\",\n    \"britt\",\n    \"brize\",\n    \"broch\",\n    \"brock\",\n    \"brods\",\n    \"brogh\",\n    \"brogs\",\n    \"brome\",\n    \"bromo\",\n    \"bronc\",\n    \"brond\",\n    \"brool\",\n    \"broos\",\n    \"brose\",\n    \"brosy\",\n    \"brows\",\n    \"brugh\",\n    \"bruin\",\n    \"bruit\",\n    \"brule\",\n    \"brume\",\n    \"brung\",\n    \"brusk\",\n    \"brust\",\n    \"bruts\",\n    \"buats\",\n    \"buaze\",\n    \"bubal\",\n    \"bubas\",\n    \"bubba\",\n    \"bubbe\",\n    \"bubby\",\n    \"bubus\",\n    \"buchu\",\n    \"bucko\",\n    \"bucks\",\n    \"bucku\",\n    \"budas\",\n    \"budis\",\n    \"budos\",\n    \"buffa\",\n    \"buffe\",\n    \"buffi\",\n    \"buffo\",\n    \"buffs\",\n    \"buffy\",\n    \"bufos\",\n    \"bufty\",\n    \"buhls\",\n    \"buhrs\",\n    \"buiks\",\n    \"buist\",\n    \"bukes\",\n    \"bulbs\",\n    \"bulgy\",\n    \"bulks\",\n    \"bulla\",\n    \"bulls\",\n    \"bulse\",\n    \"bumbo\",\n    \"bumfs\",\n    \"bumph\",\n    \"bumps\",\n    \"bumpy\",\n    \"bunas\",\n    \"bunce\",\n    \"bunco\",\n    \"bunde\",\n    \"bundh\",\n    \"bunds\",\n    \"bundt\",\n    \"bundu\",\n    \"bundy\",\n    \"bungs\",\n    \"bungy\",\n    \"bunia\",\n    \"bunje\",\n    \"bunjy\",\n    \"bunko\",\n    \"bunks\",\n    \"bunns\",\n    \"bunts\",\n    \"bunty\",\n    \"bunya\",\n    \"buoys\",\n    \"buppy\",\n    \"buran\",\n    \"buras\",\n    \"burbs\",\n    \"burds\",\n    \"buret\",\n    \"burfi\",\n    \"burgh\",\n    \"burgs\",\n    \"burin\",\n    \"burka\",\n    \"burke\",\n    \"burks\",\n    \"burls\",\n    \"burns\",\n    \"buroo\",\n    \"burps\",\n    \"burqa\",\n    \"burro\",\n    \"burrs\",\n    \"burry\",\n    \"bursa\",\n    \"burse\",\n    \"busby\",\n    \"buses\",\n    \"busks\",\n    \"busky\",\n    \"bussu\",\n    \"busti\",\n    \"busts\",\n    \"busty\",\n    \"buteo\",\n    \"butes\",\n    \"butle\",\n    \"butoh\",\n    \"butts\",\n    \"butty\",\n    \"butut\",\n    \"butyl\",\n    \"buzzy\",\n    \"bwana\",\n    \"bwazi\",\n    \"byded\",\n    \"bydes\",\n    \"byked\",\n    \"bykes\",\n    \"byres\",\n    \"byrls\",\n    \"byssi\",\n    \"bytes\",\n    \"byway\",\n    \"caaed\",\n    \"cabas\",\n    \"caber\",\n    \"cabob\",\n    \"caboc\",\n    \"cabre\",\n    \"cacas\",\n    \"cacks\",\n    \"cacky\",\n    \"cadee\",\n    \"cades\",\n    \"cadge\",\n    \"cadgy\",\n    \"cadie\",\n    \"cadis\",\n    \"cadre\",\n    \"caeca\",\n    \"caese\",\n    \"cafes\",\n    \"caffs\",\n    \"caged\",\n    \"cager\",\n    \"cages\",\n    \"cagot\",\n    \"cahow\",\n    \"caids\",\n    \"cains\",\n    \"caird\",\n    \"cajon\",\n    \"cajun\",\n    \"caked\",\n    \"cakes\",\n    \"cakey\",\n    \"calfs\",\n    \"calid\",\n    \"calif\",\n    \"calix\",\n    \"calks\",\n    \"calla\",\n    \"calls\",\n    \"calms\",\n    \"calmy\",\n    \"calos\",\n    \"calpa\",\n    \"calps\",\n    \"calve\",\n    \"calyx\",\n    \"caman\",\n    \"camas\",\n    \"cames\",\n    \"camis\",\n    \"camos\",\n    \"campi\",\n    \"campo\",\n    \"camps\",\n    \"campy\",\n    \"camus\",\n    \"caned\",\n    \"caneh\",\n    \"caner\",\n    \"canes\",\n    \"cangs\",\n    \"canid\",\n    \"canna\",\n    \"canns\",\n    \"canso\",\n    \"canst\",\n    \"canto\",\n    \"cants\",\n    \"canty\",\n    \"capas\",\n    \"caped\",\n    \"capes\",\n    \"capex\",\n    \"caphs\",\n    \"capiz\",\n    \"caple\",\n    \"capon\",\n    \"capos\",\n    \"capot\",\n    \"capri\",\n    \"capul\",\n    \"carap\",\n    \"carbo\",\n    \"carbs\",\n    \"carby\",\n    \"cardi\",\n    \"cards\",\n    \"cardy\",\n    \"cared\",\n    \"carer\",\n    \"cares\",\n    \"caret\",\n    \"carex\",\n    \"carks\",\n    \"carle\",\n    \"carls\",\n    \"carns\",\n    \"carny\",\n    \"carob\",\n    \"carom\",\n    \"caron\",\n    \"carpi\",\n    \"carps\",\n    \"carrs\",\n    \"carse\",\n    \"carta\",\n    \"carte\",\n    \"carts\",\n    \"carvy\",\n    \"casas\",\n    \"casco\",\n    \"cased\",\n    \"cases\",\n    \"casks\",\n    \"casky\",\n    \"casts\",\n    \"casus\",\n    \"cates\",\n    \"cauda\",\n    \"cauks\",\n    \"cauld\",\n    \"cauls\",\n    \"caums\",\n    \"caups\",\n    \"cauri\",\n    \"causa\",\n    \"cavas\",\n    \"caved\",\n    \"cavel\",\n    \"caver\",\n    \"caves\",\n    \"cavie\",\n    \"cawed\",\n    \"cawks\",\n    \"caxon\",\n    \"ceaze\",\n    \"cebid\",\n    \"cecal\",\n    \"cecum\",\n    \"ceded\",\n    \"ceder\",\n    \"cedes\",\n    \"cedis\",\n    \"ceiba\",\n    \"ceili\",\n    \"ceils\",\n    \"celeb\",\n    \"cella\",\n    \"celli\",\n    \"cells\",\n    \"celom\",\n    \"celts\",\n    \"cense\",\n    \"cento\",\n    \"cents\",\n    \"centu\",\n    \"ceorl\",\n    \"cepes\",\n    \"cerci\",\n    \"cered\",\n    \"ceres\",\n    \"cerge\",\n    \"ceria\",\n    \"ceric\",\n    \"cerne\",\n    \"ceroc\",\n    \"ceros\",\n    \"certs\",\n    \"certy\",\n    \"cesse\",\n    \"cesta\",\n    \"cesti\",\n    \"cetes\",\n    \"cetyl\",\n    \"cezve\",\n    \"chace\",\n    \"chack\",\n    \"chaco\",\n    \"chado\",\n    \"chads\",\n    \"chaft\",\n    \"chais\",\n    \"chals\",\n    \"chams\",\n    \"chana\",\n    \"chang\",\n    \"chank\",\n    \"chape\",\n    \"chaps\",\n    \"chapt\",\n    \"chara\",\n    \"chare\",\n    \"chark\",\n    \"charr\",\n    \"chars\",\n    \"chary\",\n    \"chats\",\n    \"chave\",\n    \"chavs\",\n    \"chawk\",\n    \"chaws\",\n    \"chaya\",\n    \"chays\",\n    \"cheep\",\n    \"chefs\",\n    \"cheka\",\n    \"chela\",\n    \"chelp\",\n    \"chemo\",\n    \"chems\",\n    \"chere\",\n    \"chert\",\n    \"cheth\",\n    \"chevy\",\n    \"chews\",\n    \"chewy\",\n    \"chiao\",\n    \"chias\",\n    \"chibs\",\n    \"chica\",\n    \"chich\",\n    \"chico\",\n    \"chics\",\n    \"chiel\",\n    \"chiks\",\n    \"chile\",\n    \"chimb\",\n    \"chimo\",\n    \"chimp\",\n    \"chine\",\n    \"ching\",\n    \"chink\",\n    \"chino\",\n    \"chins\",\n    \"chips\",\n    \"chirk\",\n    \"chirl\",\n    \"chirm\",\n    \"chiro\",\n    \"chirr\",\n    \"chirt\",\n    \"chiru\",\n    \"chits\",\n    \"chive\",\n    \"chivs\",\n    \"chivy\",\n    \"chizz\",\n    \"choco\",\n    \"chocs\",\n    \"chode\",\n    \"chogs\",\n    \"choil\",\n    \"choko\",\n    \"choky\",\n    \"chola\",\n    \"choli\",\n    \"cholo\",\n    \"chomp\",\n    \"chons\",\n    \"choof\",\n    \"chook\",\n    \"choom\",\n    \"choon\",\n    \"chops\",\n    \"chota\",\n    \"chott\",\n    \"chout\",\n    \"choux\",\n    \"chowk\",\n    \"chows\",\n    \"chubs\",\n    \"chufa\",\n    \"chuff\",\n    \"chugs\",\n    \"chums\",\n    \"churl\",\n    \"churr\",\n    \"chuse\",\n    \"chuts\",\n    \"chyle\",\n    \"chyme\",\n    \"chynd\",\n    \"cibol\",\n    \"cided\",\n    \"cides\",\n    \"ciels\",\n    \"ciggy\",\n    \"cilia\",\n    \"cills\",\n    \"cimar\",\n    \"cimex\",\n    \"cinct\",\n    \"cines\",\n    \"cinqs\",\n    \"cions\",\n    \"cippi\",\n    \"circs\",\n    \"cires\",\n    \"cirls\",\n    \"cirri\",\n    \"cisco\",\n    \"cissy\",\n    \"cists\",\n    \"cital\",\n    \"cited\",\n    \"citer\",\n    \"cites\",\n    \"cives\",\n    \"civet\",\n    \"civie\",\n    \"civvy\",\n    \"clach\",\n    \"clade\",\n    \"clads\",\n    \"claes\",\n    \"clags\",\n    \"clame\",\n    \"clams\",\n    \"clans\",\n    \"claps\",\n    \"clapt\",\n    \"claro\",\n    \"clart\",\n    \"clary\",\n    \"clast\",\n    \"clats\",\n    \"claut\",\n    \"clave\",\n    \"clavi\",\n    \"claws\",\n    \"clays\",\n    \"cleck\",\n    \"cleek\",\n    \"cleep\",\n    \"clefs\",\n    \"clegs\",\n    \"cleik\",\n    \"clems\",\n    \"clepe\",\n    \"clept\",\n    \"cleve\",\n    \"clews\",\n    \"clied\",\n    \"clies\",\n    \"clift\",\n    \"clime\",\n    \"cline\",\n    \"clint\",\n    \"clipe\",\n    \"clips\",\n    \"clipt\",\n    \"clits\",\n    \"cloam\",\n    \"clods\",\n    \"cloff\",\n    \"clogs\",\n    \"cloke\",\n    \"clomb\",\n    \"clomp\",\n    \"clonk\",\n    \"clons\",\n    \"cloop\",\n    \"cloot\",\n    \"clops\",\n    \"clote\",\n    \"clots\",\n    \"clour\",\n    \"clous\",\n    \"clows\",\n    \"cloye\",\n    \"cloys\",\n    \"cloze\",\n    \"clubs\",\n    \"clues\",\n    \"cluey\",\n    \"clunk\",\n    \"clype\",\n    \"cnida\",\n    \"coact\",\n    \"coady\",\n    \"coala\",\n    \"coals\",\n    \"coaly\",\n    \"coapt\",\n    \"coarb\",\n    \"coate\",\n    \"coati\",\n    \"coats\",\n    \"cobbs\",\n    \"cobby\",\n    \"cobia\",\n    \"coble\",\n    \"cobza\",\n    \"cocas\",\n    \"cocci\",\n    \"cocco\",\n    \"cocks\",\n    \"cocky\",\n    \"cocos\",\n    \"codas\",\n    \"codec\",\n    \"coded\",\n    \"coden\",\n    \"coder\",\n    \"codes\",\n    \"codex\",\n    \"codon\",\n    \"coeds\",\n    \"coffs\",\n    \"cogie\",\n    \"cogon\",\n    \"cogue\",\n    \"cohab\",\n    \"cohen\",\n    \"cohoe\",\n    \"cohog\",\n    \"cohos\",\n    \"coifs\",\n    \"coign\",\n    \"coils\",\n    \"coins\",\n    \"coirs\",\n    \"coits\",\n    \"coked\",\n    \"cokes\",\n    \"colas\",\n    \"colby\",\n    \"colds\",\n    \"coled\",\n    \"coles\",\n    \"coley\",\n    \"colic\",\n    \"colin\",\n    \"colls\",\n    \"colly\",\n    \"colog\",\n    \"colts\",\n    \"colza\",\n    \"comae\",\n    \"comal\",\n    \"comas\",\n    \"combe\",\n    \"combi\",\n    \"combo\",\n    \"combs\",\n    \"comby\",\n    \"comer\",\n    \"comes\",\n    \"comix\",\n    \"commo\",\n    \"comms\",\n    \"commy\",\n    \"compo\",\n    \"comps\",\n    \"compt\",\n    \"comte\",\n    \"comus\",\n    \"coned\",\n    \"cones\",\n    \"coney\",\n    \"confs\",\n    \"conga\",\n    \"conge\",\n    \"congo\",\n    \"conia\",\n    \"conin\",\n    \"conks\",\n    \"conky\",\n    \"conne\",\n    \"conns\",\n    \"conte\",\n    \"conto\",\n    \"conus\",\n    \"convo\",\n    \"cooch\",\n    \"cooed\",\n    \"cooee\",\n    \"cooer\",\n    \"cooey\",\n    \"coofs\",\n    \"cooks\",\n    \"cooky\",\n    \"cools\",\n    \"cooly\",\n    \"coomb\",\n    \"cooms\",\n    \"coomy\",\n    \"coons\",\n    \"coops\",\n    \"coopt\",\n    \"coost\",\n    \"coots\",\n    \"cooze\",\n    \"copal\",\n    \"copay\",\n    \"coped\",\n    \"copen\",\n    \"coper\",\n    \"copes\",\n    \"coppy\",\n    \"copra\",\n    \"copsy\",\n    \"coqui\",\n    \"coram\",\n    \"corbe\",\n    \"corby\",\n    \"cords\",\n    \"cored\",\n    \"cores\",\n    \"corey\",\n    \"corgi\",\n    \"coria\",\n    \"corks\",\n    \"corky\",\n    \"corms\",\n    \"corni\",\n    \"corno\",\n    \"corns\",\n    \"cornu\",\n    \"corps\",\n    \"corse\",\n    \"corso\",\n    \"cosec\",\n    \"cosed\",\n    \"coses\",\n    \"coset\",\n    \"cosey\",\n    \"cosie\",\n    \"costa\",\n    \"coste\",\n    \"costs\",\n    \"cotan\",\n    \"coted\",\n    \"cotes\",\n    \"coths\",\n    \"cotta\",\n    \"cotts\",\n    \"coude\",\n    \"coups\",\n    \"courb\",\n    \"courd\",\n    \"coure\",\n    \"cours\",\n    \"couta\",\n    \"couth\",\n    \"coved\",\n    \"coves\",\n    \"covin\",\n    \"cowal\",\n    \"cowan\",\n    \"cowed\",\n    \"cowks\",\n    \"cowls\",\n    \"cowps\",\n    \"cowry\",\n    \"coxae\",\n    \"coxal\",\n    \"coxed\",\n    \"coxes\",\n    \"coxib\",\n    \"coyau\",\n    \"coyed\",\n    \"coyer\",\n    \"coypu\",\n    \"cozed\",\n    \"cozen\",\n    \"cozes\",\n    \"cozey\",\n    \"cozie\",\n    \"craal\",\n    \"crabs\",\n    \"crags\",\n    \"craic\",\n    \"craig\",\n    \"crake\",\n    \"crame\",\n    \"crams\",\n    \"crans\",\n    \"crape\",\n    \"craps\",\n    \"crapy\",\n    \"crare\",\n    \"craws\",\n    \"crays\",\n    \"creds\",\n    \"creel\",\n    \"crees\",\n    \"crems\",\n    \"crena\",\n    \"creps\",\n    \"crepy\",\n    \"crewe\",\n    \"crews\",\n    \"crias\",\n    \"cribs\",\n    \"cries\",\n    \"crims\",\n    \"crine\",\n    \"crios\",\n    \"cripe\",\n    \"crips\",\n    \"crise\",\n    \"crith\",\n    \"crits\",\n    \"croci\",\n    \"crocs\",\n    \"croft\",\n    \"crogs\",\n    \"cromb\",\n    \"crome\",\n    \"cronk\",\n    \"crons\",\n    \"crool\",\n    \"croon\",\n    \"crops\",\n    \"crore\",\n    \"crost\",\n    \"crout\",\n    \"crows\",\n    \"croze\",\n    \"cruck\",\n    \"crudo\",\n    \"cruds\",\n    \"crudy\",\n    \"crues\",\n    \"cruet\",\n    \"cruft\",\n    \"crunk\",\n    \"cruor\",\n    \"crura\",\n    \"cruse\",\n    \"crusy\",\n    \"cruve\",\n    \"crwth\",\n    \"cryer\",\n    \"ctene\",\n    \"cubby\",\n    \"cubeb\",\n    \"cubed\",\n    \"cuber\",\n    \"cubes\",\n    \"cubit\",\n    \"cuddy\",\n    \"cuffo\",\n    \"cuffs\",\n    \"cuifs\",\n    \"cuing\",\n    \"cuish\",\n    \"cuits\",\n    \"cukes\",\n    \"culch\",\n    \"culet\",\n    \"culex\",\n    \"culls\",\n    \"cully\",\n    \"culms\",\n    \"culpa\",\n    \"culti\",\n    \"cults\",\n    \"culty\",\n    \"cumec\",\n    \"cundy\",\n    \"cunei\",\n    \"cunit\",\n    \"cunts\",\n    \"cupel\",\n    \"cupid\",\n    \"cuppa\",\n    \"cuppy\",\n    \"curat\",\n    \"curbs\",\n    \"curch\",\n    \"curds\",\n    \"curdy\",\n    \"cured\",\n    \"curer\",\n    \"cures\",\n    \"curet\",\n    \"curfs\",\n    \"curia\",\n    \"curie\",\n    \"curli\",\n    \"curls\",\n    \"curns\",\n    \"curny\",\n    \"currs\",\n    \"cursi\",\n    \"curst\",\n    \"cusec\",\n    \"cushy\",\n    \"cusks\",\n    \"cusps\",\n    \"cuspy\",\n    \"cusso\",\n    \"cusum\",\n    \"cutch\",\n    \"cuter\",\n    \"cutes\",\n    \"cutey\",\n    \"cutin\",\n    \"cutis\",\n    \"cutto\",\n    \"cutty\",\n    \"cutup\",\n    \"cuvee\",\n    \"cuzes\",\n    \"cwtch\",\n    \"cyano\",\n    \"cyans\",\n    \"cycad\",\n    \"cycas\",\n    \"cyclo\",\n    \"cyder\",\n    \"cylix\",\n    \"cymae\",\n    \"cymar\",\n    \"cymas\",\n    \"cymes\",\n    \"cymol\",\n    \"cysts\",\n    \"cytes\",\n    \"cyton\",\n    \"czars\",\n    \"daals\",\n    \"dabba\",\n    \"daces\",\n    \"dacha\",\n    \"dacks\",\n    \"dadah\",\n    \"dadas\",\n    \"dados\",\n    \"daffs\",\n    \"daffy\",\n    \"dagga\",\n    \"daggy\",\n    \"dagos\",\n    \"dahls\",\n    \"daiko\",\n    \"daine\",\n    \"daint\",\n    \"daker\",\n    \"daled\",\n    \"dales\",\n    \"dalis\",\n    \"dalle\",\n    \"dalts\",\n    \"daman\",\n    \"damar\",\n    \"dames\",\n    \"damme\",\n    \"damns\",\n    \"damps\",\n    \"dampy\",\n    \"dancy\",\n    \"dangs\",\n    \"danio\",\n    \"danks\",\n    \"danny\",\n    \"dants\",\n    \"daraf\",\n    \"darbs\",\n    \"darcy\",\n    \"dared\",\n    \"darer\",\n    \"dares\",\n    \"darga\",\n    \"dargs\",\n    \"daric\",\n    \"daris\",\n    \"darks\",\n    \"darky\",\n    \"darns\",\n    \"darre\",\n    \"darts\",\n    \"darzi\",\n    \"dashi\",\n    \"dashy\",\n    \"datal\",\n    \"dated\",\n    \"dater\",\n    \"dates\",\n    \"datos\",\n    \"datto\",\n    \"daube\",\n    \"daubs\",\n    \"dauby\",\n    \"dauds\",\n    \"dault\",\n    \"daurs\",\n    \"dauts\",\n    \"daven\",\n    \"davit\",\n    \"dawah\",\n    \"dawds\",\n    \"dawed\",\n    \"dawen\",\n    \"dawks\",\n    \"dawns\",\n    \"dawts\",\n    \"dayan\",\n    \"daych\",\n    \"daynt\",\n    \"dazed\",\n    \"dazer\",\n    \"dazes\",\n    \"deads\",\n    \"deair\",\n    \"deals\",\n    \"deans\",\n    \"deare\",\n    \"dearn\",\n    \"dears\",\n    \"deary\",\n    \"deash\",\n    \"deave\",\n    \"deaws\",\n    \"deawy\",\n    \"debag\",\n    \"debby\",\n    \"debel\",\n    \"debes\",\n    \"debts\",\n    \"debud\",\n    \"debur\",\n    \"debus\",\n    \"debye\",\n    \"decad\",\n    \"decaf\",\n    \"decan\",\n    \"decko\",\n    \"decks\",\n    \"decos\",\n    \"dedal\",\n    \"deeds\",\n    \"deedy\",\n    \"deely\",\n    \"deems\",\n    \"deens\",\n    \"deeps\",\n    \"deere\",\n    \"deers\",\n    \"deets\",\n    \"deeve\",\n    \"deevs\",\n    \"defat\",\n    \"deffo\",\n    \"defis\",\n    \"defog\",\n    \"degas\",\n    \"degum\",\n    \"degus\",\n    \"deice\",\n    \"deids\",\n    \"deify\",\n    \"deils\",\n    \"deism\",\n    \"deist\",\n    \"deked\",\n    \"dekes\",\n    \"dekko\",\n    \"deled\",\n    \"deles\",\n    \"delfs\",\n    \"delft\",\n    \"delis\",\n    \"dells\",\n    \"delly\",\n    \"delos\",\n    \"delph\",\n    \"delts\",\n    \"deman\",\n    \"demes\",\n    \"demic\",\n    \"demit\",\n    \"demob\",\n    \"demoi\",\n    \"demos\",\n    \"dempt\",\n    \"denar\",\n    \"denay\",\n    \"dench\",\n    \"denes\",\n    \"denet\",\n    \"denis\",\n    \"dents\",\n    \"deoxy\",\n    \"derat\",\n    \"deray\",\n    \"dered\",\n    \"deres\",\n    \"derig\",\n    \"derma\",\n    \"derms\",\n    \"derns\",\n    \"derny\",\n    \"deros\",\n    \"derro\",\n    \"derry\",\n    \"derth\",\n    \"dervs\",\n    \"desex\",\n    \"deshi\",\n    \"desis\",\n    \"desks\",\n    \"desse\",\n    \"devas\",\n    \"devel\",\n    \"devis\",\n    \"devon\",\n    \"devos\",\n    \"devot\",\n    \"dewan\",\n    \"dewar\",\n    \"dewax\",\n    \"dewed\",\n    \"dexes\",\n    \"dexie\",\n    \"dhaba\",\n    \"dhaks\",\n    \"dhals\",\n    \"dhikr\",\n    \"dhobi\",\n    \"dhole\",\n    \"dholl\",\n    \"dhols\",\n    \"dhoti\",\n    \"dhows\",\n    \"dhuti\",\n    \"diact\",\n    \"dials\",\n    \"diane\",\n    \"diazo\",\n    \"dibbs\",\n    \"diced\",\n    \"dicer\",\n    \"dices\",\n    \"dicht\",\n    \"dicks\",\n    \"dicky\",\n    \"dicot\",\n    \"dicta\",\n    \"dicts\",\n    \"dicty\",\n    \"diddy\",\n    \"didie\",\n    \"didos\",\n    \"didst\",\n    \"diebs\",\n    \"diels\",\n    \"diene\",\n    \"diets\",\n    \"diffs\",\n    \"dight\",\n    \"dikas\",\n    \"diked\",\n    \"diker\",\n    \"dikes\",\n    \"dikey\",\n    \"dildo\",\n    \"dilli\",\n    \"dills\",\n    \"dimbo\",\n    \"dimer\",\n    \"dimes\",\n    \"dimps\",\n    \"dinar\",\n    \"dined\",\n    \"dines\",\n    \"dinge\",\n    \"dings\",\n    \"dinic\",\n    \"dinks\",\n    \"dinky\",\n    \"dinna\",\n    \"dinos\",\n    \"dints\",\n    \"diols\",\n    \"diota\",\n    \"dippy\",\n    \"dipso\",\n    \"diram\",\n    \"direr\",\n    \"dirke\",\n    \"dirks\",\n    \"dirls\",\n    \"dirts\",\n    \"disas\",\n    \"disci\",\n    \"discs\",\n    \"dishy\",\n    \"disks\",\n    \"disme\",\n    \"dital\",\n    \"ditas\",\n    \"dited\",\n    \"dites\",\n    \"ditsy\",\n    \"ditts\",\n    \"ditzy\",\n    \"divan\",\n    \"divas\",\n    \"dived\",\n    \"dives\",\n    \"divis\",\n    \"divna\",\n    \"divos\",\n    \"divot\",\n    \"divvy\",\n    \"diwan\",\n    \"dixie\",\n    \"dixit\",\n    \"diyas\",\n    \"dizen\",\n    \"djinn\",\n    \"djins\",\n    \"doabs\",\n    \"doats\",\n    \"dobby\",\n    \"dobes\",\n    \"dobie\",\n    \"dobla\",\n    \"dobra\",\n    \"dobro\",\n    \"docht\",\n    \"docks\",\n    \"docos\",\n    \"docus\",\n    \"doddy\",\n    \"dodos\",\n    \"doeks\",\n    \"doers\",\n    \"doest\",\n    \"doeth\",\n    \"doffs\",\n    \"dogan\",\n    \"doges\",\n    \"dogey\",\n    \"doggo\",\n    \"doggy\",\n    \"dogie\",\n    \"dohyo\",\n    \"doilt\",\n    \"doily\",\n    \"doits\",\n    \"dojos\",\n    \"dolce\",\n    \"dolci\",\n    \"doled\",\n    \"doles\",\n    \"dolia\",\n    \"dolls\",\n    \"dolma\",\n    \"dolor\",\n    \"dolos\",\n    \"dolts\",\n    \"domal\",\n    \"domed\",\n    \"domes\",\n    \"domic\",\n    \"donah\",\n    \"donas\",\n    \"donee\",\n    \"doner\",\n    \"donga\",\n    \"dongs\",\n    \"donko\",\n    \"donna\",\n    \"donne\",\n    \"donny\",\n    \"donsy\",\n    \"doobs\",\n    \"dooce\",\n    \"doody\",\n    \"dooks\",\n    \"doole\",\n    \"dools\",\n    \"dooly\",\n    \"dooms\",\n    \"doomy\",\n    \"doona\",\n    \"doorn\",\n    \"doors\",\n    \"doozy\",\n    \"dopas\",\n    \"doped\",\n    \"doper\",\n    \"dopes\",\n    \"dorad\",\n    \"dorba\",\n    \"dorbs\",\n    \"doree\",\n    \"dores\",\n    \"doric\",\n    \"doris\",\n    \"dorks\",\n    \"dorky\",\n    \"dorms\",\n    \"dormy\",\n    \"dorps\",\n    \"dorrs\",\n    \"dorsa\",\n    \"dorse\",\n    \"dorts\",\n    \"dorty\",\n    \"dosai\",\n    \"dosas\",\n    \"dosed\",\n    \"doseh\",\n    \"doser\",\n    \"doses\",\n    \"dosha\",\n    \"dotal\",\n    \"doted\",\n    \"doter\",\n    \"dotes\",\n    \"dotty\",\n    \"douar\",\n    \"douce\",\n    \"doucs\",\n    \"douks\",\n    \"doula\",\n    \"douma\",\n    \"doums\",\n    \"doups\",\n    \"doura\",\n    \"douse\",\n    \"douts\",\n    \"doved\",\n    \"doven\",\n    \"dover\",\n    \"doves\",\n    \"dovie\",\n    \"dowar\",\n    \"dowds\",\n    \"dowed\",\n    \"dower\",\n    \"dowie\",\n    \"dowle\",\n    \"dowls\",\n    \"dowly\",\n    \"downa\",\n    \"downs\",\n    \"dowps\",\n    \"dowse\",\n    \"dowts\",\n    \"doxed\",\n    \"doxes\",\n    \"doxie\",\n    \"doyen\",\n    \"doyly\",\n    \"dozed\",\n    \"dozer\",\n    \"dozes\",\n    \"drabs\",\n    \"drack\",\n    \"draco\",\n    \"draff\",\n    \"drags\",\n    \"drail\",\n    \"drams\",\n    \"drant\",\n    \"draps\",\n    \"drats\",\n    \"drave\",\n    \"draws\",\n    \"drays\",\n    \"drear\",\n    \"dreck\",\n    \"dreed\",\n    \"dreer\",\n    \"drees\",\n    \"dregs\",\n    \"dreks\",\n    \"drent\",\n    \"drere\",\n    \"drest\",\n    \"dreys\",\n    \"dribs\",\n    \"drice\",\n    \"dries\",\n    \"drily\",\n    \"drips\",\n    \"dript\",\n    \"droid\",\n    \"droil\",\n    \"droke\",\n    \"drole\",\n    \"drome\",\n    \"drony\",\n    \"droob\",\n    \"droog\",\n    \"drook\",\n    \"drops\",\n    \"dropt\",\n    \"drouk\",\n    \"drows\",\n    \"drubs\",\n    \"drugs\",\n    \"drums\",\n    \"drupe\",\n    \"druse\",\n    \"drusy\",\n    \"druxy\",\n    \"dryad\",\n    \"dryas\",\n    \"dsobo\",\n    \"dsomo\",\n    \"duads\",\n    \"duals\",\n    \"duans\",\n    \"duars\",\n    \"dubbo\",\n    \"ducal\",\n    \"ducat\",\n    \"duces\",\n    \"ducks\",\n    \"ducky\",\n    \"ducts\",\n    \"duddy\",\n    \"duded\",\n    \"dudes\",\n    \"duels\",\n    \"duets\",\n    \"duett\",\n    \"duffs\",\n    \"dufus\",\n    \"duing\",\n    \"duits\",\n    \"dukas\",\n    \"duked\",\n    \"dukes\",\n    \"dukka\",\n    \"dulce\",\n    \"dules\",\n    \"dulia\",\n    \"dulls\",\n    \"dulse\",\n    \"dumas\",\n    \"dumbo\",\n    \"dumbs\",\n    \"dumka\",\n    \"dumky\",\n    \"dumps\",\n    \"dunam\",\n    \"dunch\",\n    \"dunes\",\n    \"dungs\",\n    \"dungy\",\n    \"dunks\",\n    \"dunno\",\n    \"dunny\",\n    \"dunsh\",\n    \"dunts\",\n    \"duomi\",\n    \"duomo\",\n    \"duped\",\n    \"duper\",\n    \"dupes\",\n    \"duple\",\n    \"duply\",\n    \"duppy\",\n    \"dural\",\n    \"duras\",\n    \"dured\",\n    \"dures\",\n    \"durgy\",\n    \"durns\",\n    \"duroc\",\n    \"duros\",\n    \"duroy\",\n    \"durra\",\n    \"durrs\",\n    \"durry\",\n    \"durst\",\n    \"durum\",\n    \"durzi\",\n    \"dusks\",\n    \"dusts\",\n    \"duxes\",\n    \"dwaal\",\n    \"dwale\",\n    \"dwalm\",\n    \"dwams\",\n    \"dwang\",\n    \"dwaum\",\n    \"dweeb\",\n    \"dwile\",\n    \"dwine\",\n    \"dyads\",\n    \"dyers\",\n    \"dyked\",\n    \"dykes\",\n    \"dykey\",\n    \"dykon\",\n    \"dynel\",\n    \"dynes\",\n    \"dzhos\",\n    \"eagre\",\n    \"ealed\",\n    \"eales\",\n    \"eaned\",\n    \"eards\",\n    \"eared\",\n    \"earls\",\n    \"earns\",\n    \"earnt\",\n    \"earst\",\n    \"eased\",\n    \"easer\",\n    \"eases\",\n    \"easle\",\n    \"easts\",\n    \"eathe\",\n    \"eaved\",\n    \"eaves\",\n    \"ebbed\",\n    \"ebbet\",\n    \"ebons\",\n    \"ebook\",\n    \"ecads\",\n    \"eched\",\n    \"eches\",\n    \"echos\",\n    \"ecrus\",\n    \"edema\",\n    \"edged\",\n    \"edger\",\n    \"edges\",\n    \"edile\",\n    \"edits\",\n    \"educe\",\n    \"educt\",\n    \"eejit\",\n    \"eensy\",\n    \"eeven\",\n    \"eevns\",\n    \"effed\",\n    \"egads\",\n    \"egers\",\n    \"egest\",\n    \"eggar\",\n    \"egged\",\n    \"egger\",\n    \"egmas\",\n    \"ehing\",\n    \"eider\",\n    \"eidos\",\n    \"eigne\",\n    \"eiked\",\n    \"eikon\",\n    \"eilds\",\n    \"eisel\",\n    \"ejido\",\n    \"ekkas\",\n    \"elain\",\n    \"eland\",\n    \"elans\",\n    \"elchi\",\n    \"eldin\",\n    \"elemi\",\n    \"elfed\",\n    \"eliad\",\n    \"elint\",\n    \"elmen\",\n    \"eloge\",\n    \"elogy\",\n    \"eloin\",\n    \"elops\",\n    \"elpee\",\n    \"elsin\",\n    \"elute\",\n    \"elvan\",\n    \"elven\",\n    \"elver\",\n    \"elves\",\n    \"emacs\",\n    \"embar\",\n    \"embay\",\n    \"embog\",\n    \"embow\",\n    \"embox\",\n    \"embus\",\n    \"emeer\",\n    \"emend\",\n    \"emerg\",\n    \"emery\",\n    \"emeus\",\n    \"emics\",\n    \"emirs\",\n    \"emits\",\n    \"emmas\",\n    \"emmer\",\n    \"emmet\",\n    \"emmew\",\n    \"emmys\",\n    \"emoji\",\n    \"emong\",\n    \"emote\",\n    \"emove\",\n    \"empts\",\n    \"emule\",\n    \"emure\",\n    \"emyde\",\n    \"emyds\",\n    \"enarm\",\n    \"enate\",\n    \"ended\",\n    \"ender\",\n    \"endew\",\n    \"endue\",\n    \"enews\",\n    \"enfix\",\n    \"eniac\",\n    \"enlit\",\n    \"enmew\",\n    \"ennog\",\n    \"enoki\",\n    \"enols\",\n    \"enorm\",\n    \"enows\",\n    \"enrol\",\n    \"ensew\",\n    \"ensky\",\n    \"entia\",\n    \"enure\",\n    \"enurn\",\n    \"envoi\",\n    \"enzym\",\n    \"eorls\",\n    \"eosin\",\n    \"epact\",\n    \"epees\",\n    \"ephah\",\n    \"ephas\",\n    \"ephod\",\n    \"ephor\",\n    \"epics\",\n    \"epode\",\n    \"epopt\",\n    \"epris\",\n    \"eques\",\n    \"equid\",\n    \"erbia\",\n    \"erevs\",\n    \"ergon\",\n    \"ergos\",\n    \"ergot\",\n    \"erhus\",\n    \"erica\",\n    \"erick\",\n    \"erics\",\n    \"ering\",\n    \"erned\",\n    \"ernes\",\n    \"erose\",\n    \"erred\",\n    \"erses\",\n    \"eruct\",\n    \"erugo\",\n    \"eruvs\",\n    \"erven\",\n    \"ervil\",\n    \"escar\",\n    \"escot\",\n    \"esile\",\n    \"eskar\",\n    \"esker\",\n    \"esnes\",\n    \"esses\",\n    \"estoc\",\n    \"estop\",\n    \"estro\",\n    \"etage\",\n    \"etape\",\n    \"etats\",\n    \"etens\",\n    \"ethal\",\n    \"ethne\",\n    \"ethyl\",\n    \"etics\",\n    \"etnas\",\n    \"ettin\",\n    \"ettle\",\n    \"etuis\",\n    \"etwee\",\n    \"etyma\",\n    \"eughs\",\n    \"euked\",\n    \"eupad\",\n    \"euros\",\n    \"eusol\",\n    \"evens\",\n    \"evert\",\n    \"evets\",\n    \"evhoe\",\n    \"evils\",\n    \"evite\",\n    \"evohe\",\n    \"ewers\",\n    \"ewest\",\n    \"ewhow\",\n    \"ewked\",\n    \"exams\",\n    \"exeat\",\n    \"execs\",\n    \"exeem\",\n    \"exeme\",\n    \"exfil\",\n    \"exies\",\n    \"exine\",\n    \"exing\",\n    \"exits\",\n    \"exode\",\n    \"exome\",\n    \"exons\",\n    \"expat\",\n    \"expos\",\n    \"exude\",\n    \"exuls\",\n    \"exurb\",\n    \"eyass\",\n    \"eyers\",\n    \"eyots\",\n    \"eyras\",\n    \"eyres\",\n    \"eyrie\",\n    \"eyrir\",\n    \"ezine\",\n    \"fabby\",\n    \"faced\",\n    \"facer\",\n    \"faces\",\n    \"facia\",\n    \"facta\",\n    \"facts\",\n    \"faddy\",\n    \"faded\",\n    \"fader\",\n    \"fades\",\n    \"fadge\",\n    \"fados\",\n    \"faena\",\n    \"faery\",\n    \"faffs\",\n    \"faffy\",\n    \"faggy\",\n    \"fagin\",\n    \"fagot\",\n    \"faiks\",\n    \"fails\",\n    \"faine\",\n    \"fains\",\n    \"fairs\",\n    \"faked\",\n    \"faker\",\n    \"fakes\",\n    \"fakey\",\n    \"fakie\",\n    \"fakir\",\n    \"falaj\",\n    \"falls\",\n    \"famed\",\n    \"fames\",\n    \"fanal\",\n    \"fands\",\n    \"fanes\",\n    \"fanga\",\n    \"fango\",\n    \"fangs\",\n    \"fanks\",\n    \"fanon\",\n    \"fanos\",\n    \"fanum\",\n    \"faqir\",\n    \"farad\",\n    \"farci\",\n    \"farcy\",\n    \"fards\",\n    \"fared\",\n    \"farer\",\n    \"fares\",\n    \"farle\",\n    \"farls\",\n    \"farms\",\n    \"faros\",\n    \"farro\",\n    \"farse\",\n    \"farts\",\n    \"fasci\",\n    \"fasti\",\n    \"fasts\",\n    \"fated\",\n    \"fates\",\n    \"fatly\",\n    \"fatso\",\n    \"fatwa\",\n    \"faugh\",\n    \"fauld\",\n    \"fauns\",\n    \"faurd\",\n    \"fauts\",\n    \"fauve\",\n    \"favas\",\n    \"favel\",\n    \"faver\",\n    \"faves\",\n    \"favus\",\n    \"fawns\",\n    \"fawny\",\n    \"faxed\",\n    \"faxes\",\n    \"fayed\",\n    \"fayer\",\n    \"fayne\",\n    \"fayre\",\n    \"fazed\",\n    \"fazes\",\n    \"feals\",\n    \"feare\",\n    \"fears\",\n    \"feart\",\n    \"fease\",\n    \"feats\",\n    \"feaze\",\n    \"feces\",\n    \"fecht\",\n    \"fecit\",\n    \"fecks\",\n    \"fedex\",\n    \"feebs\",\n    \"feeds\",\n    \"feels\",\n    \"feens\",\n    \"feers\",\n    \"feese\",\n    \"feeze\",\n    \"fehme\",\n    \"feint\",\n    \"feist\",\n    \"felch\",\n    \"felid\",\n    \"fells\",\n    \"felly\",\n    \"felts\",\n    \"felty\",\n    \"femal\",\n    \"femes\",\n    \"femmy\",\n    \"fends\",\n    \"fendy\",\n    \"fenis\",\n    \"fenks\",\n    \"fenny\",\n    \"fents\",\n    \"feods\",\n    \"feoff\",\n    \"ferer\",\n    \"feres\",\n    \"feria\",\n    \"ferly\",\n    \"fermi\",\n    \"ferms\",\n    \"ferns\",\n    \"ferny\",\n    \"fesse\",\n    \"festa\",\n    \"fests\",\n    \"festy\",\n    \"fetas\",\n    \"feted\",\n    \"fetes\",\n    \"fetor\",\n    \"fetta\",\n    \"fetts\",\n    \"fetwa\",\n    \"feuar\",\n    \"feuds\",\n    \"feued\",\n    \"feyed\",\n    \"feyer\",\n    \"feyly\",\n    \"fezes\",\n    \"fezzy\",\n    \"fiars\",\n    \"fiats\",\n    \"fibro\",\n    \"fices\",\n    \"fiche\",\n    \"fichu\",\n    \"ficin\",\n    \"ficos\",\n    \"fides\",\n    \"fidge\",\n    \"fidos\",\n    \"fiefs\",\n    \"fient\",\n    \"fiere\",\n    \"fiers\",\n    \"fiest\",\n    \"fifed\",\n    \"fifer\",\n    \"fifes\",\n    \"fifis\",\n    \"figgy\",\n    \"figos\",\n    \"fiked\",\n    \"fikes\",\n    \"filar\",\n    \"filch\",\n    \"filed\",\n    \"files\",\n    \"filii\",\n    \"filks\",\n    \"fille\",\n    \"fillo\",\n    \"fills\",\n    \"filmi\",\n    \"films\",\n    \"filos\",\n    \"filum\",\n    \"finca\",\n    \"finds\",\n    \"fined\",\n    \"fines\",\n    \"finis\",\n    \"finks\",\n    \"finny\",\n    \"finos\",\n    \"fiord\",\n    \"fiqhs\",\n    \"fique\",\n    \"fired\",\n    \"firer\",\n    \"fires\",\n    \"firie\",\n    \"firks\",\n    \"firms\",\n    \"firns\",\n    \"firry\",\n    \"firth\",\n    \"fiscs\",\n    \"fisks\",\n    \"fists\",\n    \"fisty\",\n    \"fitch\",\n    \"fitly\",\n    \"fitna\",\n    \"fitte\",\n    \"fitts\",\n    \"fiver\",\n    \"fives\",\n    \"fixed\",\n    \"fixes\",\n    \"fixit\",\n    \"fjeld\",\n    \"flabs\",\n    \"flaff\",\n    \"flags\",\n    \"flaks\",\n    \"flamm\",\n    \"flams\",\n    \"flamy\",\n    \"flane\",\n    \"flans\",\n    \"flaps\",\n    \"flary\",\n    \"flats\",\n    \"flava\",\n    \"flawn\",\n    \"flaws\",\n    \"flawy\",\n    \"flaxy\",\n    \"flays\",\n    \"fleam\",\n    \"fleas\",\n    \"fleek\",\n    \"fleer\",\n    \"flees\",\n    \"flegs\",\n    \"fleme\",\n    \"fleur\",\n    \"flews\",\n    \"flexi\",\n    \"flexo\",\n    \"fleys\",\n    \"flics\",\n    \"flied\",\n    \"flies\",\n    \"flimp\",\n    \"flims\",\n    \"flips\",\n    \"flirs\",\n    \"flisk\",\n    \"flite\",\n    \"flits\",\n    \"flitt\",\n    \"flobs\",\n    \"flocs\",\n    \"floes\",\n    \"flogs\",\n    \"flong\",\n    \"flops\",\n    \"flors\",\n    \"flory\",\n    \"flosh\",\n    \"flota\",\n    \"flote\",\n    \"flows\",\n    \"flubs\",\n    \"flued\",\n    \"flues\",\n    \"fluey\",\n    \"fluky\",\n    \"flump\",\n    \"fluor\",\n    \"flurr\",\n    \"fluty\",\n    \"fluyt\",\n    \"flyby\",\n    \"flype\",\n    \"flyte\",\n    \"foals\",\n    \"foams\",\n    \"foehn\",\n    \"fogey\",\n    \"fogie\",\n    \"fogle\",\n    \"fogou\",\n    \"fohns\",\n    \"foids\",\n    \"foils\",\n    \"foins\",\n    \"folds\",\n    \"foley\",\n    \"folia\",\n    \"folic\",\n    \"folie\",\n    \"folks\",\n    \"folky\",\n    \"fomes\",\n    \"fonda\",\n    \"fonds\",\n    \"fondu\",\n    \"fones\",\n    \"fonly\",\n    \"fonts\",\n    \"foods\",\n    \"foody\",\n    \"fools\",\n    \"foots\",\n    \"footy\",\n    \"foram\",\n    \"forbs\",\n    \"forby\",\n    \"fordo\",\n    \"fords\",\n    \"forel\",\n    \"fores\",\n    \"forex\",\n    \"forks\",\n    \"forky\",\n    \"forme\",\n    \"forms\",\n    \"forts\",\n    \"forza\",\n    \"forze\",\n    \"fossa\",\n    \"fosse\",\n    \"fouat\",\n    \"fouds\",\n    \"fouer\",\n    \"fouet\",\n    \"foule\",\n    \"fouls\",\n    \"fount\",\n    \"fours\",\n    \"fouth\",\n    \"fovea\",\n    \"fowls\",\n    \"fowth\",\n    \"foxed\",\n    \"foxes\",\n    \"foxie\",\n    \"foyle\",\n    \"foyne\",\n    \"frabs\",\n    \"frack\",\n    \"fract\",\n    \"frags\",\n    \"fraim\",\n    \"franc\",\n    \"frape\",\n    \"fraps\",\n    \"frass\",\n    \"frate\",\n    \"frati\",\n    \"frats\",\n    \"fraus\",\n    \"frays\",\n    \"frees\",\n    \"freet\",\n    \"freit\",\n    \"fremd\",\n    \"frena\",\n    \"freon\",\n    \"frere\",\n    \"frets\",\n    \"fribs\",\n    \"frier\",\n    \"fries\",\n    \"frigs\",\n    \"frise\",\n    \"frist\",\n    \"frith\",\n    \"frits\",\n    \"fritt\",\n    \"frize\",\n    \"frizz\",\n    \"froes\",\n    \"frogs\",\n    \"frons\",\n    \"frore\",\n    \"frorn\",\n    \"frory\",\n    \"frosh\",\n    \"frows\",\n    \"frowy\",\n    \"frugs\",\n    \"frump\",\n    \"frush\",\n    \"frust\",\n    \"fryer\",\n    \"fubar\",\n    \"fubby\",\n    \"fubsy\",\n    \"fucks\",\n    \"fucus\",\n    \"fuddy\",\n    \"fudgy\",\n    \"fuels\",\n    \"fuero\",\n    \"fuffs\",\n    \"fuffy\",\n    \"fugal\",\n    \"fuggy\",\n    \"fugie\",\n    \"fugio\",\n    \"fugle\",\n    \"fugly\",\n    \"fugus\",\n    \"fujis\",\n    \"fulls\",\n    \"fumed\",\n    \"fumer\",\n    \"fumes\",\n    \"fumet\",\n    \"fundi\",\n    \"funds\",\n    \"fundy\",\n    \"fungo\",\n    \"fungs\",\n    \"funks\",\n    \"fural\",\n    \"furan\",\n    \"furca\",\n    \"furls\",\n    \"furol\",\n    \"furrs\",\n    \"furth\",\n    \"furze\",\n    \"furzy\",\n    \"fused\",\n    \"fusee\",\n    \"fusel\",\n    \"fuses\",\n    \"fusil\",\n    \"fusks\",\n    \"fusts\",\n    \"fusty\",\n    \"futon\",\n    \"fuzed\",\n    \"fuzee\",\n    \"fuzes\",\n    \"fuzil\",\n    \"fyces\",\n    \"fyked\",\n    \"fykes\",\n    \"fyles\",\n    \"fyrds\",\n    \"fytte\",\n    \"gabba\",\n    \"gabby\",\n    \"gable\",\n    \"gaddi\",\n    \"gades\",\n    \"gadge\",\n    \"gadid\",\n    \"gadis\",\n    \"gadje\",\n    \"gadjo\",\n    \"gadso\",\n    \"gaffs\",\n    \"gaged\",\n    \"gager\",\n    \"gages\",\n    \"gaids\",\n    \"gains\",\n    \"gairs\",\n    \"gaita\",\n    \"gaits\",\n    \"gaitt\",\n    \"gajos\",\n    \"galah\",\n    \"galas\",\n    \"galax\",\n    \"galea\",\n    \"galed\",\n    \"gales\",\n    \"galls\",\n    \"gally\",\n    \"galop\",\n    \"galut\",\n    \"galvo\",\n    \"gamas\",\n    \"gamay\",\n    \"gamba\",\n    \"gambe\",\n    \"gambo\",\n    \"gambs\",\n    \"gamed\",\n    \"games\",\n    \"gamey\",\n    \"gamic\",\n    \"gamin\",\n    \"gamme\",\n    \"gammy\",\n    \"gamps\",\n    \"ganch\",\n    \"gandy\",\n    \"ganef\",\n    \"ganev\",\n    \"gangs\",\n    \"ganja\",\n    \"ganof\",\n    \"gants\",\n    \"gaols\",\n    \"gaped\",\n    \"gaper\",\n    \"gapes\",\n    \"gapos\",\n    \"gappy\",\n    \"garbe\",\n    \"garbo\",\n    \"garbs\",\n    \"garda\",\n    \"gares\",\n    \"garis\",\n    \"garms\",\n    \"garni\",\n    \"garre\",\n    \"garth\",\n    \"garum\",\n    \"gases\",\n    \"gasps\",\n    \"gaspy\",\n    \"gasts\",\n    \"gatch\",\n    \"gated\",\n    \"gater\",\n    \"gates\",\n    \"gaths\",\n    \"gator\",\n    \"gauch\",\n    \"gaucy\",\n    \"gauds\",\n    \"gauje\",\n    \"gault\",\n    \"gaums\",\n    \"gaumy\",\n    \"gaups\",\n    \"gaurs\",\n    \"gauss\",\n    \"gauzy\",\n    \"gavot\",\n    \"gawcy\",\n    \"gawds\",\n    \"gawks\",\n    \"gawps\",\n    \"gawsy\",\n    \"gayal\",\n    \"gazal\",\n    \"gazar\",\n    \"gazed\",\n    \"gazes\",\n    \"gazon\",\n    \"gazoo\",\n    \"geals\",\n    \"geans\",\n    \"geare\",\n    \"gears\",\n    \"geats\",\n    \"gebur\",\n    \"gecks\",\n    \"geeks\",\n    \"geeps\",\n    \"geest\",\n    \"geist\",\n    \"geits\",\n    \"gelds\",\n    \"gelee\",\n    \"gelid\",\n    \"gelly\",\n    \"gelts\",\n    \"gemel\",\n    \"gemma\",\n    \"gemmy\",\n    \"gemot\",\n    \"genal\",\n    \"genas\",\n    \"genes\",\n    \"genet\",\n    \"genic\",\n    \"genii\",\n    \"genip\",\n    \"genny\",\n    \"genoa\",\n    \"genom\",\n    \"genro\",\n    \"gents\",\n    \"genty\",\n    \"genua\",\n    \"genus\",\n    \"geode\",\n    \"geoid\",\n    \"gerah\",\n    \"gerbe\",\n    \"geres\",\n    \"gerle\",\n    \"germs\",\n    \"germy\",\n    \"gerne\",\n    \"gesse\",\n    \"gesso\",\n    \"geste\",\n    \"gests\",\n    \"getas\",\n    \"getup\",\n    \"geums\",\n    \"geyan\",\n    \"geyer\",\n    \"ghast\",\n    \"ghats\",\n    \"ghaut\",\n    \"ghazi\",\n    \"ghees\",\n    \"ghest\",\n    \"ghyll\",\n    \"gibed\",\n    \"gibel\",\n    \"giber\",\n    \"gibes\",\n    \"gibli\",\n    \"gibus\",\n    \"gifts\",\n    \"gigas\",\n    \"gighe\",\n    \"gigot\",\n    \"gigue\",\n    \"gilas\",\n    \"gilds\",\n    \"gilet\",\n    \"gills\",\n    \"gilly\",\n    \"gilpy\",\n    \"gilts\",\n    \"gimel\",\n    \"gimme\",\n    \"gimps\",\n    \"gimpy\",\n    \"ginch\",\n    \"ginge\",\n    \"gings\",\n    \"ginks\",\n    \"ginny\",\n    \"ginzo\",\n    \"gipon\",\n    \"gippo\",\n    \"gippy\",\n    \"girds\",\n    \"girls\",\n    \"girns\",\n    \"giron\",\n    \"giros\",\n    \"girrs\",\n    \"girsh\",\n    \"girts\",\n    \"gismo\",\n    \"gisms\",\n    \"gists\",\n    \"gitch\",\n    \"gites\",\n    \"giust\",\n    \"gived\",\n    \"gives\",\n    \"gizmo\",\n    \"glace\",\n    \"glads\",\n    \"glady\",\n    \"glaik\",\n    \"glair\",\n    \"glams\",\n    \"glans\",\n    \"glary\",\n    \"glaum\",\n    \"glaur\",\n    \"glazy\",\n    \"gleba\",\n    \"glebe\",\n    \"gleby\",\n    \"glede\",\n    \"gleds\",\n    \"gleed\",\n    \"gleek\",\n    \"glees\",\n    \"gleet\",\n    \"gleis\",\n    \"glens\",\n    \"glent\",\n    \"gleys\",\n    \"glial\",\n    \"glias\",\n    \"glibs\",\n    \"gliff\",\n    \"glift\",\n    \"glike\",\n    \"glime\",\n    \"glims\",\n    \"glisk\",\n    \"glits\",\n    \"glitz\",\n    \"gloam\",\n    \"globi\",\n    \"globs\",\n    \"globy\",\n    \"glode\",\n    \"glogg\",\n    \"gloms\",\n    \"gloop\",\n    \"glops\",\n    \"glost\",\n    \"glout\",\n    \"glows\",\n    \"gloze\",\n    \"glued\",\n    \"gluer\",\n    \"glues\",\n    \"gluey\",\n    \"glugs\",\n    \"glume\",\n    \"glums\",\n    \"gluon\",\n    \"glute\",\n    \"gluts\",\n    \"gnarl\",\n    \"gnarr\",\n    \"gnars\",\n    \"gnats\",\n    \"gnawn\",\n    \"gnaws\",\n    \"gnows\",\n    \"goads\",\n    \"goafs\",\n    \"goals\",\n    \"goary\",\n    \"goats\",\n    \"goaty\",\n    \"goban\",\n    \"gobar\",\n    \"gobbi\",\n    \"gobbo\",\n    \"gobby\",\n    \"gobis\",\n    \"gobos\",\n    \"godet\",\n    \"godso\",\n    \"goels\",\n    \"goers\",\n    \"goest\",\n    \"goeth\",\n    \"goety\",\n    \"gofer\",\n    \"goffs\",\n    \"gogga\",\n    \"gogos\",\n    \"goier\",\n    \"gojis\",\n    \"golds\",\n    \"goldy\",\n    \"goles\",\n    \"golfs\",\n    \"golpe\",\n    \"golps\",\n    \"gombo\",\n    \"gomer\",\n    \"gompa\",\n    \"gonch\",\n    \"gonef\",\n    \"gongs\",\n    \"gonia\",\n    \"gonif\",\n    \"gonks\",\n    \"gonna\",\n    \"gonof\",\n    \"gonys\",\n    \"gonzo\",\n    \"gooby\",\n    \"goods\",\n    \"goofs\",\n    \"googs\",\n    \"gooks\",\n    \"gooky\",\n    \"goold\",\n    \"gools\",\n    \"gooly\",\n    \"goons\",\n    \"goony\",\n    \"goops\",\n    \"goopy\",\n    \"goors\",\n    \"goory\",\n    \"goosy\",\n    \"gopak\",\n    \"gopik\",\n    \"goral\",\n    \"goras\",\n    \"gored\",\n    \"gores\",\n    \"goris\",\n    \"gorms\",\n    \"gormy\",\n    \"gorps\",\n    \"gorse\",\n    \"gorsy\",\n    \"gosht\",\n    \"gosse\",\n    \"gotch\",\n    \"goths\",\n    \"gothy\",\n    \"gotta\",\n    \"gouch\",\n    \"gouks\",\n    \"goura\",\n    \"gouts\",\n    \"gouty\",\n    \"gowan\",\n    \"gowds\",\n    \"gowfs\",\n    \"gowks\",\n    \"gowls\",\n    \"gowns\",\n    \"goxes\",\n    \"goyim\",\n    \"goyle\",\n    \"graal\",\n    \"grabs\",\n    \"grads\",\n    \"graff\",\n    \"graip\",\n    \"grama\",\n    \"grame\",\n    \"gramp\",\n    \"grams\",\n    \"grana\",\n    \"grans\",\n    \"grapy\",\n    \"gravs\",\n    \"grays\",\n    \"grebe\",\n    \"grebo\",\n    \"grece\",\n    \"greek\",\n    \"grees\",\n    \"grege\",\n    \"grego\",\n    \"grein\",\n    \"grens\",\n    \"grese\",\n    \"greve\",\n    \"grews\",\n    \"greys\",\n    \"grice\",\n    \"gride\",\n    \"grids\",\n    \"griff\",\n    \"grift\",\n    \"grigs\",\n    \"grike\",\n    \"grins\",\n    \"griot\",\n    \"grips\",\n    \"gript\",\n    \"gripy\",\n    \"grise\",\n    \"grist\",\n    \"grisy\",\n    \"grith\",\n    \"grits\",\n    \"grize\",\n    \"groat\",\n    \"grody\",\n    \"grogs\",\n    \"groks\",\n    \"groma\",\n    \"grone\",\n    \"groof\",\n    \"grosz\",\n    \"grots\",\n    \"grouf\",\n    \"grovy\",\n    \"grows\",\n    \"grrls\",\n    \"grrrl\",\n    \"grubs\",\n    \"grued\",\n    \"grues\",\n    \"grufe\",\n    \"grume\",\n    \"grump\",\n    \"grund\",\n    \"gryce\",\n    \"gryde\",\n    \"gryke\",\n    \"grype\",\n    \"grypt\",\n    \"guaco\",\n    \"guana\",\n    \"guano\",\n    \"guans\",\n    \"guars\",\n    \"gucks\",\n    \"gucky\",\n    \"gudes\",\n    \"guffs\",\n    \"gugas\",\n    \"guids\",\n    \"guimp\",\n    \"guiro\",\n    \"gulag\",\n    \"gular\",\n    \"gulas\",\n    \"gules\",\n    \"gulet\",\n    \"gulfs\",\n    \"gulfy\",\n    \"gulls\",\n    \"gulph\",\n    \"gulps\",\n    \"gulpy\",\n    \"gumma\",\n    \"gummi\",\n    \"gumps\",\n    \"gundy\",\n    \"gunge\",\n    \"gungy\",\n    \"gunks\",\n    \"gunky\",\n    \"gunny\",\n    \"guqin\",\n    \"gurdy\",\n    \"gurge\",\n    \"gurls\",\n    \"gurly\",\n    \"gurns\",\n    \"gurry\",\n    \"gursh\",\n    \"gurus\",\n    \"gushy\",\n    \"gusla\",\n    \"gusle\",\n    \"gusli\",\n    \"gussy\",\n    \"gusts\",\n    \"gutsy\",\n    \"gutta\",\n    \"gutty\",\n    \"guyed\",\n    \"guyle\",\n    \"guyot\",\n    \"guyse\",\n    \"gwine\",\n    \"gyals\",\n    \"gyans\",\n    \"gybed\",\n    \"gybes\",\n    \"gyeld\",\n    \"gymps\",\n    \"gynae\",\n    \"gynie\",\n    \"gynny\",\n    \"gynos\",\n    \"gyoza\",\n    \"gypos\",\n    \"gyppo\",\n    \"gyppy\",\n    \"gyral\",\n    \"gyred\",\n    \"gyres\",\n    \"gyron\",\n    \"gyros\",\n    \"gyrus\",\n    \"gytes\",\n    \"gyved\",\n    \"gyves\",\n    \"haafs\",\n    \"haars\",\n    \"hable\",\n    \"habus\",\n    \"hacek\",\n    \"hacks\",\n    \"hadal\",\n    \"haded\",\n    \"hades\",\n    \"hadji\",\n    \"hadst\",\n    \"haems\",\n    \"haets\",\n    \"haffs\",\n    \"hafiz\",\n    \"hafts\",\n    \"haggs\",\n    \"hahas\",\n    \"haick\",\n    \"haika\",\n    \"haiks\",\n    \"haiku\",\n    \"hails\",\n    \"haily\",\n    \"hains\",\n    \"haint\",\n    \"hairs\",\n    \"haith\",\n    \"hajes\",\n    \"hajis\",\n    \"hajji\",\n    \"hakam\",\n    \"hakas\",\n    \"hakea\",\n    \"hakes\",\n    \"hakim\",\n    \"hakus\",\n    \"halal\",\n    \"haled\",\n    \"haler\",\n    \"hales\",\n    \"halfa\",\n    \"halfs\",\n    \"halid\",\n    \"hallo\",\n    \"halls\",\n    \"halma\",\n    \"halms\",\n    \"halon\",\n    \"halos\",\n    \"halse\",\n    \"halts\",\n    \"halva\",\n    \"halwa\",\n    \"hamal\",\n    \"hamba\",\n    \"hamed\",\n    \"hames\",\n    \"hammy\",\n    \"hamza\",\n    \"hanap\",\n    \"hance\",\n    \"hanch\",\n    \"hands\",\n    \"hangi\",\n    \"hangs\",\n    \"hanks\",\n    \"hanky\",\n    \"hansa\",\n    \"hanse\",\n    \"hants\",\n    \"haole\",\n    \"haoma\",\n    \"hapax\",\n    \"haply\",\n    \"happi\",\n    \"hapus\",\n    \"haram\",\n    \"hards\",\n    \"hared\",\n    \"hares\",\n    \"harim\",\n    \"harks\",\n    \"harls\",\n    \"harms\",\n    \"harns\",\n    \"haros\",\n    \"harps\",\n    \"harts\",\n    \"hashy\",\n    \"hasks\",\n    \"hasps\",\n    \"hasta\",\n    \"hated\",\n    \"hates\",\n    \"hatha\",\n    \"hauds\",\n    \"haufs\",\n    \"haugh\",\n    \"hauld\",\n    \"haulm\",\n    \"hauls\",\n    \"hault\",\n    \"hauns\",\n    \"hause\",\n    \"haver\",\n    \"haves\",\n    \"hawed\",\n    \"hawks\",\n    \"hawms\",\n    \"hawse\",\n    \"hayed\",\n    \"hayer\",\n    \"hayey\",\n    \"hayle\",\n    \"hazan\",\n    \"hazed\",\n    \"hazer\",\n    \"hazes\",\n    \"heads\",\n    \"heald\",\n    \"heals\",\n    \"heame\",\n    \"heaps\",\n    \"heapy\",\n    \"heare\",\n    \"hears\",\n    \"heast\",\n    \"heats\",\n    \"heben\",\n    \"hebes\",\n    \"hecht\",\n    \"hecks\",\n    \"heder\",\n    \"hedgy\",\n    \"heeds\",\n    \"heedy\",\n    \"heels\",\n    \"heeze\",\n    \"hefte\",\n    \"hefts\",\n    \"heids\",\n    \"heigh\",\n    \"heils\",\n    \"heirs\",\n    \"hejab\",\n    \"hejra\",\n    \"heled\",\n    \"heles\",\n    \"helio\",\n    \"hells\",\n    \"helms\",\n    \"helos\",\n    \"helot\",\n    \"helps\",\n    \"helve\",\n    \"hemal\",\n    \"hemes\",\n    \"hemic\",\n    \"hemin\",\n    \"hemps\",\n    \"hempy\",\n    \"hench\",\n    \"hends\",\n    \"henge\",\n    \"henna\",\n    \"henny\",\n    \"henry\",\n    \"hents\",\n    \"hepar\",\n    \"herbs\",\n    \"herby\",\n    \"herds\",\n    \"heres\",\n    \"herls\",\n    \"herma\",\n    \"herms\",\n    \"herns\",\n    \"heros\",\n    \"herry\",\n    \"herse\",\n    \"hertz\",\n    \"herye\",\n    \"hesps\",\n    \"hests\",\n    \"hetes\",\n    \"heths\",\n    \"heuch\",\n    \"heugh\",\n    \"hevea\",\n    \"hewed\",\n    \"hewer\",\n    \"hewgh\",\n    \"hexad\",\n    \"hexed\",\n    \"hexer\",\n    \"hexes\",\n    \"hexyl\",\n    \"heyed\",\n    \"hiant\",\n    \"hicks\",\n    \"hided\",\n    \"hider\",\n    \"hides\",\n    \"hiems\",\n    \"highs\",\n    \"hight\",\n    \"hijab\",\n    \"hijra\",\n    \"hiked\",\n    \"hiker\",\n    \"hikes\",\n    \"hikoi\",\n    \"hilar\",\n    \"hilch\",\n    \"hillo\",\n    \"hills\",\n    \"hilts\",\n    \"hilum\",\n    \"hilus\",\n    \"himbo\",\n    \"hinau\",\n    \"hinds\",\n    \"hings\",\n    \"hinky\",\n    \"hinny\",\n    \"hints\",\n    \"hiois\",\n    \"hiply\",\n    \"hired\",\n    \"hiree\",\n    \"hirer\",\n    \"hires\",\n    \"hissy\",\n    \"hists\",\n    \"hithe\",\n    \"hived\",\n    \"hiver\",\n    \"hives\",\n    \"hizen\",\n    \"hoaed\",\n    \"hoagy\",\n    \"hoars\",\n    \"hoary\",\n    \"hoast\",\n    \"hobos\",\n    \"hocks\",\n    \"hocus\",\n    \"hodad\",\n    \"hodja\",\n    \"hoers\",\n    \"hogan\",\n    \"hogen\",\n    \"hoggs\",\n    \"hoghs\",\n    \"hohed\",\n    \"hoick\",\n    \"hoied\",\n    \"hoiks\",\n    \"hoing\",\n    \"hoise\",\n    \"hokas\",\n    \"hoked\",\n    \"hokes\",\n    \"hokey\",\n    \"hokis\",\n    \"hokku\",\n    \"hokum\",\n    \"holds\",\n    \"holed\",\n    \"holes\",\n    \"holey\",\n    \"holks\",\n    \"holla\",\n    \"hollo\",\n    \"holme\",\n    \"holms\",\n    \"holon\",\n    \"holos\",\n    \"holts\",\n    \"homas\",\n    \"homed\",\n    \"homes\",\n    \"homey\",\n    \"homie\",\n    \"homme\",\n    \"homos\",\n    \"honan\",\n    \"honda\",\n    \"honds\",\n    \"honed\",\n    \"honer\",\n    \"hones\",\n    \"hongi\",\n    \"hongs\",\n    \"honks\",\n    \"honky\",\n    \"hooch\",\n    \"hoods\",\n    \"hoody\",\n    \"hooey\",\n    \"hoofs\",\n    \"hooka\",\n    \"hooks\",\n    \"hooky\",\n    \"hooly\",\n    \"hoons\",\n    \"hoops\",\n    \"hoord\",\n    \"hoors\",\n    \"hoosh\",\n    \"hoots\",\n    \"hooty\",\n    \"hoove\",\n    \"hopak\",\n    \"hoped\",\n    \"hoper\",\n    \"hopes\",\n    \"hoppy\",\n    \"horah\",\n    \"horal\",\n    \"horas\",\n    \"horis\",\n    \"horks\",\n    \"horme\",\n    \"horns\",\n    \"horst\",\n    \"horsy\",\n    \"hosed\",\n    \"hosel\",\n    \"hosen\",\n    \"hoser\",\n    \"hoses\",\n    \"hosey\",\n    \"hosta\",\n    \"hosts\",\n    \"hotch\",\n    \"hoten\",\n    \"hotty\",\n    \"houff\",\n    \"houfs\",\n    \"hough\",\n    \"houri\",\n    \"hours\",\n    \"houts\",\n    \"hovea\",\n    \"hoved\",\n    \"hoven\",\n    \"hoves\",\n    \"howbe\",\n    \"howes\",\n    \"howff\",\n    \"howfs\",\n    \"howks\",\n    \"howls\",\n    \"howre\",\n    \"howso\",\n    \"hoxed\",\n    \"hoxes\",\n    \"hoyas\",\n    \"hoyed\",\n    \"hoyle\",\n    \"hubby\",\n    \"hucks\",\n    \"hudna\",\n    \"hudud\",\n    \"huers\",\n    \"huffs\",\n    \"huffy\",\n    \"huger\",\n    \"huggy\",\n    \"huhus\",\n    \"huias\",\n    \"hulas\",\n    \"hules\",\n    \"hulks\",\n    \"hulky\",\n    \"hullo\",\n    \"hulls\",\n    \"hully\",\n    \"humas\",\n    \"humfs\",\n    \"humic\",\n    \"humps\",\n    \"humpy\",\n    \"hunks\",\n    \"hunts\",\n    \"hurds\",\n    \"hurls\",\n    \"hurly\",\n    \"hurra\",\n    \"hurst\",\n    \"hurts\",\n    \"hushy\",\n    \"husks\",\n    \"husos\",\n    \"hutia\",\n    \"huzza\",\n    \"huzzy\",\n    \"hwyls\",\n    \"hydra\",\n    \"hyens\",\n    \"hygge\",\n    \"hying\",\n    \"hykes\",\n    \"hylas\",\n    \"hyleg\",\n    \"hyles\",\n    \"hylic\",\n    \"hymns\",\n    \"hynde\",\n    \"hyoid\",\n    \"hyped\",\n    \"hypes\",\n    \"hypha\",\n    \"hyphy\",\n    \"hypos\",\n    \"hyrax\",\n    \"hyson\",\n    \"hythe\",\n    \"iambi\",\n    \"iambs\",\n    \"ibrik\",\n    \"icers\",\n    \"iched\",\n    \"iches\",\n    \"ichor\",\n    \"icier\",\n    \"icker\",\n    \"ickle\",\n    \"icons\",\n    \"ictal\",\n    \"ictic\",\n    \"ictus\",\n    \"idant\",\n    \"ideas\",\n    \"idees\",\n    \"ident\",\n    \"idled\",\n    \"idles\",\n    \"idola\",\n    \"idols\",\n    \"idyls\",\n    \"iftar\",\n    \"igapo\",\n    \"igged\",\n    \"iglus\",\n    \"ihram\",\n    \"ikans\",\n    \"ikats\",\n    \"ikons\",\n    \"ileac\",\n    \"ileal\",\n    \"ileum\",\n    \"ileus\",\n    \"iliad\",\n    \"ilial\",\n    \"ilium\",\n    \"iller\",\n    \"illth\",\n    \"imago\",\n    \"imams\",\n    \"imari\",\n    \"imaum\",\n    \"imbar\",\n    \"imbed\",\n    \"imide\",\n    \"imido\",\n    \"imids\",\n    \"imine\",\n    \"imino\",\n    \"immew\",\n    \"immit\",\n    \"immix\",\n    \"imped\",\n    \"impis\",\n    \"impot\",\n    \"impro\",\n    \"imshi\",\n    \"imshy\",\n    \"inapt\",\n    \"inarm\",\n    \"inbye\",\n    \"incel\",\n    \"incle\",\n    \"incog\",\n    \"incus\",\n    \"incut\",\n    \"indew\",\n    \"india\",\n    \"indie\",\n    \"indol\",\n    \"indow\",\n    \"indri\",\n    \"indue\",\n    \"inerm\",\n    \"infix\",\n    \"infos\",\n    \"infra\",\n    \"ingan\",\n    \"ingle\",\n    \"inion\",\n    \"inked\",\n    \"inker\",\n    \"inkle\",\n    \"inned\",\n    \"innit\",\n    \"inorb\",\n    \"inrun\",\n    \"inset\",\n    \"inspo\",\n    \"intel\",\n    \"intil\",\n    \"intis\",\n    \"intra\",\n    \"inula\",\n    \"inure\",\n    \"inurn\",\n    \"inust\",\n    \"invar\",\n    \"inwit\",\n    \"iodic\",\n    \"iodid\",\n    \"iodin\",\n    \"iotas\",\n    \"ippon\",\n    \"irade\",\n    \"irids\",\n    \"iring\",\n    \"irked\",\n    \"iroko\",\n    \"irone\",\n    \"irons\",\n    \"isbas\",\n    \"ishes\",\n    \"isled\",\n    \"isles\",\n    \"isnae\",\n    \"issei\",\n    \"istle\",\n    \"items\",\n    \"ither\",\n    \"ivied\",\n    \"ivies\",\n    \"ixias\",\n    \"ixnay\",\n    \"ixora\",\n    \"ixtle\",\n    \"izard\",\n    \"izars\",\n    \"izzat\",\n    \"jaaps\",\n    \"jabot\",\n    \"jacal\",\n    \"jacks\",\n    \"jacky\",\n    \"jaded\",\n    \"jades\",\n    \"jafas\",\n    \"jaffa\",\n    \"jagas\",\n    \"jager\",\n    \"jaggs\",\n    \"jaggy\",\n    \"jagir\",\n    \"jagra\",\n    \"jails\",\n    \"jaker\",\n    \"jakes\",\n    \"jakey\",\n    \"jalap\",\n    \"jalop\",\n    \"jambe\",\n    \"jambo\",\n    \"jambs\",\n    \"jambu\",\n    \"james\",\n    \"jammy\",\n    \"jamon\",\n    \"janes\",\n    \"janns\",\n    \"janny\",\n    \"janty\",\n    \"japan\",\n    \"japed\",\n    \"japer\",\n    \"japes\",\n    \"jarks\",\n    \"jarls\",\n    \"jarps\",\n    \"jarta\",\n    \"jarul\",\n    \"jasey\",\n    \"jaspe\",\n    \"jasps\",\n    \"jatos\",\n    \"jauks\",\n    \"jaups\",\n    \"javas\",\n    \"javel\",\n    \"jawan\",\n    \"jawed\",\n    \"jaxie\",\n    \"jeans\",\n    \"jeats\",\n    \"jebel\",\n    \"jedis\",\n    \"jeels\",\n    \"jeely\",\n    \"jeeps\",\n    \"jeers\",\n    \"jeeze\",\n    \"jefes\",\n    \"jeffs\",\n    \"jehad\",\n    \"jehus\",\n    \"jelab\",\n    \"jello\",\n    \"jells\",\n    \"jembe\",\n    \"jemmy\",\n    \"jenny\",\n    \"jeons\",\n    \"jerid\",\n    \"jerks\",\n    \"jerry\",\n    \"jesse\",\n    \"jests\",\n    \"jesus\",\n    \"jetes\",\n    \"jeton\",\n    \"jeune\",\n    \"jewed\",\n    \"jewie\",\n    \"jhala\",\n    \"jiaos\",\n    \"jibba\",\n    \"jibbs\",\n    \"jibed\",\n    \"jiber\",\n    \"jibes\",\n    \"jiffs\",\n    \"jiggy\",\n    \"jigot\",\n    \"jihad\",\n    \"jills\",\n    \"jilts\",\n    \"jimmy\",\n    \"jimpy\",\n    \"jingo\",\n    \"jinks\",\n    \"jinne\",\n    \"jinni\",\n    \"jinns\",\n    \"jirds\",\n    \"jirga\",\n    \"jirre\",\n    \"jisms\",\n    \"jived\",\n    \"jiver\",\n    \"jives\",\n    \"jivey\",\n    \"jnana\",\n    \"jobed\",\n    \"jobes\",\n    \"jocko\",\n    \"jocks\",\n    \"jocky\",\n    \"jocos\",\n    \"jodel\",\n    \"joeys\",\n    \"johns\",\n    \"joins\",\n    \"joked\",\n    \"jokes\",\n    \"jokey\",\n    \"jokol\",\n    \"joled\",\n    \"joles\",\n    \"jolls\",\n    \"jolts\",\n    \"jolty\",\n    \"jomon\",\n    \"jomos\",\n    \"jones\",\n    \"jongs\",\n    \"jonty\",\n    \"jooks\",\n    \"joram\",\n    \"jorum\",\n    \"jotas\",\n    \"jotty\",\n    \"jotun\",\n    \"joual\",\n    \"jougs\",\n    \"jouks\",\n    \"joule\",\n    \"jours\",\n    \"jowar\",\n    \"jowed\",\n    \"jowls\",\n    \"jowly\",\n    \"joyed\",\n    \"jubas\",\n    \"jubes\",\n    \"jucos\",\n    \"judas\",\n    \"judgy\",\n    \"judos\",\n    \"jugal\",\n    \"jugum\",\n    \"jujus\",\n    \"juked\",\n    \"jukes\",\n    \"jukus\",\n    \"julep\",\n    \"jumar\",\n    \"jumby\",\n    \"jumps\",\n    \"junco\",\n    \"junks\",\n    \"junky\",\n    \"jupes\",\n    \"jupon\",\n    \"jural\",\n    \"jurat\",\n    \"jurel\",\n    \"jures\",\n    \"justs\",\n    \"jutes\",\n    \"jutty\",\n    \"juves\",\n    \"juvie\",\n    \"kaama\",\n    \"kabab\",\n    \"kabar\",\n    \"kabob\",\n    \"kacha\",\n    \"kacks\",\n    \"kadai\",\n    \"kades\",\n    \"kadis\",\n    \"kafir\",\n    \"kagos\",\n    \"kagus\",\n    \"kahal\",\n    \"kaiak\",\n    \"kaids\",\n    \"kaies\",\n    \"kaifs\",\n    \"kaika\",\n    \"kaiks\",\n    \"kails\",\n    \"kaims\",\n    \"kaing\",\n    \"kains\",\n    \"kakas\",\n    \"kakis\",\n    \"kalam\",\n    \"kales\",\n    \"kalif\",\n    \"kalis\",\n    \"kalpa\",\n    \"kamas\",\n    \"kames\",\n    \"kamik\",\n    \"kamis\",\n    \"kamme\",\n    \"kanae\",\n    \"kanas\",\n    \"kandy\",\n    \"kaneh\",\n    \"kanes\",\n    \"kanga\",\n    \"kangs\",\n    \"kanji\",\n    \"kants\",\n    \"kanzu\",\n    \"kaons\",\n    \"kapas\",\n    \"kaphs\",\n    \"kapok\",\n    \"kapow\",\n    \"kapus\",\n    \"kaput\",\n    \"karas\",\n    \"karat\",\n    \"karks\",\n    \"karns\",\n    \"karoo\",\n    \"karos\",\n    \"karri\",\n    \"karst\",\n    \"karsy\",\n    \"karts\",\n    \"karzy\",\n    \"kasha\",\n    \"kasme\",\n    \"katal\",\n    \"katas\",\n    \"katis\",\n    \"katti\",\n    \"kaugh\",\n    \"kauri\",\n    \"kauru\",\n    \"kaury\",\n    \"kaval\",\n    \"kavas\",\n    \"kawas\",\n    \"kawau\",\n    \"kawed\",\n    \"kayle\",\n    \"kayos\",\n    \"kazis\",\n    \"kazoo\",\n    \"kbars\",\n    \"kebar\",\n    \"kebob\",\n    \"kecks\",\n    \"kedge\",\n    \"kedgy\",\n    \"keech\",\n    \"keefs\",\n    \"keeks\",\n    \"keels\",\n    \"keema\",\n    \"keeno\",\n    \"keens\",\n    \"keeps\",\n    \"keets\",\n    \"keeve\",\n    \"kefir\",\n    \"kehua\",\n    \"keirs\",\n    \"kelep\",\n    \"kelim\",\n    \"kells\",\n    \"kelly\",\n    \"kelps\",\n    \"kelpy\",\n    \"kelts\",\n    \"kelty\",\n    \"kembo\",\n    \"kembs\",\n    \"kemps\",\n    \"kempt\",\n    \"kempy\",\n    \"kenaf\",\n    \"kench\",\n    \"kendo\",\n    \"kenos\",\n    \"kente\",\n    \"kents\",\n    \"kepis\",\n    \"kerbs\",\n    \"kerel\",\n    \"kerfs\",\n    \"kerky\",\n    \"kerma\",\n    \"kerne\",\n    \"kerns\",\n    \"keros\",\n    \"kerry\",\n    \"kerve\",\n    \"kesar\",\n    \"kests\",\n    \"ketas\",\n    \"ketch\",\n    \"ketes\",\n    \"ketol\",\n    \"kevel\",\n    \"kevil\",\n    \"kexes\",\n    \"keyed\",\n    \"keyer\",\n    \"khadi\",\n    \"khafs\",\n    \"khans\",\n    \"khaph\",\n    \"khats\",\n    \"khaya\",\n    \"khazi\",\n    \"kheda\",\n    \"kheth\",\n    \"khets\",\n    \"khoja\",\n    \"khors\",\n    \"khoum\",\n    \"khuds\",\n    \"kiaat\",\n    \"kiack\",\n    \"kiang\",\n    \"kibbe\",\n    \"kibbi\",\n    \"kibei\",\n    \"kibes\",\n    \"kibla\",\n    \"kicks\",\n    \"kicky\",\n    \"kiddo\",\n    \"kiddy\",\n    \"kidel\",\n    \"kidge\",\n    \"kiefs\",\n    \"kiers\",\n    \"kieve\",\n    \"kievs\",\n    \"kight\",\n    \"kikes\",\n    \"kikoi\",\n    \"kiley\",\n    \"kilim\",\n    \"kills\",\n    \"kilns\",\n    \"kilos\",\n    \"kilps\",\n    \"kilts\",\n    \"kilty\",\n    \"kimbo\",\n    \"kinas\",\n    \"kinda\",\n    \"kinds\",\n    \"kindy\",\n    \"kines\",\n    \"kings\",\n    \"kinin\",\n    \"kinks\",\n    \"kinos\",\n    \"kiore\",\n    \"kipes\",\n    \"kippa\",\n    \"kipps\",\n    \"kirby\",\n    \"kirks\",\n    \"kirns\",\n    \"kirri\",\n    \"kisan\",\n    \"kissy\",\n    \"kists\",\n    \"kited\",\n    \"kiter\",\n    \"kites\",\n    \"kithe\",\n    \"kiths\",\n    \"kitul\",\n    \"kivas\",\n    \"kiwis\",\n    \"klang\",\n    \"klaps\",\n    \"klett\",\n    \"klick\",\n    \"klieg\",\n    \"kliks\",\n    \"klong\",\n    \"kloof\",\n    \"kluge\",\n    \"klutz\",\n    \"knags\",\n    \"knaps\",\n    \"knarl\",\n    \"knars\",\n    \"knaur\",\n    \"knawe\",\n    \"knees\",\n    \"knell\",\n    \"knish\",\n    \"knits\",\n    \"knive\",\n    \"knobs\",\n    \"knops\",\n    \"knosp\",\n    \"knots\",\n    \"knout\",\n    \"knowe\",\n    \"knows\",\n    \"knubs\",\n    \"knurl\",\n    \"knurr\",\n    \"knurs\",\n    \"knuts\",\n    \"koans\",\n    \"koaps\",\n    \"koban\",\n    \"kobos\",\n    \"koels\",\n    \"koffs\",\n    \"kofta\",\n    \"kogal\",\n    \"kohas\",\n    \"kohen\",\n    \"kohls\",\n    \"koine\",\n    \"kojis\",\n    \"kokam\",\n    \"kokas\",\n    \"koker\",\n    \"kokra\",\n    \"kokum\",\n    \"kolas\",\n    \"kolos\",\n    \"kombu\",\n    \"konbu\",\n    \"kondo\",\n    \"konks\",\n    \"kooks\",\n    \"kooky\",\n    \"koori\",\n    \"kopek\",\n    \"kophs\",\n    \"kopje\",\n    \"koppa\",\n    \"korai\",\n    \"koras\",\n    \"korat\",\n    \"kores\",\n    \"korma\",\n    \"koros\",\n    \"korun\",\n    \"korus\",\n    \"koses\",\n    \"kotch\",\n    \"kotos\",\n    \"kotow\",\n    \"koura\",\n    \"kraal\",\n    \"krabs\",\n    \"kraft\",\n    \"krais\",\n    \"krait\",\n    \"krang\",\n    \"krans\",\n    \"kranz\",\n    \"kraut\",\n    \"krays\",\n    \"kreep\",\n    \"kreng\",\n    \"krewe\",\n    \"krona\",\n    \"krone\",\n    \"kroon\",\n    \"krubi\",\n    \"krunk\",\n    \"ksars\",\n    \"kubie\",\n    \"kudos\",\n    \"kudus\",\n    \"kudzu\",\n    \"kufis\",\n    \"kugel\",\n    \"kuias\",\n    \"kukri\",\n    \"kukus\",\n    \"kulak\",\n    \"kulan\",\n    \"kulas\",\n    \"kulfi\",\n    \"kumis\",\n    \"kumys\",\n    \"kuris\",\n    \"kurre\",\n    \"kurta\",\n    \"kurus\",\n    \"kusso\",\n    \"kutas\",\n    \"kutch\",\n    \"kutis\",\n    \"kutus\",\n    \"kuzus\",\n    \"kvass\",\n    \"kvell\",\n    \"kwela\",\n    \"kyack\",\n    \"kyaks\",\n    \"kyang\",\n    \"kyars\",\n    \"kyats\",\n    \"kybos\",\n    \"kydst\",\n    \"kyles\",\n    \"kylie\",\n    \"kylin\",\n    \"kylix\",\n    \"kyloe\",\n    \"kynde\",\n    \"kynds\",\n    \"kypes\",\n    \"kyrie\",\n    \"kytes\",\n    \"kythe\",\n    \"laari\",\n    \"labda\",\n    \"labia\",\n    \"labis\",\n    \"labra\",\n    \"laced\",\n    \"lacer\",\n    \"laces\",\n    \"lacet\",\n    \"lacey\",\n    \"lacks\",\n    \"laddy\",\n    \"laded\",\n    \"lader\",\n    \"lades\",\n    \"laers\",\n    \"laevo\",\n    \"lagan\",\n    \"lahal\",\n    \"lahar\",\n    \"laich\",\n    \"laics\",\n    \"laids\",\n    \"laigh\",\n    \"laika\",\n    \"laiks\",\n    \"laird\",\n    \"lairs\",\n    \"lairy\",\n    \"laith\",\n    \"laity\",\n    \"laked\",\n    \"laker\",\n    \"lakes\",\n    \"lakhs\",\n    \"lakin\",\n    \"laksa\",\n    \"laldy\",\n    \"lalls\",\n    \"lamas\",\n    \"lambs\",\n    \"lamby\",\n    \"lamed\",\n    \"lamer\",\n    \"lames\",\n    \"lamia\",\n    \"lammy\",\n    \"lamps\",\n    \"lanai\",\n    \"lanas\",\n    \"lanch\",\n    \"lande\",\n    \"lands\",\n    \"lanes\",\n    \"lanks\",\n    \"lants\",\n    \"lapin\",\n    \"lapis\",\n    \"lapje\",\n    \"larch\",\n    \"lards\",\n    \"lardy\",\n    \"laree\",\n    \"lares\",\n    \"largo\",\n    \"laris\",\n    \"larks\",\n    \"larky\",\n    \"larns\",\n    \"larnt\",\n    \"larum\",\n    \"lased\",\n    \"laser\",\n    \"lases\",\n    \"lassi\",\n    \"lassu\",\n    \"lassy\",\n    \"lasts\",\n    \"latah\",\n    \"lated\",\n    \"laten\",\n    \"latex\",\n    \"lathi\",\n    \"laths\",\n    \"lathy\",\n    \"latke\",\n    \"latus\",\n    \"lauan\",\n    \"lauch\",\n    \"lauds\",\n    \"laufs\",\n    \"laund\",\n    \"laura\",\n    \"laval\",\n    \"lavas\",\n    \"laved\",\n    \"laver\",\n    \"laves\",\n    \"lavra\",\n    \"lavvy\",\n    \"lawed\",\n    \"lawer\",\n    \"lawin\",\n    \"lawks\",\n    \"lawns\",\n    \"lawny\",\n    \"laxed\",\n    \"laxer\",\n    \"laxes\",\n    \"laxly\",\n    \"layed\",\n    \"layin\",\n    \"layup\",\n    \"lazar\",\n    \"lazed\",\n    \"lazes\",\n    \"lazos\",\n    \"lazzi\",\n    \"lazzo\",\n    \"leads\",\n    \"leady\",\n    \"leafs\",\n    \"leaks\",\n    \"leams\",\n    \"leans\",\n    \"leany\",\n    \"leaps\",\n    \"leare\",\n    \"lears\",\n    \"leary\",\n    \"leats\",\n    \"leavy\",\n    \"leaze\",\n    \"leben\",\n    \"leccy\",\n    \"ledes\",\n    \"ledgy\",\n    \"ledum\",\n    \"leear\",\n    \"leeks\",\n    \"leeps\",\n    \"leers\",\n    \"leese\",\n    \"leets\",\n    \"leeze\",\n    \"lefte\",\n    \"lefts\",\n    \"leger\",\n    \"leges\",\n    \"legge\",\n    \"leggo\",\n    \"legit\",\n    \"lehrs\",\n    \"lehua\",\n    \"leirs\",\n    \"leish\",\n    \"leman\",\n    \"lemed\",\n    \"lemel\",\n    \"lemes\",\n    \"lemma\",\n    \"lemme\",\n    \"lends\",\n    \"lenes\",\n    \"lengs\",\n    \"lenis\",\n    \"lenos\",\n    \"lense\",\n    \"lenti\",\n    \"lento\",\n    \"leone\",\n    \"lepid\",\n    \"lepra\",\n    \"lepta\",\n    \"lered\",\n    \"leres\",\n    \"lerps\",\n    \"lesbo\",\n    \"leses\",\n    \"lests\",\n    \"letch\",\n    \"lethe\",\n    \"letup\",\n    \"leuch\",\n    \"leuco\",\n    \"leuds\",\n    \"leugh\",\n    \"levas\",\n    \"levee\",\n    \"leves\",\n    \"levin\",\n    \"levis\",\n    \"lewis\",\n    \"lexes\",\n    \"lexis\",\n    \"lezes\",\n    \"lezza\",\n    \"lezzy\",\n    \"liana\",\n    \"liane\",\n    \"liang\",\n    \"liard\",\n    \"liars\",\n    \"liart\",\n    \"liber\",\n    \"libra\",\n    \"libri\",\n    \"lichi\",\n    \"licht\",\n    \"licit\",\n    \"licks\",\n    \"lidar\",\n    \"lidos\",\n    \"liefs\",\n    \"liens\",\n    \"liers\",\n    \"lieus\",\n    \"lieve\",\n    \"lifer\",\n    \"lifes\",\n    \"lifts\",\n    \"ligan\",\n    \"liger\",\n    \"ligge\",\n    \"ligne\",\n    \"liked\",\n    \"liker\",\n    \"likes\",\n    \"likin\",\n    \"lills\",\n    \"lilos\",\n    \"lilts\",\n    \"liman\",\n    \"limas\",\n    \"limax\",\n    \"limba\",\n    \"limbi\",\n    \"limbs\",\n    \"limby\",\n    \"limed\",\n    \"limen\",\n    \"limes\",\n    \"limey\",\n    \"limma\",\n    \"limns\",\n    \"limos\",\n    \"limpa\",\n    \"limps\",\n    \"linac\",\n    \"linch\",\n    \"linds\",\n    \"lindy\",\n    \"lined\",\n    \"lines\",\n    \"liney\",\n    \"linga\",\n    \"lings\",\n    \"lingy\",\n    \"linin\",\n    \"links\",\n    \"linky\",\n    \"linns\",\n    \"linny\",\n    \"linos\",\n    \"lints\",\n    \"linty\",\n    \"linum\",\n    \"linux\",\n    \"lions\",\n    \"lipas\",\n    \"lipes\",\n    \"lipin\",\n    \"lipos\",\n    \"lippy\",\n    \"liras\",\n    \"lirks\",\n    \"lirot\",\n    \"lisks\",\n    \"lisle\",\n    \"lisps\",\n    \"lists\",\n    \"litai\",\n    \"litas\",\n    \"lited\",\n    \"liter\",\n    \"lites\",\n    \"litho\",\n    \"liths\",\n    \"litre\",\n    \"lived\",\n    \"liven\",\n    \"lives\",\n    \"livor\",\n    \"livre\",\n    \"llano\",\n    \"loach\",\n    \"loads\",\n    \"loafs\",\n    \"loams\",\n    \"loans\",\n    \"loast\",\n    \"loave\",\n    \"lobar\",\n    \"lobed\",\n    \"lobes\",\n    \"lobos\",\n    \"lobus\",\n    \"loche\",\n    \"lochs\",\n    \"locie\",\n    \"locis\",\n    \"locks\",\n    \"locos\",\n    \"locum\",\n    \"loden\",\n    \"lodes\",\n    \"loess\",\n    \"lofts\",\n    \"logan\",\n    \"loges\",\n    \"loggy\",\n    \"logia\",\n    \"logie\",\n    \"logoi\",\n    \"logon\",\n    \"logos\",\n    \"lohan\",\n    \"loids\",\n    \"loins\",\n    \"loipe\",\n    \"loirs\",\n    \"lokes\",\n    \"lolls\",\n    \"lolly\",\n    \"lolog\",\n    \"lomas\",\n    \"lomed\",\n    \"lomes\",\n    \"loner\",\n    \"longa\",\n    \"longe\",\n    \"longs\",\n    \"looby\",\n    \"looed\",\n    \"looey\",\n    \"loofa\",\n    \"loofs\",\n    \"looie\",\n    \"looks\",\n    \"looky\",\n    \"looms\",\n    \"loons\",\n    \"loony\",\n    \"loops\",\n    \"loord\",\n    \"loots\",\n    \"loped\",\n    \"loper\",\n    \"lopes\",\n    \"loppy\",\n    \"loral\",\n    \"loran\",\n    \"lords\",\n    \"lordy\",\n    \"lorel\",\n    \"lores\",\n    \"loric\",\n    \"loris\",\n    \"losed\",\n    \"losel\",\n    \"losen\",\n    \"loses\",\n    \"lossy\",\n    \"lotah\",\n    \"lotas\",\n    \"lotes\",\n    \"lotic\",\n    \"lotos\",\n    \"lotsa\",\n    \"lotta\",\n    \"lotte\",\n    \"lotto\",\n    \"lotus\",\n    \"loued\",\n    \"lough\",\n    \"louie\",\n    \"louis\",\n    \"louma\",\n    \"lound\",\n    \"louns\",\n    \"loupe\",\n    \"loups\",\n    \"loure\",\n    \"lours\",\n    \"loury\",\n    \"louts\",\n    \"lovat\",\n    \"loved\",\n    \"loves\",\n    \"lovey\",\n    \"lovie\",\n    \"lowan\",\n    \"lowed\",\n    \"lowes\",\n    \"lownd\",\n    \"lowne\",\n    \"lowns\",\n    \"lowps\",\n    \"lowry\",\n    \"lowse\",\n    \"lowts\",\n    \"loxed\",\n    \"loxes\",\n    \"lozen\",\n    \"luach\",\n    \"luaus\",\n    \"lubed\",\n    \"lubes\",\n    \"lubra\",\n    \"luces\",\n    \"lucks\",\n    \"lucre\",\n    \"ludes\",\n    \"ludic\",\n    \"ludos\",\n    \"luffa\",\n    \"luffs\",\n    \"luged\",\n    \"luger\",\n    \"luges\",\n    \"lulls\",\n    \"lulus\",\n    \"lumas\",\n    \"lumbi\",\n    \"lumme\",\n    \"lummy\",\n    \"lumps\",\n    \"lunas\",\n    \"lunes\",\n    \"lunet\",\n    \"lungi\",\n    \"lungs\",\n    \"lunks\",\n    \"lunts\",\n    \"lupin\",\n    \"lured\",\n    \"lurer\",\n    \"lures\",\n    \"lurex\",\n    \"lurgi\",\n    \"lurgy\",\n    \"lurks\",\n    \"lurry\",\n    \"lurve\",\n    \"luser\",\n    \"lushy\",\n    \"lusks\",\n    \"lusts\",\n    \"lusus\",\n    \"lutea\",\n    \"luted\",\n    \"luter\",\n    \"lutes\",\n    \"luvvy\",\n    \"luxed\",\n    \"luxer\",\n    \"luxes\",\n    \"lweis\",\n    \"lyams\",\n    \"lyard\",\n    \"lyart\",\n    \"lyase\",\n    \"lycea\",\n    \"lycee\",\n    \"lycra\",\n    \"lymes\",\n    \"lynes\",\n    \"lyres\",\n    \"lysed\",\n    \"lyses\",\n    \"lysin\",\n    \"lysis\",\n    \"lysol\",\n    \"lyssa\",\n    \"lyted\",\n    \"lytes\",\n    \"lythe\",\n    \"lytic\",\n    \"lytta\",\n    \"maaed\",\n    \"maare\",\n    \"maars\",\n    \"mabes\",\n    \"macas\",\n    \"maced\",\n    \"macer\",\n    \"maces\",\n    \"mache\",\n    \"machi\",\n    \"machs\",\n    \"macks\",\n    \"macle\",\n    \"macon\",\n    \"madge\",\n    \"madid\",\n    \"madre\",\n    \"maerl\",\n    \"mafic\",\n    \"mages\",\n    \"maggs\",\n    \"magot\",\n    \"magus\",\n    \"mahoe\",\n    \"mahua\",\n    \"mahwa\",\n    \"maids\",\n    \"maiko\",\n    \"maiks\",\n    \"maile\",\n    \"maill\",\n    \"mails\",\n    \"maims\",\n    \"mains\",\n    \"maire\",\n    \"mairs\",\n    \"maise\",\n    \"maist\",\n    \"makar\",\n    \"makes\",\n    \"makis\",\n    \"makos\",\n    \"malam\",\n    \"malar\",\n    \"malas\",\n    \"malax\",\n    \"males\",\n    \"malic\",\n    \"malik\",\n    \"malis\",\n    \"malls\",\n    \"malms\",\n    \"malmy\",\n    \"malts\",\n    \"malty\",\n    \"malus\",\n    \"malva\",\n    \"malwa\",\n    \"mamas\",\n    \"mamba\",\n    \"mamee\",\n    \"mamey\",\n    \"mamie\",\n    \"manas\",\n    \"manat\",\n    \"mandi\",\n    \"maneb\",\n    \"maned\",\n    \"maneh\",\n    \"manes\",\n    \"manet\",\n    \"mangs\",\n    \"manis\",\n    \"manky\",\n    \"manna\",\n    \"manos\",\n    \"manse\",\n    \"manta\",\n    \"manto\",\n    \"manty\",\n    \"manul\",\n    \"manus\",\n    \"mapau\",\n    \"maqui\",\n    \"marae\",\n    \"marah\",\n    \"maras\",\n    \"marcs\",\n    \"mardy\",\n    \"mares\",\n    \"marge\",\n    \"margs\",\n    \"maria\",\n    \"marid\",\n    \"marka\",\n    \"marks\",\n    \"marle\",\n    \"marls\",\n    \"marly\",\n    \"marms\",\n    \"maron\",\n    \"maror\",\n    \"marra\",\n    \"marri\",\n    \"marse\",\n    \"marts\",\n    \"marvy\",\n    \"masas\",\n    \"mased\",\n    \"maser\",\n    \"mases\",\n    \"mashy\",\n    \"masks\",\n    \"massa\",\n    \"massy\",\n    \"masts\",\n    \"masty\",\n    \"masus\",\n    \"matai\",\n    \"mated\",\n    \"mater\",\n    \"mates\",\n    \"maths\",\n    \"matin\",\n    \"matlo\",\n    \"matte\",\n    \"matts\",\n    \"matza\",\n    \"matzo\",\n    \"mauby\",\n    \"mauds\",\n    \"mauls\",\n    \"maund\",\n    \"mauri\",\n    \"mausy\",\n    \"mauts\",\n    \"mauzy\",\n    \"maven\",\n    \"mavie\",\n    \"mavin\",\n    \"mavis\",\n    \"mawed\",\n    \"mawks\",\n    \"mawky\",\n    \"mawns\",\n    \"mawrs\",\n    \"maxed\",\n    \"maxes\",\n    \"maxis\",\n    \"mayan\",\n    \"mayas\",\n    \"mayed\",\n    \"mayos\",\n    \"mayst\",\n    \"mazed\",\n    \"mazer\",\n    \"mazes\",\n    \"mazey\",\n    \"mazut\",\n    \"mbira\",\n    \"meads\",\n    \"meals\",\n    \"meane\",\n    \"means\",\n    \"meany\",\n    \"meare\",\n    \"mease\",\n    \"meath\",\n    \"meats\",\n    \"mebos\",\n    \"mechs\",\n    \"mecks\",\n    \"medii\",\n    \"medle\",\n    \"meeds\",\n    \"meers\",\n    \"meets\",\n    \"meffs\",\n    \"meins\",\n    \"meint\",\n    \"meiny\",\n    \"meith\",\n    \"mekka\",\n    \"melas\",\n    \"melba\",\n    \"melds\",\n    \"melic\",\n    \"melik\",\n    \"mells\",\n    \"melts\",\n    \"melty\",\n    \"memes\",\n    \"memos\",\n    \"menad\",\n    \"mends\",\n    \"mened\",\n    \"menes\",\n    \"menge\",\n    \"mengs\",\n    \"mensa\",\n    \"mense\",\n    \"mensh\",\n    \"menta\",\n    \"mento\",\n    \"menus\",\n    \"meous\",\n    \"meows\",\n    \"merch\",\n    \"mercs\",\n    \"merde\",\n    \"mered\",\n    \"merel\",\n    \"merer\",\n    \"meres\",\n    \"meril\",\n    \"meris\",\n    \"merks\",\n    \"merle\",\n    \"merls\",\n    \"merse\",\n    \"mesal\",\n    \"mesas\",\n    \"mesel\",\n    \"meses\",\n    \"meshy\",\n    \"mesic\",\n    \"mesne\",\n    \"meson\",\n    \"messy\",\n    \"mesto\",\n    \"meted\",\n    \"metes\",\n    \"metho\",\n    \"meths\",\n    \"metic\",\n    \"metif\",\n    \"metis\",\n    \"metol\",\n    \"metre\",\n    \"meuse\",\n    \"meved\",\n    \"meves\",\n    \"mewed\",\n    \"mewls\",\n    \"meynt\",\n    \"mezes\",\n    \"mezze\",\n    \"mezzo\",\n    \"mhorr\",\n    \"miaou\",\n    \"miaow\",\n    \"miasm\",\n    \"miaul\",\n    \"micas\",\n    \"miche\",\n    \"micht\",\n    \"micks\",\n    \"micky\",\n    \"micos\",\n    \"micra\",\n    \"middy\",\n    \"midgy\",\n    \"midis\",\n    \"miens\",\n    \"mieve\",\n    \"miffs\",\n    \"miffy\",\n    \"mifty\",\n    \"miggs\",\n    \"mihas\",\n    \"mihis\",\n    \"miked\",\n    \"mikes\",\n    \"mikra\",\n    \"mikva\",\n    \"milch\",\n    \"milds\",\n    \"miler\",\n    \"miles\",\n    \"milfs\",\n    \"milia\",\n    \"milko\",\n    \"milks\",\n    \"mille\",\n    \"mills\",\n    \"milor\",\n    \"milos\",\n    \"milpa\",\n    \"milts\",\n    \"milty\",\n    \"miltz\",\n    \"mimed\",\n    \"mimeo\",\n    \"mimer\",\n    \"mimes\",\n    \"mimsy\",\n    \"minae\",\n    \"minar\",\n    \"minas\",\n    \"mincy\",\n    \"minds\",\n    \"mined\",\n    \"mines\",\n    \"minge\",\n    \"mings\",\n    \"mingy\",\n    \"minis\",\n    \"minke\",\n    \"minks\",\n    \"minny\",\n    \"minos\",\n    \"mints\",\n    \"mired\",\n    \"mires\",\n    \"mirex\",\n    \"mirid\",\n    \"mirin\",\n    \"mirks\",\n    \"mirky\",\n    \"mirly\",\n    \"miros\",\n    \"mirvs\",\n    \"mirza\",\n    \"misch\",\n    \"misdo\",\n    \"mises\",\n    \"misgo\",\n    \"misos\",\n    \"missa\",\n    \"mists\",\n    \"misty\",\n    \"mitch\",\n    \"miter\",\n    \"mites\",\n    \"mitis\",\n    \"mitre\",\n    \"mitts\",\n    \"mixed\",\n    \"mixen\",\n    \"mixer\",\n    \"mixes\",\n    \"mixte\",\n    \"mixup\",\n    \"mizen\",\n    \"mizzy\",\n    \"mneme\",\n    \"moans\",\n    \"moats\",\n    \"mobby\",\n    \"mobes\",\n    \"mobey\",\n    \"mobie\",\n    \"moble\",\n    \"mochi\",\n    \"mochs\",\n    \"mochy\",\n    \"mocks\",\n    \"moder\",\n    \"modes\",\n    \"modge\",\n    \"modii\",\n    \"modus\",\n    \"moers\",\n    \"mofos\",\n    \"moggy\",\n    \"mohel\",\n    \"mohos\",\n    \"mohrs\",\n    \"mohua\",\n    \"mohur\",\n    \"moile\",\n    \"moils\",\n    \"moira\",\n    \"moire\",\n    \"moits\",\n    \"mojos\",\n    \"mokes\",\n    \"mokis\",\n    \"mokos\",\n    \"molal\",\n    \"molas\",\n    \"molds\",\n    \"moled\",\n    \"moles\",\n    \"molla\",\n    \"molls\",\n    \"molly\",\n    \"molto\",\n    \"molts\",\n    \"molys\",\n    \"momes\",\n    \"momma\",\n    \"mommy\",\n    \"momus\",\n    \"monad\",\n    \"monal\",\n    \"monas\",\n    \"monde\",\n    \"mondo\",\n    \"moner\",\n    \"mongo\",\n    \"mongs\",\n    \"monic\",\n    \"monie\",\n    \"monks\",\n    \"monos\",\n    \"monte\",\n    \"monty\",\n    \"moobs\",\n    \"mooch\",\n    \"moods\",\n    \"mooed\",\n    \"mooks\",\n    \"moola\",\n    \"mooli\",\n    \"mools\",\n    \"mooly\",\n    \"moong\",\n    \"moons\",\n    \"moony\",\n    \"moops\",\n    \"moors\",\n    \"moory\",\n    \"moots\",\n    \"moove\",\n    \"moped\",\n    \"moper\",\n    \"mopes\",\n    \"mopey\",\n    \"moppy\",\n    \"mopsy\",\n    \"mopus\",\n    \"morae\",\n    \"moras\",\n    \"morat\",\n    \"moray\",\n    \"morel\",\n    \"mores\",\n    \"moria\",\n    \"morne\",\n    \"morns\",\n    \"morra\",\n    \"morro\",\n    \"morse\",\n    \"morts\",\n    \"mosed\",\n    \"moses\",\n    \"mosey\",\n    \"mosks\",\n    \"mosso\",\n    \"moste\",\n    \"mosts\",\n    \"moted\",\n    \"moten\",\n    \"motes\",\n    \"motet\",\n    \"motey\",\n    \"moths\",\n    \"mothy\",\n    \"motis\",\n    \"motte\",\n    \"motts\",\n    \"motty\",\n    \"motus\",\n    \"motza\",\n    \"mouch\",\n    \"moues\",\n    \"mould\",\n    \"mouls\",\n    \"moups\",\n    \"moust\",\n    \"mousy\",\n    \"moved\",\n    \"moves\",\n    \"mowas\",\n    \"mowed\",\n    \"mowra\",\n    \"moxas\",\n    \"moxie\",\n    \"moyas\",\n    \"moyle\",\n    \"moyls\",\n    \"mozed\",\n    \"mozes\",\n    \"mozos\",\n    \"mpret\",\n    \"mucho\",\n    \"mucic\",\n    \"mucid\",\n    \"mucin\",\n    \"mucks\",\n    \"mucor\",\n    \"mucro\",\n    \"mudge\",\n    \"mudir\",\n    \"mudra\",\n    \"muffs\",\n    \"mufti\",\n    \"mugga\",\n    \"muggs\",\n    \"muggy\",\n    \"muhly\",\n    \"muids\",\n    \"muils\",\n    \"muirs\",\n    \"muist\",\n    \"mujik\",\n    \"mulct\",\n    \"muled\",\n    \"mules\",\n    \"muley\",\n    \"mulga\",\n    \"mulie\",\n    \"mulla\",\n    \"mulls\",\n    \"mulse\",\n    \"mulsh\",\n    \"mumms\",\n    \"mumps\",\n    \"mumsy\",\n    \"mumus\",\n    \"munga\",\n    \"munge\",\n    \"mungo\",\n    \"mungs\",\n    \"munis\",\n    \"munts\",\n    \"muntu\",\n    \"muons\",\n    \"muras\",\n    \"mured\",\n    \"mures\",\n    \"murex\",\n    \"murid\",\n    \"murks\",\n    \"murls\",\n    \"murly\",\n    \"murra\",\n    \"murre\",\n    \"murri\",\n    \"murrs\",\n    \"murry\",\n    \"murti\",\n    \"murva\",\n    \"musar\",\n    \"musca\",\n    \"mused\",\n    \"muser\",\n    \"muses\",\n    \"muset\",\n    \"musha\",\n    \"musit\",\n    \"musks\",\n    \"musos\",\n    \"musse\",\n    \"mussy\",\n    \"musth\",\n    \"musts\",\n    \"mutch\",\n    \"muted\",\n    \"muter\",\n    \"mutes\",\n    \"mutha\",\n    \"mutis\",\n    \"muton\",\n    \"mutts\",\n    \"muxed\",\n    \"muxes\",\n    \"muzak\",\n    \"muzzy\",\n    \"mvule\",\n    \"myall\",\n    \"mylar\",\n    \"mynah\",\n    \"mynas\",\n    \"myoid\",\n    \"myoma\",\n    \"myope\",\n    \"myops\",\n    \"myopy\",\n    \"mysid\",\n    \"mythi\",\n    \"myths\",\n    \"mythy\",\n    \"myxos\",\n    \"mzees\",\n    \"naams\",\n    \"naans\",\n    \"nabes\",\n    \"nabis\",\n    \"nabks\",\n    \"nabla\",\n    \"nabob\",\n    \"nache\",\n    \"nacho\",\n    \"nacre\",\n    \"nadas\",\n    \"naeve\",\n    \"naevi\",\n    \"naffs\",\n    \"nagas\",\n    \"naggy\",\n    \"nagor\",\n    \"nahal\",\n    \"naiad\",\n    \"naifs\",\n    \"naiks\",\n    \"nails\",\n    \"naira\",\n    \"nairu\",\n    \"naked\",\n    \"naker\",\n    \"nakfa\",\n    \"nalas\",\n    \"naled\",\n    \"nalla\",\n    \"named\",\n    \"namer\",\n    \"names\",\n    \"namma\",\n    \"namus\",\n    \"nanas\",\n    \"nance\",\n    \"nancy\",\n    \"nandu\",\n    \"nanna\",\n    \"nanos\",\n    \"nanua\",\n    \"napas\",\n    \"naped\",\n    \"napes\",\n    \"napoo\",\n    \"nappa\",\n    \"nappe\",\n    \"nappy\",\n    \"naras\",\n    \"narco\",\n    \"narcs\",\n    \"nards\",\n    \"nares\",\n    \"naric\",\n    \"naris\",\n    \"narks\",\n    \"narky\",\n    \"narre\",\n    \"nashi\",\n    \"natch\",\n    \"nates\",\n    \"natis\",\n    \"natty\",\n    \"nauch\",\n    \"naunt\",\n    \"navar\",\n    \"naves\",\n    \"navew\",\n    \"navvy\",\n    \"nawab\",\n    \"nazes\",\n    \"nazir\",\n    \"nazis\",\n    \"nduja\",\n    \"neafe\",\n    \"neals\",\n    \"neaps\",\n    \"nears\",\n    \"neath\",\n    \"neats\",\n    \"nebek\",\n    \"nebel\",\n    \"necks\",\n    \"neddy\",\n    \"needs\",\n    \"neeld\",\n    \"neele\",\n    \"neemb\",\n    \"neems\",\n    \"neeps\",\n    \"neese\",\n    \"neeze\",\n    \"negro\",\n    \"negus\",\n    \"neifs\",\n    \"neist\",\n    \"neive\",\n    \"nelis\",\n    \"nelly\",\n    \"nemas\",\n    \"nemns\",\n    \"nempt\",\n    \"nenes\",\n    \"neons\",\n    \"neper\",\n    \"nepit\",\n    \"neral\",\n    \"nerds\",\n    \"nerka\",\n    \"nerks\",\n    \"nerol\",\n    \"nerts\",\n    \"nertz\",\n    \"nervy\",\n    \"nests\",\n    \"netes\",\n    \"netop\",\n    \"netts\",\n    \"netty\",\n    \"neuks\",\n    \"neume\",\n    \"neums\",\n    \"nevel\",\n    \"neves\",\n    \"nevus\",\n    \"newbs\",\n    \"newed\",\n    \"newel\",\n    \"newie\",\n    \"newsy\",\n    \"newts\",\n    \"nexts\",\n    \"nexus\",\n    \"ngaio\",\n    \"ngana\",\n    \"ngati\",\n    \"ngoma\",\n    \"ngwee\",\n    \"nicad\",\n    \"nicht\",\n    \"nicks\",\n    \"nicol\",\n    \"nidal\",\n    \"nided\",\n    \"nides\",\n    \"nidor\",\n    \"nidus\",\n    \"niefs\",\n    \"nieve\",\n    \"nifes\",\n    \"niffs\",\n    \"niffy\",\n    \"nifty\",\n    \"niger\",\n    \"nighs\",\n    \"nihil\",\n    \"nikab\",\n    \"nikah\",\n    \"nikau\",\n    \"nills\",\n    \"nimbi\",\n    \"nimbs\",\n    \"nimps\",\n    \"niner\",\n    \"nines\",\n    \"ninon\",\n    \"nipas\",\n    \"nippy\",\n    \"niqab\",\n    \"nirls\",\n    \"nirly\",\n    \"nisei\",\n    \"nisse\",\n    \"nisus\",\n    \"niter\",\n    \"nites\",\n    \"nitid\",\n    \"niton\",\n    \"nitre\",\n    \"nitro\",\n    \"nitry\",\n    \"nitty\",\n    \"nival\",\n    \"nixed\",\n    \"nixer\",\n    \"nixes\",\n    \"nixie\",\n    \"nizam\",\n    \"nkosi\",\n    \"noahs\",\n    \"nobby\",\n    \"nocks\",\n    \"nodal\",\n    \"noddy\",\n    \"nodes\",\n    \"nodus\",\n    \"noels\",\n    \"noggs\",\n    \"nohow\",\n    \"noils\",\n    \"noily\",\n    \"noint\",\n    \"noirs\",\n    \"noles\",\n    \"nolls\",\n    \"nolos\",\n    \"nomas\",\n    \"nomen\",\n    \"nomes\",\n    \"nomic\",\n    \"nomoi\",\n    \"nomos\",\n    \"nonas\",\n    \"nonce\",\n    \"nones\",\n    \"nonet\",\n    \"nongs\",\n    \"nonis\",\n    \"nonny\",\n    \"nonyl\",\n    \"noobs\",\n    \"nooit\",\n    \"nooks\",\n    \"nooky\",\n    \"noons\",\n    \"noops\",\n    \"nopal\",\n    \"noria\",\n    \"noris\",\n    \"norks\",\n    \"norma\",\n    \"norms\",\n    \"nosed\",\n    \"noser\",\n    \"noses\",\n    \"notal\",\n    \"noted\",\n    \"noter\",\n    \"notes\",\n    \"notum\",\n    \"nould\",\n    \"noule\",\n    \"nouls\",\n    \"nouns\",\n    \"nouny\",\n    \"noups\",\n    \"novae\",\n    \"novas\",\n    \"novum\",\n    \"noway\",\n    \"nowed\",\n    \"nowls\",\n    \"nowts\",\n    \"nowty\",\n    \"noxal\",\n    \"noxes\",\n    \"noyau\",\n    \"noyed\",\n    \"noyes\",\n    \"nubby\",\n    \"nubia\",\n    \"nucha\",\n    \"nuddy\",\n    \"nuder\",\n    \"nudes\",\n    \"nudie\",\n    \"nudzh\",\n    \"nuffs\",\n    \"nugae\",\n    \"nuked\",\n    \"nukes\",\n    \"nulla\",\n    \"nulls\",\n    \"numbs\",\n    \"numen\",\n    \"nummy\",\n    \"nunny\",\n    \"nurds\",\n    \"nurdy\",\n    \"nurls\",\n    \"nurrs\",\n    \"nutso\",\n    \"nutsy\",\n    \"nyaff\",\n    \"nyala\",\n    \"nying\",\n    \"nyssa\",\n    \"oaked\",\n    \"oaker\",\n    \"oakum\",\n    \"oared\",\n    \"oases\",\n    \"oasis\",\n    \"oasts\",\n    \"oaten\",\n    \"oater\",\n    \"oaths\",\n    \"oaves\",\n    \"obang\",\n    \"obeah\",\n    \"obeli\",\n    \"obeys\",\n    \"obias\",\n    \"obied\",\n    \"obiit\",\n    \"obits\",\n    \"objet\",\n    \"oboes\",\n    \"obole\",\n    \"oboli\",\n    \"obols\",\n    \"occam\",\n    \"ocher\",\n    \"oches\",\n    \"ochre\",\n    \"ochry\",\n    \"ocker\",\n    \"ocrea\",\n    \"octad\",\n    \"octan\",\n    \"octas\",\n    \"octyl\",\n    \"oculi\",\n    \"odahs\",\n    \"odals\",\n    \"odeon\",\n    \"odeum\",\n    \"odism\",\n    \"odist\",\n    \"odium\",\n    \"odors\",\n    \"odour\",\n    \"odyle\",\n    \"odyls\",\n    \"ofays\",\n    \"offed\",\n    \"offie\",\n    \"oflag\",\n    \"ofter\",\n    \"ogams\",\n    \"ogeed\",\n    \"ogees\",\n    \"oggin\",\n    \"ogham\",\n    \"ogive\",\n    \"ogled\",\n    \"ogler\",\n    \"ogles\",\n    \"ogmic\",\n    \"ogres\",\n    \"ohias\",\n    \"ohing\",\n    \"ohmic\",\n    \"ohone\",\n    \"oidia\",\n    \"oiled\",\n    \"oiler\",\n    \"oinks\",\n    \"oints\",\n    \"ojime\",\n    \"okapi\",\n    \"okays\",\n    \"okehs\",\n    \"okras\",\n    \"oktas\",\n    \"oldie\",\n    \"oleic\",\n    \"olein\",\n    \"olent\",\n    \"oleos\",\n    \"oleum\",\n    \"olios\",\n    \"ollas\",\n    \"ollav\",\n    \"oller\",\n    \"ollie\",\n    \"ology\",\n    \"olpae\",\n    \"olpes\",\n    \"omasa\",\n    \"omber\",\n    \"ombus\",\n    \"omens\",\n    \"omers\",\n    \"omits\",\n    \"omlah\",\n    \"omovs\",\n    \"omrah\",\n    \"oncer\",\n    \"onces\",\n    \"oncet\",\n    \"oncus\",\n    \"onely\",\n    \"oners\",\n    \"onery\",\n    \"onium\",\n    \"onkus\",\n    \"onlay\",\n    \"onned\",\n    \"ontic\",\n    \"oobit\",\n    \"oohed\",\n    \"oomph\",\n    \"oonts\",\n    \"ooped\",\n    \"oorie\",\n    \"ooses\",\n    \"ootid\",\n    \"oozed\",\n    \"oozes\",\n    \"opahs\",\n    \"opals\",\n    \"opens\",\n    \"opepe\",\n    \"oping\",\n    \"oppos\",\n    \"opsin\",\n    \"opted\",\n    \"opter\",\n    \"orach\",\n    \"oracy\",\n    \"orals\",\n    \"orang\",\n    \"orant\",\n    \"orate\",\n    \"orbed\",\n    \"orcas\",\n    \"orcin\",\n    \"ordos\",\n    \"oread\",\n    \"orfes\",\n    \"orgia\",\n    \"orgic\",\n    \"orgue\",\n    \"oribi\",\n    \"oriel\",\n    \"orixa\",\n    \"orles\",\n    \"orlon\",\n    \"orlop\",\n    \"ormer\",\n    \"ornis\",\n    \"orpin\",\n    \"orris\",\n    \"ortho\",\n    \"orval\",\n    \"orzos\",\n    \"oscar\",\n    \"oshac\",\n    \"osier\",\n    \"osmic\",\n    \"osmol\",\n    \"ossia\",\n    \"ostia\",\n    \"otaku\",\n    \"otary\",\n    \"ottar\",\n    \"ottos\",\n    \"oubit\",\n    \"oucht\",\n    \"ouens\",\n    \"ouija\",\n    \"oulks\",\n    \"oumas\",\n    \"oundy\",\n    \"oupas\",\n    \"ouped\",\n    \"ouphe\",\n    \"ouphs\",\n    \"ourie\",\n    \"ousel\",\n    \"ousts\",\n    \"outby\",\n    \"outed\",\n    \"outre\",\n    \"outro\",\n    \"outta\",\n    \"ouzel\",\n    \"ouzos\",\n    \"ovals\",\n    \"ovels\",\n    \"ovens\",\n    \"overs\",\n    \"ovist\",\n    \"ovoli\",\n    \"ovolo\",\n    \"ovule\",\n    \"owche\",\n    \"owies\",\n    \"owled\",\n    \"owler\",\n    \"owlet\",\n    \"owned\",\n    \"owres\",\n    \"owrie\",\n    \"owsen\",\n    \"oxbow\",\n    \"oxers\",\n    \"oxeye\",\n    \"oxids\",\n    \"oxies\",\n    \"oxime\",\n    \"oxims\",\n    \"oxlip\",\n    \"oxter\",\n    \"oyers\",\n    \"ozeki\",\n    \"ozzie\",\n    \"paals\",\n    \"paans\",\n    \"pacas\",\n    \"paced\",\n    \"pacer\",\n    \"paces\",\n    \"pacey\",\n    \"pacha\",\n    \"packs\",\n    \"pacos\",\n    \"pacta\",\n    \"pacts\",\n    \"padis\",\n    \"padle\",\n    \"padma\",\n    \"padre\",\n    \"padri\",\n    \"paean\",\n    \"paedo\",\n    \"paeon\",\n    \"paged\",\n    \"pager\",\n    \"pages\",\n    \"pagle\",\n    \"pagod\",\n    \"pagri\",\n    \"paiks\",\n    \"pails\",\n    \"pains\",\n    \"paire\",\n    \"pairs\",\n    \"paisa\",\n    \"paise\",\n    \"pakka\",\n    \"palas\",\n    \"palay\",\n    \"palea\",\n    \"paled\",\n    \"pales\",\n    \"palet\",\n    \"palis\",\n    \"palki\",\n    \"palla\",\n    \"palls\",\n    \"pally\",\n    \"palms\",\n    \"palmy\",\n    \"palpi\",\n    \"palps\",\n    \"palsa\",\n    \"pampa\",\n    \"panax\",\n    \"pance\",\n    \"panda\",\n    \"pands\",\n    \"pandy\",\n    \"paned\",\n    \"panes\",\n    \"panga\",\n    \"pangs\",\n    \"panim\",\n    \"panko\",\n    \"panne\",\n    \"panni\",\n    \"panto\",\n    \"pants\",\n    \"panty\",\n    \"paoli\",\n    \"paolo\",\n    \"papas\",\n    \"papaw\",\n    \"papes\",\n    \"pappi\",\n    \"pappy\",\n    \"parae\",\n    \"paras\",\n    \"parch\",\n    \"pardi\",\n    \"pards\",\n    \"pardy\",\n    \"pared\",\n    \"paren\",\n    \"pareo\",\n    \"pares\",\n    \"pareu\",\n    \"parev\",\n    \"parge\",\n    \"pargo\",\n    \"paris\",\n    \"parki\",\n    \"parks\",\n    \"parky\",\n    \"parle\",\n    \"parly\",\n    \"parma\",\n    \"parol\",\n    \"parps\",\n    \"parra\",\n    \"parrs\",\n    \"parti\",\n    \"parts\",\n    \"parve\",\n    \"parvo\",\n    \"paseo\",\n    \"pases\",\n    \"pasha\",\n    \"pashm\",\n    \"paska\",\n    \"paspy\",\n    \"passe\",\n    \"pasts\",\n    \"pated\",\n    \"paten\",\n    \"pater\",\n    \"pates\",\n    \"paths\",\n    \"patin\",\n    \"patka\",\n    \"patly\",\n    \"patte\",\n    \"patus\",\n    \"pauas\",\n    \"pauls\",\n    \"pavan\",\n    \"paved\",\n    \"paven\",\n    \"paver\",\n    \"paves\",\n    \"pavid\",\n    \"pavin\",\n    \"pavis\",\n    \"pawas\",\n    \"pawaw\",\n    \"pawed\",\n    \"pawer\",\n    \"pawks\",\n    \"pawky\",\n    \"pawls\",\n    \"pawns\",\n    \"paxes\",\n    \"payed\",\n    \"payor\",\n    \"paysd\",\n    \"peage\",\n    \"peags\",\n    \"peaks\",\n    \"peaky\",\n    \"peals\",\n    \"peans\",\n    \"peare\",\n    \"pears\",\n    \"peart\",\n    \"pease\",\n    \"peats\",\n    \"peaty\",\n    \"peavy\",\n    \"peaze\",\n    \"pebas\",\n    \"pechs\",\n    \"pecke\",\n    \"pecks\",\n    \"pecky\",\n    \"pedes\",\n    \"pedis\",\n    \"pedro\",\n    \"peece\",\n    \"peeks\",\n    \"peels\",\n    \"peens\",\n    \"peeoy\",\n    \"peepe\",\n    \"peeps\",\n    \"peers\",\n    \"peery\",\n    \"peeve\",\n    \"peggy\",\n    \"peghs\",\n    \"peins\",\n    \"peise\",\n    \"peize\",\n    \"pekan\",\n    \"pekes\",\n    \"pekin\",\n    \"pekoe\",\n    \"pelas\",\n    \"pelau\",\n    \"peles\",\n    \"pelfs\",\n    \"pells\",\n    \"pelma\",\n    \"pelon\",\n    \"pelta\",\n    \"pelts\",\n    \"pends\",\n    \"pendu\",\n    \"pened\",\n    \"penes\",\n    \"pengo\",\n    \"penie\",\n    \"penis\",\n    \"penks\",\n    \"penna\",\n    \"penni\",\n    \"pents\",\n    \"peons\",\n    \"peony\",\n    \"pepla\",\n    \"pepos\",\n    \"peppy\",\n    \"pepsi\",\n    \"perai\",\n    \"perce\",\n    \"percs\",\n    \"perdu\",\n    \"perdy\",\n    \"perea\",\n    \"peres\",\n    \"peris\",\n    \"perks\",\n    \"perms\",\n    \"perns\",\n    \"perog\",\n    \"perps\",\n    \"perry\",\n    \"perse\",\n    \"perst\",\n    \"perts\",\n    \"perve\",\n    \"pervo\",\n    \"pervs\",\n    \"pervy\",\n    \"pesos\",\n    \"pests\",\n    \"pesty\",\n    \"petar\",\n    \"peter\",\n    \"petit\",\n    \"petre\",\n    \"petri\",\n    \"petti\",\n    \"petto\",\n    \"pewee\",\n    \"pewit\",\n    \"peyse\",\n    \"phage\",\n    \"phang\",\n    \"phare\",\n    \"pharm\",\n    \"pheer\",\n    \"phene\",\n    \"pheon\",\n    \"phese\",\n    \"phial\",\n    \"phish\",\n    \"phizz\",\n    \"phlox\",\n    \"phoca\",\n    \"phono\",\n    \"phons\",\n    \"phots\",\n    \"phpht\",\n    \"phuts\",\n    \"phyla\",\n    \"phyle\",\n    \"piani\",\n    \"pians\",\n    \"pibal\",\n    \"pical\",\n    \"picas\",\n    \"piccy\",\n    \"picks\",\n    \"picot\",\n    \"picra\",\n    \"picul\",\n    \"piend\",\n    \"piers\",\n    \"piert\",\n    \"pieta\",\n    \"piets\",\n    \"piezo\",\n    \"pight\",\n    \"pigmy\",\n    \"piing\",\n    \"pikas\",\n    \"pikau\",\n    \"piked\",\n    \"piker\",\n    \"pikes\",\n    \"pikey\",\n    \"pikis\",\n    \"pikul\",\n    \"pilae\",\n    \"pilaf\",\n    \"pilao\",\n    \"pilar\",\n    \"pilau\",\n    \"pilaw\",\n    \"pilch\",\n    \"pilea\",\n    \"piled\",\n    \"pilei\",\n    \"piler\",\n    \"piles\",\n    \"pilis\",\n    \"pills\",\n    \"pilow\",\n    \"pilum\",\n    \"pilus\",\n    \"pimas\",\n    \"pimps\",\n    \"pinas\",\n    \"pined\",\n    \"pines\",\n    \"pingo\",\n    \"pings\",\n    \"pinko\",\n    \"pinks\",\n    \"pinna\",\n    \"pinny\",\n    \"pinon\",\n    \"pinot\",\n    \"pinta\",\n    \"pints\",\n    \"pinup\",\n    \"pions\",\n    \"piony\",\n    \"pious\",\n    \"pioye\",\n    \"pioys\",\n    \"pipal\",\n    \"pipas\",\n    \"piped\",\n    \"pipes\",\n    \"pipet\",\n    \"pipis\",\n    \"pipit\",\n    \"pippy\",\n    \"pipul\",\n    \"pirai\",\n    \"pirls\",\n    \"pirns\",\n    \"pirog\",\n    \"pisco\",\n    \"pises\",\n    \"pisky\",\n    \"pisos\",\n    \"pissy\",\n    \"piste\",\n    \"pitas\",\n    \"piths\",\n    \"piton\",\n    \"pitot\",\n    \"pitta\",\n    \"piums\",\n    \"pixes\",\n    \"pized\",\n    \"pizes\",\n    \"plaas\",\n    \"plack\",\n    \"plage\",\n    \"plans\",\n    \"plaps\",\n    \"plash\",\n    \"plasm\",\n    \"plast\",\n    \"plats\",\n    \"platt\",\n    \"platy\",\n    \"playa\",\n    \"plays\",\n    \"pleas\",\n    \"plebe\",\n    \"plebs\",\n    \"plena\",\n    \"pleon\",\n    \"plesh\",\n    \"plews\",\n    \"plica\",\n    \"plies\",\n    \"plims\",\n    \"pling\",\n    \"plink\",\n    \"ploat\",\n    \"plods\",\n    \"plong\",\n    \"plonk\",\n    \"plook\",\n    \"plops\",\n    \"plots\",\n    \"plotz\",\n    \"plouk\",\n    \"plows\",\n    \"ploye\",\n    \"ploys\",\n    \"plues\",\n    \"pluff\",\n    \"plugs\",\n    \"plums\",\n    \"plumy\",\n    \"pluot\",\n    \"pluto\",\n    \"plyer\",\n    \"poach\",\n    \"poaka\",\n    \"poake\",\n    \"poboy\",\n    \"pocks\",\n    \"pocky\",\n    \"podal\",\n    \"poddy\",\n    \"podex\",\n    \"podge\",\n    \"podgy\",\n    \"podia\",\n    \"poems\",\n    \"poeps\",\n    \"poets\",\n    \"pogey\",\n    \"pogge\",\n    \"pogos\",\n    \"pohed\",\n    \"poilu\",\n    \"poind\",\n    \"pokal\",\n    \"poked\",\n    \"pokes\",\n    \"pokey\",\n    \"pokie\",\n    \"poled\",\n    \"poler\",\n    \"poles\",\n    \"poley\",\n    \"polio\",\n    \"polis\",\n    \"polje\",\n    \"polks\",\n    \"polls\",\n    \"polly\",\n    \"polos\",\n    \"polts\",\n    \"polys\",\n    \"pombe\",\n    \"pomes\",\n    \"pommy\",\n    \"pomos\",\n    \"pomps\",\n    \"ponce\",\n    \"poncy\",\n    \"ponds\",\n    \"pones\",\n    \"poney\",\n    \"ponga\",\n    \"pongo\",\n    \"pongs\",\n    \"pongy\",\n    \"ponks\",\n    \"ponts\",\n    \"ponty\",\n    \"ponzu\",\n    \"poods\",\n    \"pooed\",\n    \"poofs\",\n    \"poofy\",\n    \"poohs\",\n    \"pooja\",\n    \"pooka\",\n    \"pooks\",\n    \"pools\",\n    \"poons\",\n    \"poops\",\n    \"poopy\",\n    \"poori\",\n    \"poort\",\n    \"poots\",\n    \"poove\",\n    \"poovy\",\n    \"popes\",\n    \"poppa\",\n    \"popsy\",\n    \"porae\",\n    \"poral\",\n    \"pored\",\n    \"porer\",\n    \"pores\",\n    \"porge\",\n    \"porgy\",\n    \"porin\",\n    \"porks\",\n    \"porky\",\n    \"porno\",\n    \"porns\",\n    \"porny\",\n    \"porta\",\n    \"ports\",\n    \"porty\",\n    \"posed\",\n    \"poses\",\n    \"posey\",\n    \"posho\",\n    \"posts\",\n    \"potae\",\n    \"potch\",\n    \"poted\",\n    \"potes\",\n    \"potin\",\n    \"potoo\",\n    \"potsy\",\n    \"potto\",\n    \"potts\",\n    \"potty\",\n    \"pouff\",\n    \"poufs\",\n    \"pouke\",\n    \"pouks\",\n    \"poule\",\n    \"poulp\",\n    \"poult\",\n    \"poupe\",\n    \"poupt\",\n    \"pours\",\n    \"pouts\",\n    \"powan\",\n    \"powin\",\n    \"pownd\",\n    \"powns\",\n    \"powny\",\n    \"powre\",\n    \"poxed\",\n    \"poxes\",\n    \"poynt\",\n    \"poyou\",\n    \"poyse\",\n    \"pozzy\",\n    \"praam\",\n    \"prads\",\n    \"prahu\",\n    \"prams\",\n    \"prana\",\n    \"prang\",\n    \"praos\",\n    \"prase\",\n    \"prate\",\n    \"prats\",\n    \"pratt\",\n    \"praty\",\n    \"praus\",\n    \"prays\",\n    \"predy\",\n    \"preed\",\n    \"prees\",\n    \"preif\",\n    \"prems\",\n    \"premy\",\n    \"prent\",\n    \"preon\",\n    \"preop\",\n    \"preps\",\n    \"presa\",\n    \"prese\",\n    \"prest\",\n    \"preve\",\n    \"prexy\",\n    \"preys\",\n    \"prial\",\n    \"pricy\",\n    \"prief\",\n    \"prier\",\n    \"pries\",\n    \"prigs\",\n    \"prill\",\n    \"prima\",\n    \"primi\",\n    \"primp\",\n    \"prims\",\n    \"primy\",\n    \"prink\",\n    \"prion\",\n    \"prise\",\n    \"priss\",\n    \"proas\",\n    \"probs\",\n    \"prods\",\n    \"proem\",\n    \"profs\",\n    \"progs\",\n    \"proin\",\n    \"proke\",\n    \"prole\",\n    \"proll\",\n    \"promo\",\n    \"proms\",\n    \"pronk\",\n    \"props\",\n    \"prore\",\n    \"proso\",\n    \"pross\",\n    \"prost\",\n    \"prosy\",\n    \"proto\",\n    \"proul\",\n    \"prows\",\n    \"proyn\",\n    \"prunt\",\n    \"pruta\",\n    \"pryer\",\n    \"pryse\",\n    \"pseud\",\n    \"pshaw\",\n    \"psion\",\n    \"psoae\",\n    \"psoai\",\n    \"psoas\",\n    \"psora\",\n    \"psych\",\n    \"psyop\",\n    \"pubco\",\n    \"pubes\",\n    \"pubis\",\n    \"pucan\",\n    \"pucer\",\n    \"puces\",\n    \"pucka\",\n    \"pucks\",\n    \"puddy\",\n    \"pudge\",\n    \"pudic\",\n    \"pudor\",\n    \"pudsy\",\n    \"pudus\",\n    \"puers\",\n    \"puffa\",\n    \"puffs\",\n    \"puggy\",\n    \"pugil\",\n    \"puhas\",\n    \"pujah\",\n    \"pujas\",\n    \"pukas\",\n    \"puked\",\n    \"puker\",\n    \"pukes\",\n    \"pukey\",\n    \"pukka\",\n    \"pukus\",\n    \"pulao\",\n    \"pulas\",\n    \"puled\",\n    \"puler\",\n    \"pules\",\n    \"pulik\",\n    \"pulis\",\n    \"pulka\",\n    \"pulks\",\n    \"pulli\",\n    \"pulls\",\n    \"pully\",\n    \"pulmo\",\n    \"pulps\",\n    \"pulus\",\n    \"pumas\",\n    \"pumie\",\n    \"pumps\",\n    \"punas\",\n    \"punce\",\n    \"punga\",\n    \"pungs\",\n    \"punji\",\n    \"punka\",\n    \"punks\",\n    \"punky\",\n    \"punny\",\n    \"punto\",\n    \"punts\",\n    \"punty\",\n    \"pupae\",\n    \"pupas\",\n    \"pupus\",\n    \"purda\",\n    \"pured\",\n    \"pures\",\n    \"purin\",\n    \"puris\",\n    \"purls\",\n    \"purpy\",\n    \"purrs\",\n    \"pursy\",\n    \"purty\",\n    \"puses\",\n    \"pusle\",\n    \"pussy\",\n    \"putid\",\n    \"puton\",\n    \"putti\",\n    \"putto\",\n    \"putts\",\n    \"puzel\",\n    \"pwned\",\n    \"pyats\",\n    \"pyets\",\n    \"pygal\",\n    \"pyins\",\n    \"pylon\",\n    \"pyned\",\n    \"pynes\",\n    \"pyoid\",\n    \"pyots\",\n    \"pyral\",\n    \"pyran\",\n    \"pyres\",\n    \"pyrex\",\n    \"pyric\",\n    \"pyros\",\n    \"pyxed\",\n    \"pyxes\",\n    \"pyxie\",\n    \"pyxis\",\n    \"pzazz\",\n    \"qadis\",\n    \"qaids\",\n    \"qajaq\",\n    \"qanat\",\n    \"qapik\",\n    \"qibla\",\n    \"qophs\",\n    \"qorma\",\n    \"quads\",\n    \"quaff\",\n    \"quags\",\n    \"quair\",\n    \"quais\",\n    \"quaky\",\n    \"quale\",\n    \"quant\",\n    \"quare\",\n    \"quass\",\n    \"quate\",\n    \"quats\",\n    \"quayd\",\n    \"quays\",\n    \"qubit\",\n    \"quean\",\n    \"queme\",\n    \"quena\",\n    \"quern\",\n    \"queyn\",\n    \"queys\",\n    \"quich\",\n    \"quids\",\n    \"quiff\",\n    \"quims\",\n    \"quina\",\n    \"quine\",\n    \"quino\",\n    \"quins\",\n    \"quint\",\n    \"quipo\",\n    \"quips\",\n    \"quipu\",\n    \"quire\",\n    \"quirt\",\n    \"quist\",\n    \"quits\",\n    \"quoad\",\n    \"quods\",\n    \"quoif\",\n    \"quoin\",\n    \"quoit\",\n    \"quoll\",\n    \"quonk\",\n    \"quops\",\n    \"qursh\",\n    \"quyte\",\n    \"rabat\",\n    \"rabic\",\n    \"rabis\",\n    \"raced\",\n    \"races\",\n    \"rache\",\n    \"racks\",\n    \"racon\",\n    \"radge\",\n    \"radix\",\n    \"radon\",\n    \"raffs\",\n    \"rafts\",\n    \"ragas\",\n    \"ragde\",\n    \"raged\",\n    \"ragee\",\n    \"rager\",\n    \"rages\",\n    \"ragga\",\n    \"raggs\",\n    \"raggy\",\n    \"ragis\",\n    \"ragus\",\n    \"rahed\",\n    \"rahui\",\n    \"raias\",\n    \"raids\",\n    \"raiks\",\n    \"raile\",\n    \"rails\",\n    \"raine\",\n    \"rains\",\n    \"raird\",\n    \"raita\",\n    \"raits\",\n    \"rajas\",\n    \"rajes\",\n    \"raked\",\n    \"rakee\",\n    \"raker\",\n    \"rakes\",\n    \"rakia\",\n    \"rakis\",\n    \"rakus\",\n    \"rales\",\n    \"ramal\",\n    \"ramee\",\n    \"ramet\",\n    \"ramie\",\n    \"ramin\",\n    \"ramis\",\n    \"rammy\",\n    \"ramps\",\n    \"ramus\",\n    \"ranas\",\n    \"rance\",\n    \"rands\",\n    \"ranee\",\n    \"ranga\",\n    \"rangi\",\n    \"rangs\",\n    \"rangy\",\n    \"ranid\",\n    \"ranis\",\n    \"ranke\",\n    \"ranks\",\n    \"rants\",\n    \"raped\",\n    \"raper\",\n    \"rapes\",\n    \"raphe\",\n    \"rappe\",\n    \"rared\",\n    \"raree\",\n    \"rares\",\n    \"rarks\",\n    \"rased\",\n    \"raser\",\n    \"rases\",\n    \"rasps\",\n    \"rasse\",\n    \"rasta\",\n    \"ratal\",\n    \"ratan\",\n    \"ratas\",\n    \"ratch\",\n    \"rated\",\n    \"ratel\",\n    \"rater\",\n    \"rates\",\n    \"ratha\",\n    \"rathe\",\n    \"raths\",\n    \"ratoo\",\n    \"ratos\",\n    \"ratus\",\n    \"rauns\",\n    \"raupo\",\n    \"raved\",\n    \"ravel\",\n    \"raver\",\n    \"raves\",\n    \"ravey\",\n    \"ravin\",\n    \"rawer\",\n    \"rawin\",\n    \"rawly\",\n    \"rawns\",\n    \"raxed\",\n    \"raxes\",\n    \"rayah\",\n    \"rayas\",\n    \"rayed\",\n    \"rayle\",\n    \"rayne\",\n    \"razed\",\n    \"razee\",\n    \"razer\",\n    \"razes\",\n    \"razoo\",\n    \"readd\",\n    \"reads\",\n    \"reais\",\n    \"reaks\",\n    \"realo\",\n    \"reals\",\n    \"reame\",\n    \"reams\",\n    \"reamy\",\n    \"reans\",\n    \"reaps\",\n    \"rears\",\n    \"reast\",\n    \"reata\",\n    \"reate\",\n    \"reave\",\n    \"rebbe\",\n    \"rebec\",\n    \"rebid\",\n    \"rebit\",\n    \"rebop\",\n    \"rebuy\",\n    \"recal\",\n    \"recce\",\n    \"recco\",\n    \"reccy\",\n    \"recit\",\n    \"recks\",\n    \"recon\",\n    \"recta\",\n    \"recti\",\n    \"recto\",\n    \"redan\",\n    \"redds\",\n    \"reddy\",\n    \"reded\",\n    \"redes\",\n    \"redia\",\n    \"redid\",\n    \"redip\",\n    \"redly\",\n    \"redon\",\n    \"redos\",\n    \"redox\",\n    \"redry\",\n    \"redub\",\n    \"redux\",\n    \"redye\",\n    \"reech\",\n    \"reede\",\n    \"reeds\",\n    \"reefs\",\n    \"reefy\",\n    \"reeks\",\n    \"reeky\",\n    \"reels\",\n    \"reens\",\n    \"reest\",\n    \"reeve\",\n    \"refed\",\n    \"refel\",\n    \"reffo\",\n    \"refis\",\n    \"refix\",\n    \"refly\",\n    \"refry\",\n    \"regar\",\n    \"reges\",\n    \"reggo\",\n    \"regie\",\n    \"regma\",\n    \"regna\",\n    \"regos\",\n    \"regur\",\n    \"rehem\",\n    \"reifs\",\n    \"reify\",\n    \"reiki\",\n    \"reiks\",\n    \"reink\",\n    \"reins\",\n    \"reird\",\n    \"reist\",\n    \"reive\",\n    \"rejig\",\n    \"rejon\",\n    \"reked\",\n    \"rekes\",\n    \"rekey\",\n    \"relet\",\n    \"relie\",\n    \"relit\",\n    \"rello\",\n    \"reman\",\n    \"remap\",\n    \"remen\",\n    \"remet\",\n    \"remex\",\n    \"remix\",\n    \"renay\",\n    \"rends\",\n    \"reney\",\n    \"renga\",\n    \"renig\",\n    \"renin\",\n    \"renne\",\n    \"renos\",\n    \"rente\",\n    \"rents\",\n    \"reoil\",\n    \"reorg\",\n    \"repeg\",\n    \"repin\",\n    \"repla\",\n    \"repos\",\n    \"repot\",\n    \"repps\",\n    \"repro\",\n    \"reran\",\n    \"rerig\",\n    \"resat\",\n    \"resaw\",\n    \"resay\",\n    \"resee\",\n    \"reses\",\n    \"resew\",\n    \"resid\",\n    \"resit\",\n    \"resod\",\n    \"resow\",\n    \"resto\",\n    \"rests\",\n    \"resty\",\n    \"resus\",\n    \"retag\",\n    \"retax\",\n    \"retem\",\n    \"retia\",\n    \"retie\",\n    \"retox\",\n    \"revet\",\n    \"revie\",\n    \"rewan\",\n    \"rewax\",\n    \"rewed\",\n    \"rewet\",\n    \"rewin\",\n    \"rewon\",\n    \"rewth\",\n    \"rexes\",\n    \"rezes\",\n    \"rheas\",\n    \"rheme\",\n    \"rheum\",\n    \"rhies\",\n    \"rhime\",\n    \"rhine\",\n    \"rhody\",\n    \"rhomb\",\n    \"rhone\",\n    \"rhumb\",\n    \"rhyne\",\n    \"rhyta\",\n    \"riads\",\n    \"rials\",\n    \"riant\",\n    \"riata\",\n    \"ribas\",\n    \"ribby\",\n    \"ribes\",\n    \"riced\",\n    \"ricer\",\n    \"rices\",\n    \"ricey\",\n    \"richt\",\n    \"ricin\",\n    \"ricks\",\n    \"rides\",\n    \"ridgy\",\n    \"ridic\",\n    \"riels\",\n    \"riems\",\n    \"rieve\",\n    \"rifer\",\n    \"riffs\",\n    \"rifte\",\n    \"rifts\",\n    \"rifty\",\n    \"riggs\",\n    \"rigol\",\n    \"riled\",\n    \"riles\",\n    \"riley\",\n    \"rille\",\n    \"rills\",\n    \"rimae\",\n    \"rimed\",\n    \"rimer\",\n    \"rimes\",\n    \"rimus\",\n    \"rinds\",\n    \"rindy\",\n    \"rines\",\n    \"rings\",\n    \"rinks\",\n    \"rioja\",\n    \"riots\",\n    \"riped\",\n    \"ripes\",\n    \"ripps\",\n    \"rises\",\n    \"rishi\",\n    \"risks\",\n    \"risps\",\n    \"risus\",\n    \"rites\",\n    \"ritts\",\n    \"ritzy\",\n    \"rivas\",\n    \"rived\",\n    \"rivel\",\n    \"riven\",\n    \"rives\",\n    \"riyal\",\n    \"rizas\",\n    \"roads\",\n    \"roams\",\n    \"roans\",\n    \"roars\",\n    \"roary\",\n    \"roate\",\n    \"robed\",\n    \"robes\",\n    \"roble\",\n    \"rocks\",\n    \"roded\",\n    \"rodes\",\n    \"roguy\",\n    \"rohes\",\n    \"roids\",\n    \"roils\",\n    \"roily\",\n    \"roins\",\n    \"roist\",\n    \"rojak\",\n    \"rojis\",\n    \"roked\",\n    \"roker\",\n    \"rokes\",\n    \"rolag\",\n    \"roles\",\n    \"rolfs\",\n    \"rolls\",\n    \"romal\",\n    \"roman\",\n    \"romeo\",\n    \"romps\",\n    \"ronde\",\n    \"rondo\",\n    \"roneo\",\n    \"rones\",\n    \"ronin\",\n    \"ronne\",\n    \"ronte\",\n    \"ronts\",\n    \"roods\",\n    \"roofs\",\n    \"roofy\",\n    \"rooks\",\n    \"rooky\",\n    \"rooms\",\n    \"roons\",\n    \"roops\",\n    \"roopy\",\n    \"roosa\",\n    \"roose\",\n    \"roots\",\n    \"rooty\",\n    \"roped\",\n    \"roper\",\n    \"ropes\",\n    \"ropey\",\n    \"roque\",\n    \"roral\",\n    \"rores\",\n    \"roric\",\n    \"rorid\",\n    \"rorie\",\n    \"rorts\",\n    \"rorty\",\n    \"rosed\",\n    \"roses\",\n    \"roset\",\n    \"roshi\",\n    \"rosin\",\n    \"rosit\",\n    \"rosti\",\n    \"rosts\",\n    \"rotal\",\n    \"rotan\",\n    \"rotas\",\n    \"rotch\",\n    \"roted\",\n    \"rotes\",\n    \"rotis\",\n    \"rotls\",\n    \"roton\",\n    \"rotos\",\n    \"rotte\",\n    \"rouen\",\n    \"roues\",\n    \"roule\",\n    \"rouls\",\n    \"roums\",\n    \"roups\",\n    \"roupy\",\n    \"roust\",\n    \"routh\",\n    \"routs\",\n    \"roved\",\n    \"roven\",\n    \"roves\",\n    \"rowan\",\n    \"rowed\",\n    \"rowel\",\n    \"rowen\",\n    \"rowie\",\n    \"rowme\",\n    \"rownd\",\n    \"rowth\",\n    \"rowts\",\n    \"royne\",\n    \"royst\",\n    \"rozet\",\n    \"rozit\",\n    \"ruana\",\n    \"rubai\",\n    \"rubby\",\n    \"rubel\",\n    \"rubes\",\n    \"rubin\",\n    \"ruble\",\n    \"rubli\",\n    \"rubus\",\n    \"ruche\",\n    \"rucks\",\n    \"rudas\",\n    \"rudds\",\n    \"rudes\",\n    \"rudie\",\n    \"rudis\",\n    \"rueda\",\n    \"ruers\",\n    \"ruffe\",\n    \"ruffs\",\n    \"rugae\",\n    \"rugal\",\n    \"ruggy\",\n    \"ruing\",\n    \"ruins\",\n    \"rukhs\",\n    \"ruled\",\n    \"rules\",\n    \"rumal\",\n    \"rumbo\",\n    \"rumen\",\n    \"rumes\",\n    \"rumly\",\n    \"rummy\",\n    \"rumpo\",\n    \"rumps\",\n    \"rumpy\",\n    \"runch\",\n    \"runds\",\n    \"runed\",\n    \"runes\",\n    \"rungs\",\n    \"runic\",\n    \"runny\",\n    \"runts\",\n    \"runty\",\n    \"rupia\",\n    \"rurps\",\n    \"rurus\",\n    \"rusas\",\n    \"ruses\",\n    \"rushy\",\n    \"rusks\",\n    \"rusma\",\n    \"russe\",\n    \"rusts\",\n    \"ruths\",\n    \"rutin\",\n    \"rutty\",\n    \"ryals\",\n    \"rybat\",\n    \"ryked\",\n    \"rykes\",\n    \"rymme\",\n    \"rynds\",\n    \"ryots\",\n    \"ryper\",\n    \"saags\",\n    \"sabal\",\n    \"sabed\",\n    \"saber\",\n    \"sabes\",\n    \"sabha\",\n    \"sabin\",\n    \"sabir\",\n    \"sable\",\n    \"sabot\",\n    \"sabra\",\n    \"sabre\",\n    \"sacks\",\n    \"sacra\",\n    \"saddo\",\n    \"sades\",\n    \"sadhe\",\n    \"sadhu\",\n    \"sadis\",\n    \"sados\",\n    \"sadza\",\n    \"safed\",\n    \"safes\",\n    \"sagas\",\n    \"sager\",\n    \"sages\",\n    \"saggy\",\n    \"sagos\",\n    \"sagum\",\n    \"saheb\",\n    \"sahib\",\n    \"saice\",\n    \"saick\",\n    \"saics\",\n    \"saids\",\n    \"saiga\",\n    \"sails\",\n    \"saims\",\n    \"saine\",\n    \"sains\",\n    \"sairs\",\n    \"saist\",\n    \"saith\",\n    \"sajou\",\n    \"sakai\",\n    \"saker\",\n    \"sakes\",\n    \"sakia\",\n    \"sakis\",\n    \"sakti\",\n    \"salal\",\n    \"salat\",\n    \"salep\",\n    \"sales\",\n    \"salet\",\n    \"salic\",\n    \"salix\",\n    \"salle\",\n    \"salmi\",\n    \"salol\",\n    \"salop\",\n    \"salpa\",\n    \"salps\",\n    \"salse\",\n    \"salto\",\n    \"salts\",\n    \"salue\",\n    \"salut\",\n    \"saman\",\n    \"samas\",\n    \"samba\",\n    \"sambo\",\n    \"samek\",\n    \"samel\",\n    \"samen\",\n    \"sames\",\n    \"samey\",\n    \"samfu\",\n    \"sammy\",\n    \"sampi\",\n    \"samps\",\n    \"sands\",\n    \"saned\",\n    \"sanes\",\n    \"sanga\",\n    \"sangh\",\n    \"sango\",\n    \"sangs\",\n    \"sanko\",\n    \"sansa\",\n    \"santo\",\n    \"sants\",\n    \"saola\",\n    \"sapan\",\n    \"sapid\",\n    \"sapor\",\n    \"saran\",\n    \"sards\",\n    \"sared\",\n    \"saree\",\n    \"sarge\",\n    \"sargo\",\n    \"sarin\",\n    \"saris\",\n    \"sarks\",\n    \"sarky\",\n    \"sarod\",\n    \"saros\",\n    \"sarus\",\n    \"saser\",\n    \"sasin\",\n    \"sasse\",\n    \"satai\",\n    \"satay\",\n    \"sated\",\n    \"satem\",\n    \"sates\",\n    \"satis\",\n    \"sauba\",\n    \"sauch\",\n    \"saugh\",\n    \"sauls\",\n    \"sault\",\n    \"saunt\",\n    \"saury\",\n    \"sauts\",\n    \"saved\",\n    \"saver\",\n    \"saves\",\n    \"savey\",\n    \"savin\",\n    \"sawah\",\n    \"sawed\",\n    \"sawer\",\n    \"saxes\",\n    \"sayed\",\n    \"sayer\",\n    \"sayid\",\n    \"sayne\",\n    \"sayon\",\n    \"sayst\",\n    \"sazes\",\n    \"scabs\",\n    \"scads\",\n    \"scaff\",\n    \"scags\",\n    \"scail\",\n    \"scala\",\n    \"scall\",\n    \"scams\",\n    \"scand\",\n    \"scans\",\n    \"scapa\",\n    \"scape\",\n    \"scapi\",\n    \"scarp\",\n    \"scars\",\n    \"scart\",\n    \"scath\",\n    \"scats\",\n    \"scatt\",\n    \"scaud\",\n    \"scaup\",\n    \"scaur\",\n    \"scaws\",\n    \"sceat\",\n    \"scena\",\n    \"scend\",\n    \"schav\",\n    \"schmo\",\n    \"schul\",\n    \"schwa\",\n    \"sclim\",\n    \"scody\",\n    \"scogs\",\n    \"scoog\",\n    \"scoot\",\n    \"scopa\",\n    \"scops\",\n    \"scots\",\n    \"scoug\",\n    \"scoup\",\n    \"scowp\",\n    \"scows\",\n    \"scrab\",\n    \"scrae\",\n    \"scrag\",\n    \"scran\",\n    \"scrat\",\n    \"scraw\",\n    \"scray\",\n    \"scrim\",\n    \"scrip\",\n    \"scrob\",\n    \"scrod\",\n    \"scrog\",\n    \"scrow\",\n    \"scudi\",\n    \"scudo\",\n    \"scuds\",\n    \"scuff\",\n    \"scuft\",\n    \"scugs\",\n    \"sculk\",\n    \"scull\",\n    \"sculp\",\n    \"sculs\",\n    \"scums\",\n    \"scups\",\n    \"scurf\",\n    \"scurs\",\n    \"scuse\",\n    \"scuta\",\n    \"scute\",\n    \"scuts\",\n    \"scuzz\",\n    \"scyes\",\n    \"sdayn\",\n    \"sdein\",\n    \"seals\",\n    \"seame\",\n    \"seams\",\n    \"seamy\",\n    \"seans\",\n    \"seare\",\n    \"sears\",\n    \"sease\",\n    \"seats\",\n    \"seaze\",\n    \"sebum\",\n    \"secco\",\n    \"sechs\",\n    \"sects\",\n    \"seder\",\n    \"sedes\",\n    \"sedge\",\n    \"sedgy\",\n    \"sedum\",\n    \"seeds\",\n    \"seeks\",\n    \"seeld\",\n    \"seels\",\n    \"seely\",\n    \"seems\",\n    \"seeps\",\n    \"seepy\",\n    \"seers\",\n    \"sefer\",\n    \"segar\",\n    \"segni\",\n    \"segno\",\n    \"segol\",\n    \"segos\",\n    \"sehri\",\n    \"seifs\",\n    \"seils\",\n    \"seine\",\n    \"seirs\",\n    \"seise\",\n    \"seism\",\n    \"seity\",\n    \"seiza\",\n    \"sekos\",\n    \"sekts\",\n    \"selah\",\n    \"seles\",\n    \"selfs\",\n    \"sella\",\n    \"selle\",\n    \"sells\",\n    \"selva\",\n    \"semee\",\n    \"semes\",\n    \"semie\",\n    \"semis\",\n    \"senas\",\n    \"sends\",\n    \"senes\",\n    \"sengi\",\n    \"senna\",\n    \"senor\",\n    \"sensa\",\n    \"sensi\",\n    \"sente\",\n    \"senti\",\n    \"sents\",\n    \"senvy\",\n    \"senza\",\n    \"sepad\",\n    \"sepal\",\n    \"sepic\",\n    \"sepoy\",\n    \"septa\",\n    \"septs\",\n    \"serac\",\n    \"serai\",\n    \"seral\",\n    \"sered\",\n    \"serer\",\n    \"seres\",\n    \"serfs\",\n    \"serge\",\n    \"seric\",\n    \"serin\",\n    \"serks\",\n    \"seron\",\n    \"serow\",\n    \"serra\",\n    \"serre\",\n    \"serrs\",\n    \"serry\",\n    \"servo\",\n    \"sesey\",\n    \"sessa\",\n    \"setae\",\n    \"setal\",\n    \"seton\",\n    \"setts\",\n    \"sewan\",\n    \"sewar\",\n    \"sewed\",\n    \"sewel\",\n    \"sewen\",\n    \"sewin\",\n    \"sexed\",\n    \"sexer\",\n    \"sexes\",\n    \"sexto\",\n    \"sexts\",\n    \"seyen\",\n    \"shads\",\n    \"shags\",\n    \"shahs\",\n    \"shako\",\n    \"shakt\",\n    \"shalm\",\n    \"shaly\",\n    \"shama\",\n    \"shams\",\n    \"shand\",\n    \"shans\",\n    \"shaps\",\n    \"sharn\",\n    \"shash\",\n    \"shaul\",\n    \"shawm\",\n    \"shawn\",\n    \"shaws\",\n    \"shaya\",\n    \"shays\",\n    \"shchi\",\n    \"sheaf\",\n    \"sheal\",\n    \"sheas\",\n    \"sheds\",\n    \"sheel\",\n    \"shend\",\n    \"shent\",\n    \"sheol\",\n    \"sherd\",\n    \"shere\",\n    \"shero\",\n    \"shets\",\n    \"sheva\",\n    \"shewn\",\n    \"shews\",\n    \"shiai\",\n    \"shiel\",\n    \"shier\",\n    \"shies\",\n    \"shill\",\n    \"shily\",\n    \"shims\",\n    \"shins\",\n    \"ships\",\n    \"shirr\",\n    \"shirs\",\n    \"shish\",\n    \"shiso\",\n    \"shist\",\n    \"shite\",\n    \"shits\",\n    \"shiur\",\n    \"shiva\",\n    \"shive\",\n    \"shivs\",\n    \"shlep\",\n    \"shlub\",\n    \"shmek\",\n    \"shmoe\",\n    \"shoat\",\n    \"shoed\",\n    \"shoer\",\n    \"shoes\",\n    \"shogi\",\n    \"shogs\",\n    \"shoji\",\n    \"shojo\",\n    \"shola\",\n    \"shool\",\n    \"shoon\",\n    \"shoos\",\n    \"shope\",\n    \"shops\",\n    \"shorl\",\n    \"shote\",\n    \"shots\",\n    \"shott\",\n    \"showd\",\n    \"shows\",\n    \"shoyu\",\n    \"shred\",\n    \"shris\",\n    \"shrow\",\n    \"shtik\",\n    \"shtum\",\n    \"shtup\",\n    \"shule\",\n    \"shuln\",\n    \"shuls\",\n    \"shuns\",\n    \"shura\",\n    \"shute\",\n    \"shuts\",\n    \"shwas\",\n    \"shyer\",\n    \"sials\",\n    \"sibbs\",\n    \"sibyl\",\n    \"sices\",\n    \"sicht\",\n    \"sicko\",\n    \"sicks\",\n    \"sicky\",\n    \"sidas\",\n    \"sided\",\n    \"sider\",\n    \"sides\",\n    \"sidha\",\n    \"sidhe\",\n    \"sidle\",\n    \"sield\",\n    \"siens\",\n    \"sient\",\n    \"sieth\",\n    \"sieur\",\n    \"sifts\",\n    \"sighs\",\n    \"sigil\",\n    \"sigla\",\n    \"signa\",\n    \"signs\",\n    \"sijos\",\n    \"sikas\",\n    \"siker\",\n    \"sikes\",\n    \"silds\",\n    \"siled\",\n    \"silen\",\n    \"siler\",\n    \"siles\",\n    \"silex\",\n    \"silks\",\n    \"sills\",\n    \"silos\",\n    \"silts\",\n    \"silty\",\n    \"silva\",\n    \"simar\",\n    \"simas\",\n    \"simba\",\n    \"simis\",\n    \"simps\",\n    \"simul\",\n    \"sinds\",\n    \"sined\",\n    \"sines\",\n    \"sings\",\n    \"sinhs\",\n    \"sinks\",\n    \"sinky\",\n    \"sinus\",\n    \"siped\",\n    \"sipes\",\n    \"sippy\",\n    \"sired\",\n    \"siree\",\n    \"sires\",\n    \"sirih\",\n    \"siris\",\n    \"siroc\",\n    \"sirra\",\n    \"sirup\",\n    \"sisal\",\n    \"sises\",\n    \"sista\",\n    \"sists\",\n    \"sitar\",\n    \"sited\",\n    \"sites\",\n    \"sithe\",\n    \"sitka\",\n    \"situp\",\n    \"situs\",\n    \"siver\",\n    \"sixer\",\n    \"sixes\",\n    \"sixmo\",\n    \"sixte\",\n    \"sizar\",\n    \"sized\",\n    \"sizel\",\n    \"sizer\",\n    \"sizes\",\n    \"skags\",\n    \"skail\",\n    \"skald\",\n    \"skank\",\n    \"skart\",\n    \"skats\",\n    \"skatt\",\n    \"skaws\",\n    \"skean\",\n    \"skear\",\n    \"skeds\",\n    \"skeed\",\n    \"skeef\",\n    \"skeen\",\n    \"skeer\",\n    \"skees\",\n    \"skeet\",\n    \"skegg\",\n    \"skegs\",\n    \"skein\",\n    \"skelf\",\n    \"skell\",\n    \"skelm\",\n    \"skelp\",\n    \"skene\",\n    \"skens\",\n    \"skeos\",\n    \"skeps\",\n    \"skers\",\n    \"skets\",\n    \"skews\",\n    \"skids\",\n    \"skied\",\n    \"skies\",\n    \"skiey\",\n    \"skimo\",\n    \"skims\",\n    \"skink\",\n    \"skins\",\n    \"skint\",\n    \"skios\",\n    \"skips\",\n    \"skirl\",\n    \"skirr\",\n    \"skite\",\n    \"skits\",\n    \"skive\",\n    \"skivy\",\n    \"sklim\",\n    \"skoal\",\n    \"skody\",\n    \"skoff\",\n    \"skogs\",\n    \"skols\",\n    \"skool\",\n    \"skort\",\n    \"skosh\",\n    \"skran\",\n    \"skrik\",\n    \"skuas\",\n    \"skugs\",\n    \"skyed\",\n    \"skyer\",\n    \"skyey\",\n    \"skyfs\",\n    \"skyre\",\n    \"skyrs\",\n    \"skyte\",\n    \"slabs\",\n    \"slade\",\n    \"slaes\",\n    \"slags\",\n    \"slaid\",\n    \"slake\",\n    \"slams\",\n    \"slane\",\n    \"slank\",\n    \"slaps\",\n    \"slart\",\n    \"slats\",\n    \"slaty\",\n    \"slaws\",\n    \"slays\",\n    \"slebs\",\n    \"sleds\",\n    \"sleer\",\n    \"slews\",\n    \"sleys\",\n    \"slier\",\n    \"slily\",\n    \"slims\",\n    \"slipe\",\n    \"slips\",\n    \"slipt\",\n    \"slish\",\n    \"slits\",\n    \"slive\",\n    \"sloan\",\n    \"slobs\",\n    \"sloes\",\n    \"slogs\",\n    \"sloid\",\n    \"slojd\",\n    \"slomo\",\n    \"sloom\",\n    \"sloot\",\n    \"slops\",\n    \"slopy\",\n    \"slorm\",\n    \"slots\",\n    \"slove\",\n    \"slows\",\n    \"sloyd\",\n    \"slubb\",\n    \"slubs\",\n    \"slued\",\n    \"slues\",\n    \"sluff\",\n    \"slugs\",\n    \"sluit\",\n    \"slums\",\n    \"slurb\",\n    \"slurs\",\n    \"sluse\",\n    \"sluts\",\n    \"slyer\",\n    \"slype\",\n    \"smaak\",\n    \"smaik\",\n    \"smalm\",\n    \"smalt\",\n    \"smarm\",\n    \"smaze\",\n    \"smeek\",\n    \"smees\",\n    \"smeik\",\n    \"smeke\",\n    \"smerk\",\n    \"smews\",\n    \"smirr\",\n    \"smirs\",\n    \"smits\",\n    \"smogs\",\n    \"smoko\",\n    \"smolt\",\n    \"smoor\",\n    \"smoot\",\n    \"smore\",\n    \"smorg\",\n    \"smout\",\n    \"smowt\",\n    \"smugs\",\n    \"smurs\",\n    \"smush\",\n    \"smuts\",\n    \"snabs\",\n    \"snafu\",\n    \"snags\",\n    \"snaps\",\n    \"snarf\",\n    \"snark\",\n    \"snars\",\n    \"snary\",\n    \"snash\",\n    \"snath\",\n    \"snaws\",\n    \"snead\",\n    \"sneap\",\n    \"snebs\",\n    \"sneck\",\n    \"sneds\",\n    \"sneed\",\n    \"snees\",\n    \"snell\",\n    \"snibs\",\n    \"snick\",\n    \"snies\",\n    \"snift\",\n    \"snigs\",\n    \"snips\",\n    \"snipy\",\n    \"snirt\",\n    \"snits\",\n    \"snobs\",\n    \"snods\",\n    \"snoek\",\n    \"snoep\",\n    \"snogs\",\n    \"snoke\",\n    \"snood\",\n    \"snook\",\n    \"snool\",\n    \"snoot\",\n    \"snots\",\n    \"snowk\",\n    \"snows\",\n    \"snubs\",\n    \"snugs\",\n    \"snush\",\n    \"snyes\",\n    \"soaks\",\n    \"soaps\",\n    \"soare\",\n    \"soars\",\n    \"soave\",\n    \"sobas\",\n    \"socas\",\n    \"soces\",\n    \"socko\",\n    \"socks\",\n    \"socle\",\n    \"sodas\",\n    \"soddy\",\n    \"sodic\",\n    \"sodom\",\n    \"sofar\",\n    \"sofas\",\n    \"softa\",\n    \"softs\",\n    \"softy\",\n    \"soger\",\n    \"sohur\",\n    \"soils\",\n    \"soily\",\n    \"sojas\",\n    \"sojus\",\n    \"sokah\",\n    \"soken\",\n    \"sokes\",\n    \"sokol\",\n    \"solah\",\n    \"solan\",\n    \"solas\",\n    \"solde\",\n    \"soldi\",\n    \"soldo\",\n    \"solds\",\n    \"soled\",\n    \"solei\",\n    \"soler\",\n    \"soles\",\n    \"solon\",\n    \"solos\",\n    \"solum\",\n    \"solus\",\n    \"soman\",\n    \"somas\",\n    \"sonce\",\n    \"sonde\",\n    \"sones\",\n    \"songs\",\n    \"sonly\",\n    \"sonne\",\n    \"sonny\",\n    \"sonse\",\n    \"sonsy\",\n    \"sooey\",\n    \"sooks\",\n    \"sooky\",\n    \"soole\",\n    \"sools\",\n    \"sooms\",\n    \"soops\",\n    \"soote\",\n    \"soots\",\n    \"sophs\",\n    \"sophy\",\n    \"sopor\",\n    \"soppy\",\n    \"sopra\",\n    \"soral\",\n    \"soras\",\n    \"sorbo\",\n    \"sorbs\",\n    \"sorda\",\n    \"sordo\",\n    \"sords\",\n    \"sored\",\n    \"soree\",\n    \"sorel\",\n    \"sorer\",\n    \"sores\",\n    \"sorex\",\n    \"sorgo\",\n    \"sorns\",\n    \"sorra\",\n    \"sorta\",\n    \"sorts\",\n    \"sorus\",\n    \"soths\",\n    \"sotol\",\n    \"souce\",\n    \"souct\",\n    \"sough\",\n    \"souks\",\n    \"souls\",\n    \"soums\",\n    \"soups\",\n    \"soupy\",\n    \"sours\",\n    \"souse\",\n    \"souts\",\n    \"sowar\",\n    \"sowce\",\n    \"sowed\",\n    \"sowff\",\n    \"sowfs\",\n    \"sowle\",\n    \"sowls\",\n    \"sowms\",\n    \"sownd\",\n    \"sowne\",\n    \"sowps\",\n    \"sowse\",\n    \"sowth\",\n    \"soyas\",\n    \"soyle\",\n    \"soyuz\",\n    \"sozin\",\n    \"spacy\",\n    \"spado\",\n    \"spaed\",\n    \"spaer\",\n    \"spaes\",\n    \"spags\",\n    \"spahi\",\n    \"spail\",\n    \"spain\",\n    \"spait\",\n    \"spake\",\n    \"spald\",\n    \"spale\",\n    \"spall\",\n    \"spalt\",\n    \"spams\",\n    \"spane\",\n    \"spang\",\n    \"spans\",\n    \"spard\",\n    \"spars\",\n    \"spart\",\n    \"spate\",\n    \"spats\",\n    \"spaul\",\n    \"spawl\",\n    \"spaws\",\n    \"spayd\",\n    \"spays\",\n    \"spaza\",\n    \"spazz\",\n    \"speal\",\n    \"spean\",\n    \"speat\",\n    \"specs\",\n    \"spect\",\n    \"speel\",\n    \"speer\",\n    \"speil\",\n    \"speir\",\n    \"speks\",\n    \"speld\",\n    \"spelk\",\n    \"speos\",\n    \"spets\",\n    \"speug\",\n    \"spews\",\n    \"spewy\",\n    \"spial\",\n    \"spica\",\n    \"spick\",\n    \"spics\",\n    \"spide\",\n    \"spier\",\n    \"spies\",\n    \"spiff\",\n    \"spifs\",\n    \"spiks\",\n    \"spile\",\n    \"spims\",\n    \"spina\",\n    \"spink\",\n    \"spins\",\n    \"spirt\",\n    \"spiry\",\n    \"spits\",\n    \"spitz\",\n    \"spivs\",\n    \"splay\",\n    \"splog\",\n    \"spode\",\n    \"spods\",\n    \"spoom\",\n    \"spoor\",\n    \"spoot\",\n    \"spork\",\n    \"sposh\",\n    \"spots\",\n    \"sprad\",\n    \"sprag\",\n    \"sprat\",\n    \"spred\",\n    \"sprew\",\n    \"sprit\",\n    \"sprod\",\n    \"sprog\",\n    \"sprue\",\n    \"sprug\",\n    \"spuds\",\n    \"spued\",\n    \"spuer\",\n    \"spues\",\n    \"spugs\",\n    \"spule\",\n    \"spume\",\n    \"spumy\",\n    \"spurs\",\n    \"sputa\",\n    \"spyal\",\n    \"spyre\",\n    \"squab\",\n    \"squaw\",\n    \"squeg\",\n    \"squid\",\n    \"squit\",\n    \"squiz\",\n    \"stabs\",\n    \"stade\",\n    \"stags\",\n    \"stagy\",\n    \"staig\",\n    \"stane\",\n    \"stang\",\n    \"staph\",\n    \"staps\",\n    \"starn\",\n    \"starr\",\n    \"stars\",\n    \"stats\",\n    \"staun\",\n    \"staws\",\n    \"stays\",\n    \"stean\",\n    \"stear\",\n    \"stedd\",\n    \"stede\",\n    \"steds\",\n    \"steek\",\n    \"steem\",\n    \"steen\",\n    \"steil\",\n    \"stela\",\n    \"stele\",\n    \"stell\",\n    \"steme\",\n    \"stems\",\n    \"stend\",\n    \"steno\",\n    \"stens\",\n    \"stent\",\n    \"steps\",\n    \"stept\",\n    \"stere\",\n    \"stets\",\n    \"stews\",\n    \"stewy\",\n    \"steys\",\n    \"stich\",\n    \"stied\",\n    \"sties\",\n    \"stilb\",\n    \"stile\",\n    \"stime\",\n    \"stims\",\n    \"stimy\",\n    \"stipa\",\n    \"stipe\",\n    \"stire\",\n    \"stirk\",\n    \"stirp\",\n    \"stirs\",\n    \"stive\",\n    \"stivy\",\n    \"stoae\",\n    \"stoai\",\n    \"stoas\",\n    \"stoat\",\n    \"stobs\",\n    \"stoep\",\n    \"stogy\",\n    \"stoit\",\n    \"stoln\",\n    \"stoma\",\n    \"stond\",\n    \"stong\",\n    \"stonk\",\n    \"stonn\",\n    \"stook\",\n    \"stoor\",\n    \"stope\",\n    \"stops\",\n    \"stopt\",\n    \"stoss\",\n    \"stots\",\n    \"stott\",\n    \"stoun\",\n    \"stoup\",\n    \"stour\",\n    \"stown\",\n    \"stowp\",\n    \"stows\",\n    \"strad\",\n    \"strae\",\n    \"strag\",\n    \"strak\",\n    \"strep\",\n    \"strew\",\n    \"stria\",\n    \"strig\",\n    \"strim\",\n    \"strop\",\n    \"strow\",\n    \"stroy\",\n    \"strum\",\n    \"stubs\",\n    \"stude\",\n    \"studs\",\n    \"stull\",\n    \"stulm\",\n    \"stumm\",\n    \"stums\",\n    \"stuns\",\n    \"stupa\",\n    \"stupe\",\n    \"sture\",\n    \"sturt\",\n    \"styed\",\n    \"styes\",\n    \"styli\",\n    \"stylo\",\n    \"styme\",\n    \"stymy\",\n    \"styre\",\n    \"styte\",\n    \"subah\",\n    \"subas\",\n    \"subby\",\n    \"suber\",\n    \"subha\",\n    \"succi\",\n    \"sucks\",\n    \"sucky\",\n    \"sucre\",\n    \"sudds\",\n    \"sudor\",\n    \"sudsy\",\n    \"suede\",\n    \"suent\",\n    \"suers\",\n    \"suete\",\n    \"suets\",\n    \"suety\",\n    \"sugan\",\n    \"sughs\",\n    \"sugos\",\n    \"suhur\",\n    \"suids\",\n    \"suint\",\n    \"suits\",\n    \"sujee\",\n    \"sukhs\",\n    \"sukuk\",\n    \"sulci\",\n    \"sulfa\",\n    \"sulfo\",\n    \"sulks\",\n    \"sulph\",\n    \"sulus\",\n    \"sumis\",\n    \"summa\",\n    \"sumos\",\n    \"sumph\",\n    \"sumps\",\n    \"sunis\",\n    \"sunks\",\n    \"sunna\",\n    \"sunns\",\n    \"sunup\",\n    \"supes\",\n    \"supra\",\n    \"surah\",\n    \"sural\",\n    \"suras\",\n    \"surat\",\n    \"surds\",\n    \"sured\",\n    \"sures\",\n    \"surfs\",\n    \"surfy\",\n    \"surgy\",\n    \"surra\",\n    \"sused\",\n    \"suses\",\n    \"susus\",\n    \"sutor\",\n    \"sutra\",\n    \"sutta\",\n    \"swabs\",\n    \"swack\",\n    \"swads\",\n    \"swage\",\n    \"swags\",\n    \"swail\",\n    \"swain\",\n    \"swale\",\n    \"swaly\",\n    \"swamy\",\n    \"swang\",\n    \"swank\",\n    \"swans\",\n    \"swaps\",\n    \"swapt\",\n    \"sward\",\n    \"sware\",\n    \"swarf\",\n    \"swart\",\n    \"swats\",\n    \"swayl\",\n    \"sways\",\n    \"sweal\",\n    \"swede\",\n    \"sweed\",\n    \"sweel\",\n    \"sweer\",\n    \"swees\",\n    \"sweir\",\n    \"swelt\",\n    \"swerf\",\n    \"sweys\",\n    \"swies\",\n    \"swigs\",\n    \"swile\",\n    \"swims\",\n    \"swink\",\n    \"swipe\",\n    \"swire\",\n    \"swiss\",\n    \"swith\",\n    \"swits\",\n    \"swive\",\n    \"swizz\",\n    \"swobs\",\n    \"swole\",\n    \"swoln\",\n    \"swops\",\n    \"swopt\",\n    \"swots\",\n    \"swoun\",\n    \"sybbe\",\n    \"sybil\",\n    \"syboe\",\n    \"sybow\",\n    \"sycee\",\n    \"syces\",\n    \"sycon\",\n    \"syens\",\n    \"syker\",\n    \"sykes\",\n    \"sylis\",\n    \"sylph\",\n    \"sylva\",\n    \"symar\",\n    \"synch\",\n    \"syncs\",\n    \"synds\",\n    \"syned\",\n    \"synes\",\n    \"synth\",\n    \"syped\",\n    \"sypes\",\n    \"syphs\",\n    \"syrah\",\n    \"syren\",\n    \"sysop\",\n    \"sythe\",\n    \"syver\",\n    \"taals\",\n    \"taata\",\n    \"taber\",\n    \"tabes\",\n    \"tabid\",\n    \"tabis\",\n    \"tabla\",\n    \"tabor\",\n    \"tabun\",\n    \"tabus\",\n    \"tacan\",\n    \"taces\",\n    \"tacet\",\n    \"tache\",\n    \"tacho\",\n    \"tachs\",\n    \"tacks\",\n    \"tacos\",\n    \"tacts\",\n    \"taels\",\n    \"tafia\",\n    \"taggy\",\n    \"tagma\",\n    \"tahas\",\n    \"tahrs\",\n    \"taiga\",\n    \"taigs\",\n    \"taiko\",\n    \"tails\",\n    \"tains\",\n    \"taira\",\n    \"taish\",\n    \"taits\",\n    \"tajes\",\n    \"takas\",\n    \"takes\",\n    \"takhi\",\n    \"takin\",\n    \"takis\",\n    \"takky\",\n    \"talak\",\n    \"talaq\",\n    \"talar\",\n    \"talas\",\n    \"talcs\",\n    \"talcy\",\n    \"talea\",\n    \"taler\",\n    \"tales\",\n    \"talks\",\n    \"talky\",\n    \"talls\",\n    \"talma\",\n    \"talpa\",\n    \"taluk\",\n    \"talus\",\n    \"tamal\",\n    \"tamed\",\n    \"tames\",\n    \"tamin\",\n    \"tamis\",\n    \"tammy\",\n    \"tamps\",\n    \"tanas\",\n    \"tanga\",\n    \"tangi\",\n    \"tangs\",\n    \"tanhs\",\n    \"tanka\",\n    \"tanks\",\n    \"tanky\",\n    \"tanna\",\n    \"tansy\",\n    \"tanti\",\n    \"tanto\",\n    \"tanty\",\n    \"tapas\",\n    \"taped\",\n    \"tapen\",\n    \"tapes\",\n    \"tapet\",\n    \"tapis\",\n    \"tappa\",\n    \"tapus\",\n    \"taras\",\n    \"tardo\",\n    \"tared\",\n    \"tares\",\n    \"targa\",\n    \"targe\",\n    \"tarns\",\n    \"taroc\",\n    \"tarok\",\n    \"taros\",\n    \"tarps\",\n    \"tarre\",\n    \"tarry\",\n    \"tarsi\",\n    \"tarts\",\n    \"tarty\",\n    \"tasar\",\n    \"tased\",\n    \"taser\",\n    \"tases\",\n    \"tasks\",\n    \"tassa\",\n    \"tasse\",\n    \"tasso\",\n    \"tatar\",\n    \"tater\",\n    \"tates\",\n    \"taths\",\n    \"tatie\",\n    \"tatou\",\n    \"tatts\",\n    \"tatus\",\n    \"taube\",\n    \"tauld\",\n    \"tauon\",\n    \"taupe\",\n    \"tauts\",\n    \"tavah\",\n    \"tavas\",\n    \"taver\",\n    \"tawai\",\n    \"tawas\",\n    \"tawed\",\n    \"tawer\",\n    \"tawie\",\n    \"tawse\",\n    \"tawts\",\n    \"taxed\",\n    \"taxer\",\n    \"taxes\",\n    \"taxis\",\n    \"taxol\",\n    \"taxon\",\n    \"taxor\",\n    \"taxus\",\n    \"tayra\",\n    \"tazza\",\n    \"tazze\",\n    \"teade\",\n    \"teads\",\n    \"teaed\",\n    \"teaks\",\n    \"teals\",\n    \"teams\",\n    \"tears\",\n    \"teats\",\n    \"teaze\",\n    \"techs\",\n    \"techy\",\n    \"tecta\",\n    \"teels\",\n    \"teems\",\n    \"teend\",\n    \"teene\",\n    \"teens\",\n    \"teeny\",\n    \"teers\",\n    \"teffs\",\n    \"teggs\",\n    \"tegua\",\n    \"tegus\",\n    \"tehrs\",\n    \"teiid\",\n    \"teils\",\n    \"teind\",\n    \"teins\",\n    \"telae\",\n    \"telco\",\n    \"teles\",\n    \"telex\",\n    \"telia\",\n    \"telic\",\n    \"tells\",\n    \"telly\",\n    \"teloi\",\n    \"telos\",\n    \"temed\",\n    \"temes\",\n    \"tempi\",\n    \"temps\",\n    \"tempt\",\n    \"temse\",\n    \"tench\",\n    \"tends\",\n    \"tendu\",\n    \"tenes\",\n    \"tenge\",\n    \"tenia\",\n    \"tenne\",\n    \"tenno\",\n    \"tenny\",\n    \"tenon\",\n    \"tents\",\n    \"tenty\",\n    \"tenue\",\n    \"tepal\",\n    \"tepas\",\n    \"tepoy\",\n    \"terai\",\n    \"teras\",\n    \"terce\",\n    \"terek\",\n    \"teres\",\n    \"terfe\",\n    \"terfs\",\n    \"terga\",\n    \"terms\",\n    \"terne\",\n    \"terns\",\n    \"terry\",\n    \"terts\",\n    \"tesla\",\n    \"testa\",\n    \"teste\",\n    \"tests\",\n    \"tetes\",\n    \"teths\",\n    \"tetra\",\n    \"tetri\",\n    \"teuch\",\n    \"teugh\",\n    \"tewed\",\n    \"tewel\",\n    \"tewit\",\n    \"texas\",\n    \"texes\",\n    \"texts\",\n    \"thack\",\n    \"thagi\",\n    \"thaim\",\n    \"thale\",\n    \"thali\",\n    \"thana\",\n    \"thane\",\n    \"thang\",\n    \"thans\",\n    \"thanx\",\n    \"tharm\",\n    \"thars\",\n    \"thaws\",\n    \"thawy\",\n    \"thebe\",\n    \"theca\",\n    \"theed\",\n    \"theek\",\n    \"thees\",\n    \"thegn\",\n    \"theic\",\n    \"thein\",\n    \"thelf\",\n    \"thema\",\n    \"thens\",\n    \"theow\",\n    \"therm\",\n    \"thesp\",\n    \"thete\",\n    \"thews\",\n    \"thewy\",\n    \"thigs\",\n    \"thilk\",\n    \"thill\",\n    \"thine\",\n    \"thins\",\n    \"thiol\",\n    \"thirl\",\n    \"thoft\",\n    \"thole\",\n    \"tholi\",\n    \"thoro\",\n    \"thorp\",\n    \"thous\",\n    \"thowl\",\n    \"thrae\",\n    \"thraw\",\n    \"thrid\",\n    \"thrip\",\n    \"throe\",\n    \"thuds\",\n    \"thugs\",\n    \"thuja\",\n    \"thunk\",\n    \"thurl\",\n    \"thuya\",\n    \"thymi\",\n    \"thymy\",\n    \"tians\",\n    \"tiars\",\n    \"tical\",\n    \"ticca\",\n    \"ticed\",\n    \"tices\",\n    \"tichy\",\n    \"ticks\",\n    \"ticky\",\n    \"tiddy\",\n    \"tided\",\n    \"tides\",\n    \"tiers\",\n    \"tiffs\",\n    \"tifos\",\n    \"tifts\",\n    \"tiges\",\n    \"tigon\",\n    \"tikas\",\n    \"tikes\",\n    \"tikis\",\n    \"tikka\",\n    \"tilak\",\n    \"tiled\",\n    \"tiler\",\n    \"tiles\",\n    \"tills\",\n    \"tilly\",\n    \"tilth\",\n    \"tilts\",\n    \"timbo\",\n    \"timed\",\n    \"times\",\n    \"timon\",\n    \"timps\",\n    \"tinas\",\n    \"tinct\",\n    \"tinds\",\n    \"tinea\",\n    \"tined\",\n    \"tines\",\n    \"tinge\",\n    \"tings\",\n    \"tinks\",\n    \"tinny\",\n    \"tints\",\n    \"tinty\",\n    \"tipis\",\n    \"tippy\",\n    \"tired\",\n    \"tires\",\n    \"tirls\",\n    \"tiros\",\n    \"tirrs\",\n    \"titch\",\n    \"titer\",\n    \"titis\",\n    \"titre\",\n    \"titty\",\n    \"titup\",\n    \"tiyin\",\n    \"tiyns\",\n    \"tizes\",\n    \"tizzy\",\n    \"toads\",\n    \"toady\",\n    \"toaze\",\n    \"tocks\",\n    \"tocky\",\n    \"tocos\",\n    \"todde\",\n    \"toeas\",\n    \"toffs\",\n    \"toffy\",\n    \"tofts\",\n    \"tofus\",\n    \"togae\",\n    \"togas\",\n    \"toged\",\n    \"toges\",\n    \"togue\",\n    \"tohos\",\n    \"toile\",\n    \"toils\",\n    \"toing\",\n    \"toise\",\n    \"toits\",\n    \"tokay\",\n    \"toked\",\n    \"toker\",\n    \"tokes\",\n    \"tokos\",\n    \"tolan\",\n    \"tolar\",\n    \"tolas\",\n    \"toled\",\n    \"toles\",\n    \"tolls\",\n    \"tolly\",\n    \"tolts\",\n    \"tolus\",\n    \"tolyl\",\n    \"toman\",\n    \"tombs\",\n    \"tomes\",\n    \"tomia\",\n    \"tommy\",\n    \"tomos\",\n    \"tondi\",\n    \"tondo\",\n    \"toned\",\n    \"toner\",\n    \"tones\",\n    \"toney\",\n    \"tongs\",\n    \"tonka\",\n    \"tonks\",\n    \"tonne\",\n    \"tonus\",\n    \"tools\",\n    \"tooms\",\n    \"toons\",\n    \"toots\",\n    \"toped\",\n    \"topee\",\n    \"topek\",\n    \"toper\",\n    \"topes\",\n    \"tophe\",\n    \"tophi\",\n    \"tophs\",\n    \"topis\",\n    \"topoi\",\n    \"topos\",\n    \"toppy\",\n    \"toque\",\n    \"torah\",\n    \"toran\",\n    \"toras\",\n    \"torcs\",\n    \"tores\",\n    \"toric\",\n    \"torii\",\n    \"toros\",\n    \"torot\",\n    \"torrs\",\n    \"torse\",\n    \"torsi\",\n    \"torsk\",\n    \"torta\",\n    \"torte\",\n    \"torts\",\n    \"tosas\",\n    \"tosed\",\n    \"toses\",\n    \"toshy\",\n    \"tossy\",\n    \"toted\",\n    \"toter\",\n    \"totes\",\n    \"totty\",\n    \"touks\",\n    \"touns\",\n    \"tours\",\n    \"touse\",\n    \"tousy\",\n    \"touts\",\n    \"touze\",\n    \"touzy\",\n    \"towed\",\n    \"towie\",\n    \"towns\",\n    \"towny\",\n    \"towse\",\n    \"towsy\",\n    \"towts\",\n    \"towze\",\n    \"towzy\",\n    \"toyed\",\n    \"toyer\",\n    \"toyon\",\n    \"toyos\",\n    \"tozed\",\n    \"tozes\",\n    \"tozie\",\n    \"trabs\",\n    \"trads\",\n    \"tragi\",\n    \"traik\",\n    \"trams\",\n    \"trank\",\n    \"tranq\",\n    \"trans\",\n    \"trant\",\n    \"trape\",\n    \"traps\",\n    \"trapt\",\n    \"trass\",\n    \"trats\",\n    \"tratt\",\n    \"trave\",\n    \"trayf\",\n    \"trays\",\n    \"treck\",\n    \"treed\",\n    \"treen\",\n    \"trees\",\n    \"trefa\",\n    \"treif\",\n    \"treks\",\n    \"trema\",\n    \"trems\",\n    \"tress\",\n    \"trest\",\n    \"trets\",\n    \"trews\",\n    \"treyf\",\n    \"treys\",\n    \"triac\",\n    \"tride\",\n    \"trier\",\n    \"tries\",\n    \"triff\",\n    \"trigo\",\n    \"trigs\",\n    \"trike\",\n    \"trild\",\n    \"trill\",\n    \"trims\",\n    \"trine\",\n    \"trins\",\n    \"triol\",\n    \"trior\",\n    \"trios\",\n    \"trips\",\n    \"tripy\",\n    \"trist\",\n    \"troad\",\n    \"troak\",\n    \"troat\",\n    \"trock\",\n    \"trode\",\n    \"trods\",\n    \"trogs\",\n    \"trois\",\n    \"troke\",\n    \"tromp\",\n    \"trona\",\n    \"tronc\",\n    \"trone\",\n    \"tronk\",\n    \"trons\",\n    \"trooz\",\n    \"troth\",\n    \"trots\",\n    \"trows\",\n    \"troys\",\n    \"trued\",\n    \"trues\",\n    \"trugo\",\n    \"trugs\",\n    \"trull\",\n    \"tryer\",\n    \"tryke\",\n    \"tryma\",\n    \"tryps\",\n    \"tsade\",\n    \"tsadi\",\n    \"tsars\",\n    \"tsked\",\n    \"tsuba\",\n    \"tsubo\",\n    \"tuans\",\n    \"tuart\",\n    \"tuath\",\n    \"tubae\",\n    \"tubar\",\n    \"tubas\",\n    \"tubby\",\n    \"tubed\",\n    \"tubes\",\n    \"tucks\",\n    \"tufas\",\n    \"tuffe\",\n    \"tuffs\",\n    \"tufts\",\n    \"tufty\",\n    \"tugra\",\n    \"tuile\",\n    \"tuina\",\n    \"tuism\",\n    \"tuktu\",\n    \"tules\",\n    \"tulpa\",\n    \"tulsi\",\n    \"tumid\",\n    \"tummy\",\n    \"tumps\",\n    \"tumpy\",\n    \"tunas\",\n    \"tunds\",\n    \"tuned\",\n    \"tuner\",\n    \"tunes\",\n    \"tungs\",\n    \"tunny\",\n    \"tupek\",\n    \"tupik\",\n    \"tuple\",\n    \"tuque\",\n    \"turds\",\n    \"turfs\",\n    \"turfy\",\n    \"turks\",\n    \"turme\",\n    \"turms\",\n    \"turns\",\n    \"turnt\",\n    \"turps\",\n    \"turrs\",\n    \"tushy\",\n    \"tusks\",\n    \"tusky\",\n    \"tutee\",\n    \"tutti\",\n    \"tutty\",\n    \"tutus\",\n    \"tuxes\",\n    \"tuyer\",\n    \"twaes\",\n    \"twain\",\n    \"twals\",\n    \"twank\",\n    \"twats\",\n    \"tways\",\n    \"tweel\",\n    \"tween\",\n    \"tweep\",\n    \"tweer\",\n    \"twerk\",\n    \"twerp\",\n    \"twier\",\n    \"twigs\",\n    \"twill\",\n    \"twilt\",\n    \"twink\",\n    \"twins\",\n    \"twiny\",\n    \"twire\",\n    \"twirp\",\n    \"twite\",\n    \"twits\",\n    \"twoer\",\n    \"twyer\",\n    \"tyees\",\n    \"tyers\",\n    \"tyiyn\",\n    \"tykes\",\n    \"tyler\",\n    \"tymps\",\n    \"tynde\",\n    \"tyned\",\n    \"tynes\",\n    \"typal\",\n    \"typed\",\n    \"types\",\n    \"typey\",\n    \"typic\",\n    \"typos\",\n    \"typps\",\n    \"typto\",\n    \"tyran\",\n    \"tyred\",\n    \"tyres\",\n    \"tyros\",\n    \"tythe\",\n    \"tzars\",\n    \"udals\",\n    \"udons\",\n    \"ugali\",\n    \"ugged\",\n    \"uhlan\",\n    \"uhuru\",\n    \"ukase\",\n    \"ulama\",\n    \"ulans\",\n    \"ulema\",\n    \"ulmin\",\n    \"ulnad\",\n    \"ulnae\",\n    \"ulnar\",\n    \"ulnas\",\n    \"ulpan\",\n    \"ulvas\",\n    \"ulyie\",\n    \"ulzie\",\n    \"umami\",\n    \"umbel\",\n    \"umber\",\n    \"umble\",\n    \"umbos\",\n    \"umbre\",\n    \"umiac\",\n    \"umiak\",\n    \"umiaq\",\n    \"ummah\",\n    \"ummas\",\n    \"ummed\",\n    \"umped\",\n    \"umphs\",\n    \"umpie\",\n    \"umpty\",\n    \"umrah\",\n    \"umras\",\n    \"unais\",\n    \"unapt\",\n    \"unarm\",\n    \"unary\",\n    \"unaus\",\n    \"unbag\",\n    \"unban\",\n    \"unbar\",\n    \"unbed\",\n    \"unbid\",\n    \"unbox\",\n    \"uncap\",\n    \"unces\",\n    \"uncia\",\n    \"uncos\",\n    \"uncoy\",\n    \"uncus\",\n    \"undam\",\n    \"undee\",\n    \"undos\",\n    \"undug\",\n    \"uneth\",\n    \"unfix\",\n    \"ungag\",\n    \"unget\",\n    \"ungod\",\n    \"ungot\",\n    \"ungum\",\n    \"unhat\",\n    \"unhip\",\n    \"unica\",\n    \"units\",\n    \"unjam\",\n    \"unked\",\n    \"unket\",\n    \"unkid\",\n    \"unlaw\",\n    \"unlay\",\n    \"unled\",\n    \"unlet\",\n    \"unlid\",\n    \"unman\",\n    \"unmew\",\n    \"unmix\",\n    \"unpay\",\n    \"unpeg\",\n    \"unpen\",\n    \"unpin\",\n    \"unred\",\n    \"unrid\",\n    \"unrig\",\n    \"unrip\",\n    \"unsaw\",\n    \"unsay\",\n    \"unsee\",\n    \"unsew\",\n    \"unsex\",\n    \"unsod\",\n    \"untax\",\n    \"untin\",\n    \"unwet\",\n    \"unwit\",\n    \"unwon\",\n    \"upbow\",\n    \"upbye\",\n    \"updos\",\n    \"updry\",\n    \"upend\",\n    \"upjet\",\n    \"uplay\",\n    \"upled\",\n    \"uplit\",\n    \"upped\",\n    \"upran\",\n    \"uprun\",\n    \"upsee\",\n    \"upsey\",\n    \"uptak\",\n    \"upter\",\n    \"uptie\",\n    \"uraei\",\n    \"urali\",\n    \"uraos\",\n    \"urare\",\n    \"urari\",\n    \"urase\",\n    \"urate\",\n    \"urbex\",\n    \"urbia\",\n    \"urdee\",\n    \"ureal\",\n    \"ureas\",\n    \"uredo\",\n    \"ureic\",\n    \"urena\",\n    \"urent\",\n    \"urged\",\n    \"urger\",\n    \"urges\",\n    \"urial\",\n    \"urite\",\n    \"urman\",\n    \"urnal\",\n    \"urned\",\n    \"urped\",\n    \"ursae\",\n    \"ursid\",\n    \"urson\",\n    \"urubu\",\n    \"urvas\",\n    \"users\",\n    \"usnea\",\n    \"usque\",\n    \"usure\",\n    \"usury\",\n    \"uteri\",\n    \"uveal\",\n    \"uveas\",\n    \"uvula\",\n    \"vacua\",\n    \"vaded\",\n    \"vades\",\n    \"vagal\",\n    \"vagus\",\n    \"vails\",\n    \"vaire\",\n    \"vairs\",\n    \"vairy\",\n    \"vakas\",\n    \"vakil\",\n    \"vales\",\n    \"valis\",\n    \"valse\",\n    \"vamps\",\n    \"vampy\",\n    \"vanda\",\n    \"vaned\",\n    \"vanes\",\n    \"vangs\",\n    \"vants\",\n    \"vaped\",\n    \"vaper\",\n    \"vapes\",\n    \"varan\",\n    \"varas\",\n    \"vardy\",\n    \"varec\",\n    \"vares\",\n    \"varia\",\n    \"varix\",\n    \"varna\",\n    \"varus\",\n    \"varve\",\n    \"vasal\",\n    \"vases\",\n    \"vasts\",\n    \"vasty\",\n    \"vatic\",\n    \"vatus\",\n    \"vauch\",\n    \"vaute\",\n    \"vauts\",\n    \"vawte\",\n    \"vaxes\",\n    \"veale\",\n    \"veals\",\n    \"vealy\",\n    \"veena\",\n    \"veeps\",\n    \"veers\",\n    \"veery\",\n    \"vegas\",\n    \"veges\",\n    \"vegie\",\n    \"vegos\",\n    \"vehme\",\n    \"veils\",\n    \"veily\",\n    \"veins\",\n    \"veiny\",\n    \"velar\",\n    \"velds\",\n    \"veldt\",\n    \"veles\",\n    \"vells\",\n    \"velum\",\n    \"venae\",\n    \"venal\",\n    \"vends\",\n    \"vendu\",\n    \"veney\",\n    \"venge\",\n    \"venin\",\n    \"vents\",\n    \"venus\",\n    \"verbs\",\n    \"verra\",\n    \"verry\",\n    \"verst\",\n    \"verts\",\n    \"vertu\",\n    \"vespa\",\n    \"vesta\",\n    \"vests\",\n    \"vetch\",\n    \"vexed\",\n    \"vexer\",\n    \"vexes\",\n    \"vexil\",\n    \"vezir\",\n    \"vials\",\n    \"viand\",\n    \"vibes\",\n    \"vibex\",\n    \"vibey\",\n    \"viced\",\n    \"vices\",\n    \"vichy\",\n    \"viers\",\n    \"views\",\n    \"viewy\",\n    \"vifda\",\n    \"viffs\",\n    \"vigas\",\n    \"vigia\",\n    \"vilde\",\n    \"viler\",\n    \"villi\",\n    \"vills\",\n    \"vimen\",\n    \"vinal\",\n    \"vinas\",\n    \"vinca\",\n    \"vined\",\n    \"viner\",\n    \"vines\",\n    \"vinew\",\n    \"vinic\",\n    \"vinos\",\n    \"vints\",\n    \"viold\",\n    \"viols\",\n    \"vired\",\n    \"vireo\",\n    \"vires\",\n    \"virga\",\n    \"virge\",\n    \"virid\",\n    \"virls\",\n    \"virtu\",\n    \"visas\",\n    \"vised\",\n    \"vises\",\n    \"visie\",\n    \"visne\",\n    \"vison\",\n    \"visto\",\n    \"vitae\",\n    \"vitas\",\n    \"vitex\",\n    \"vitro\",\n    \"vitta\",\n    \"vivas\",\n    \"vivat\",\n    \"vivda\",\n    \"viver\",\n    \"vives\",\n    \"vizir\",\n    \"vizor\",\n    \"vleis\",\n    \"vlies\",\n    \"vlogs\",\n    \"voars\",\n    \"vocab\",\n    \"voces\",\n    \"voddy\",\n    \"vodou\",\n    \"vodun\",\n    \"voema\",\n    \"vogie\",\n    \"voids\",\n    \"voile\",\n    \"voips\",\n    \"volae\",\n    \"volar\",\n    \"voled\",\n    \"voles\",\n    \"volet\",\n    \"volks\",\n    \"volta\",\n    \"volte\",\n    \"volti\",\n    \"volts\",\n    \"volva\",\n    \"volve\",\n    \"vomer\",\n    \"voted\",\n    \"votes\",\n    \"vouge\",\n    \"voulu\",\n    \"vowed\",\n    \"vower\",\n    \"voxel\",\n    \"vozhd\",\n    \"vraic\",\n    \"vrils\",\n    \"vroom\",\n    \"vrous\",\n    \"vrouw\",\n    \"vrows\",\n    \"vuggs\",\n    \"vuggy\",\n    \"vughs\",\n    \"vughy\",\n    \"vulgo\",\n    \"vulns\",\n    \"vulva\",\n    \"vutty\",\n    \"waacs\",\n    \"wacke\",\n    \"wacko\",\n    \"wacks\",\n    \"wadds\",\n    \"waddy\",\n    \"waded\",\n    \"wader\",\n    \"wades\",\n    \"wadge\",\n    \"wadis\",\n    \"wadts\",\n    \"waffs\",\n    \"wafts\",\n    \"waged\",\n    \"wages\",\n    \"wagga\",\n    \"wagyu\",\n    \"wahoo\",\n    \"waide\",\n    \"waifs\",\n    \"waift\",\n    \"wails\",\n    \"wains\",\n    \"wairs\",\n    \"waite\",\n    \"waits\",\n    \"wakas\",\n    \"waked\",\n    \"waken\",\n    \"waker\",\n    \"wakes\",\n    \"wakfs\",\n    \"waldo\",\n    \"walds\",\n    \"waled\",\n    \"waler\",\n    \"wales\",\n    \"walie\",\n    \"walis\",\n    \"walks\",\n    \"walla\",\n    \"walls\",\n    \"wally\",\n    \"walty\",\n    \"wamed\",\n    \"wames\",\n    \"wamus\",\n    \"wands\",\n    \"waned\",\n    \"wanes\",\n    \"waney\",\n    \"wangs\",\n    \"wanks\",\n    \"wanky\",\n    \"wanle\",\n    \"wanly\",\n    \"wanna\",\n    \"wants\",\n    \"wanty\",\n    \"wanze\",\n    \"waqfs\",\n    \"warbs\",\n    \"warby\",\n    \"wards\",\n    \"wared\",\n    \"wares\",\n    \"warez\",\n    \"warks\",\n    \"warms\",\n    \"warns\",\n    \"warps\",\n    \"warre\",\n    \"warst\",\n    \"warts\",\n    \"wases\",\n    \"washy\",\n    \"wasms\",\n    \"wasps\",\n    \"waspy\",\n    \"wasts\",\n    \"watap\",\n    \"watts\",\n    \"wauff\",\n    \"waugh\",\n    \"wauks\",\n    \"waulk\",\n    \"wauls\",\n    \"waurs\",\n    \"waved\",\n    \"waves\",\n    \"wavey\",\n    \"wawas\",\n    \"wawes\",\n    \"wawls\",\n    \"waxed\",\n    \"waxer\",\n    \"waxes\",\n    \"wayed\",\n    \"wazir\",\n    \"wazoo\",\n    \"weald\",\n    \"weals\",\n    \"weamb\",\n    \"weans\",\n    \"wears\",\n    \"webby\",\n    \"weber\",\n    \"wecht\",\n    \"wedel\",\n    \"wedgy\",\n    \"weeds\",\n    \"weeke\",\n    \"weeks\",\n    \"weels\",\n    \"weems\",\n    \"weens\",\n    \"weeny\",\n    \"weeps\",\n    \"weepy\",\n    \"weest\",\n    \"weete\",\n    \"weets\",\n    \"wefte\",\n    \"wefts\",\n    \"weids\",\n    \"weils\",\n    \"weirs\",\n    \"weise\",\n    \"weize\",\n    \"wekas\",\n    \"welds\",\n    \"welke\",\n    \"welks\",\n    \"welkt\",\n    \"wells\",\n    \"welly\",\n    \"welts\",\n    \"wembs\",\n    \"wends\",\n    \"wenge\",\n    \"wenny\",\n    \"wents\",\n    \"weros\",\n    \"wersh\",\n    \"wests\",\n    \"wetas\",\n    \"wetly\",\n    \"wexed\",\n    \"wexes\",\n    \"whamo\",\n    \"whams\",\n    \"whang\",\n    \"whaps\",\n    \"whare\",\n    \"whata\",\n    \"whats\",\n    \"whaup\",\n    \"whaur\",\n    \"wheal\",\n    \"whear\",\n    \"wheen\",\n    \"wheep\",\n    \"wheft\",\n    \"whelk\",\n    \"whelm\",\n    \"whens\",\n    \"whets\",\n    \"whews\",\n    \"wheys\",\n    \"whids\",\n    \"whift\",\n    \"whigs\",\n    \"whilk\",\n    \"whims\",\n    \"whins\",\n    \"whios\",\n    \"whips\",\n    \"whipt\",\n    \"whirr\",\n    \"whirs\",\n    \"whish\",\n    \"whiss\",\n    \"whist\",\n    \"whits\",\n    \"whity\",\n    \"whizz\",\n    \"whomp\",\n    \"whoof\",\n    \"whoot\",\n    \"whops\",\n    \"whore\",\n    \"whorl\",\n    \"whort\",\n    \"whoso\",\n    \"whows\",\n    \"whump\",\n    \"whups\",\n    \"whyda\",\n    \"wicca\",\n    \"wicks\",\n    \"wicky\",\n    \"widdy\",\n    \"wides\",\n    \"wiels\",\n    \"wifed\",\n    \"wifes\",\n    \"wifey\",\n    \"wifie\",\n    \"wifty\",\n    \"wigan\",\n    \"wigga\",\n    \"wiggy\",\n    \"wikis\",\n    \"wilco\",\n    \"wilds\",\n    \"wiled\",\n    \"wiles\",\n    \"wilga\",\n    \"wilis\",\n    \"wilja\",\n    \"wills\",\n    \"wilts\",\n    \"wimps\",\n    \"winds\",\n    \"wined\",\n    \"wines\",\n    \"winey\",\n    \"winge\",\n    \"wings\",\n    \"wingy\",\n    \"winks\",\n    \"winna\",\n    \"winns\",\n    \"winos\",\n    \"winze\",\n    \"wiped\",\n    \"wiper\",\n    \"wipes\",\n    \"wired\",\n    \"wirer\",\n    \"wires\",\n    \"wirra\",\n    \"wised\",\n    \"wises\",\n    \"wisha\",\n    \"wisht\",\n    \"wisps\",\n    \"wists\",\n    \"witan\",\n    \"wited\",\n    \"wites\",\n    \"withe\",\n    \"withs\",\n    \"withy\",\n    \"wived\",\n    \"wiver\",\n    \"wives\",\n    \"wizen\",\n    \"wizes\",\n    \"woads\",\n    \"woald\",\n    \"wocks\",\n    \"wodge\",\n    \"woful\",\n    \"wojus\",\n    \"woker\",\n    \"wokka\",\n    \"wolds\",\n    \"wolfs\",\n    \"wolly\",\n    \"wolve\",\n    \"wombs\",\n    \"womby\",\n    \"womyn\",\n    \"wonga\",\n    \"wongi\",\n    \"wonks\",\n    \"wonky\",\n    \"wonts\",\n    \"woods\",\n    \"wooed\",\n    \"woofs\",\n    \"woofy\",\n    \"woold\",\n    \"wools\",\n    \"woons\",\n    \"woops\",\n    \"woopy\",\n    \"woose\",\n    \"woosh\",\n    \"wootz\",\n    \"words\",\n    \"works\",\n    \"worms\",\n    \"wormy\",\n    \"worts\",\n    \"wowed\",\n    \"wowee\",\n    \"woxen\",\n    \"wrang\",\n    \"wraps\",\n    \"wrapt\",\n    \"wrast\",\n    \"wrate\",\n    \"wrawl\",\n    \"wrens\",\n    \"wrick\",\n    \"wried\",\n    \"wrier\",\n    \"wries\",\n    \"writs\",\n    \"wroke\",\n    \"wroot\",\n    \"wroth\",\n    \"wryer\",\n    \"wuddy\",\n    \"wudus\",\n    \"wulls\",\n    \"wurst\",\n    \"wuses\",\n    \"wushu\",\n    \"wussy\",\n    \"wuxia\",\n    \"wyled\",\n    \"wyles\",\n    \"wynds\",\n    \"wynns\",\n    \"wyted\",\n    \"wytes\",\n    \"xebec\",\n    \"xenia\",\n    \"xenic\",\n    \"xenon\",\n    \"xeric\",\n    \"xerox\",\n    \"xerus\",\n    \"xoana\",\n    \"xrays\",\n    \"xylan\",\n    \"xylem\",\n    \"xylic\",\n    \"xylol\",\n    \"xylyl\",\n    \"xysti\",\n    \"xysts\",\n    \"yaars\",\n    \"yabas\",\n    \"yabba\",\n    \"yabby\",\n    \"yacca\",\n    \"yacka\",\n    \"yacks\",\n    \"yaffs\",\n    \"yager\",\n    \"yages\",\n    \"yagis\",\n    \"yahoo\",\n    \"yaird\",\n    \"yakka\",\n    \"yakow\",\n    \"yales\",\n    \"yamen\",\n    \"yampy\",\n    \"yamun\",\n    \"yangs\",\n    \"yanks\",\n    \"yapok\",\n    \"yapon\",\n    \"yapps\",\n    \"yappy\",\n    \"yarak\",\n    \"yarco\",\n    \"yards\",\n    \"yarer\",\n    \"yarfa\",\n    \"yarks\",\n    \"yarns\",\n    \"yarrs\",\n    \"yarta\",\n    \"yarto\",\n    \"yates\",\n    \"yauds\",\n    \"yauld\",\n    \"yaups\",\n    \"yawed\",\n    \"yawey\",\n    \"yawls\",\n    \"yawns\",\n    \"yawny\",\n    \"yawps\",\n    \"ybore\",\n    \"yclad\",\n    \"ycled\",\n    \"ycond\",\n    \"ydrad\",\n    \"ydred\",\n    \"yeads\",\n    \"yeahs\",\n    \"yealm\",\n    \"yeans\",\n    \"yeard\",\n    \"years\",\n    \"yecch\",\n    \"yechs\",\n    \"yechy\",\n    \"yedes\",\n    \"yeeds\",\n    \"yeesh\",\n    \"yeggs\",\n    \"yelks\",\n    \"yells\",\n    \"yelms\",\n    \"yelps\",\n    \"yelts\",\n    \"yenta\",\n    \"yente\",\n    \"yerba\",\n    \"yerds\",\n    \"yerks\",\n    \"yeses\",\n    \"yesks\",\n    \"yests\",\n    \"yesty\",\n    \"yetis\",\n    \"yetts\",\n    \"yeuks\",\n    \"yeuky\",\n    \"yeven\",\n    \"yeves\",\n    \"yewen\",\n    \"yexed\",\n    \"yexes\",\n    \"yfere\",\n    \"yiked\",\n    \"yikes\",\n    \"yills\",\n    \"yince\",\n    \"yipes\",\n    \"yippy\",\n    \"yirds\",\n    \"yirks\",\n    \"yirrs\",\n    \"yirth\",\n    \"yites\",\n    \"yitie\",\n    \"ylems\",\n    \"ylike\",\n    \"ylkes\",\n    \"ymolt\",\n    \"ympes\",\n    \"yobbo\",\n    \"yobby\",\n    \"yocks\",\n    \"yodel\",\n    \"yodhs\",\n    \"yodle\",\n    \"yogas\",\n    \"yogee\",\n    \"yoghs\",\n    \"yogic\",\n    \"yogin\",\n    \"yogis\",\n    \"yoick\",\n    \"yojan\",\n    \"yoked\",\n    \"yokel\",\n    \"yoker\",\n    \"yokes\",\n    \"yokul\",\n    \"yolks\",\n    \"yolky\",\n    \"yomim\",\n    \"yomps\",\n    \"yonic\",\n    \"yonis\",\n    \"yonks\",\n    \"yoofs\",\n    \"yoops\",\n    \"yores\",\n    \"yorks\",\n    \"yorps\",\n    \"youks\",\n    \"yourn\",\n    \"yours\",\n    \"yourt\",\n    \"youse\",\n    \"yowed\",\n    \"yowes\",\n    \"yowie\",\n    \"yowls\",\n    \"yowza\",\n    \"yrapt\",\n    \"yrent\",\n    \"yrivd\",\n    \"yrneh\",\n    \"ysame\",\n    \"ytost\",\n    \"yuans\",\n    \"yucas\",\n    \"yucca\",\n    \"yucch\",\n    \"yucko\",\n    \"yucks\",\n    \"yucky\",\n    \"yufts\",\n    \"yugas\",\n    \"yuked\",\n    \"yukes\",\n    \"yukky\",\n    \"yukos\",\n    \"yulan\",\n    \"yules\",\n    \"yummo\",\n    \"yummy\",\n    \"yumps\",\n    \"yupon\",\n    \"yuppy\",\n    \"yurta\",\n    \"yurts\",\n    \"yuzus\",\n    \"zabra\",\n    \"zacks\",\n    \"zaida\",\n    \"zaidy\",\n    \"zaire\",\n    \"zakat\",\n    \"zaman\",\n    \"zambo\",\n    \"zamia\",\n    \"zanja\",\n    \"zante\",\n    \"zanza\",\n    \"zanze\",\n    \"zappy\",\n    \"zarfs\",\n    \"zaris\",\n    \"zatis\",\n    \"zaxes\",\n    \"zayin\",\n    \"zazen\",\n    \"zeals\",\n    \"zebec\",\n    \"zebub\",\n    \"zebus\",\n    \"zedas\",\n    \"zeins\",\n    \"zendo\",\n    \"zerda\",\n    \"zerks\",\n    \"zeros\",\n    \"zests\",\n    \"zetas\",\n    \"zexes\",\n    \"zezes\",\n    \"zhomo\",\n    \"zibet\",\n    \"ziffs\",\n    \"zigan\",\n    \"zilas\",\n    \"zilch\",\n    \"zilla\",\n    \"zills\",\n    \"zimbi\",\n    \"zimbs\",\n    \"zinco\",\n    \"zincs\",\n    \"zincy\",\n    \"zineb\",\n    \"zines\",\n    \"zings\",\n    \"zingy\",\n    \"zinke\",\n    \"zinky\",\n    \"zippo\",\n    \"zippy\",\n    \"ziram\",\n    \"zitis\",\n    \"zizel\",\n    \"zizit\",\n    \"zlote\",\n    \"zloty\",\n    \"zoaea\",\n    \"zobos\",\n    \"zobus\",\n    \"zocco\",\n    \"zoeae\",\n    \"zoeal\",\n    \"zoeas\",\n    \"zoism\",\n    \"zoist\",\n    \"zombi\",\n    \"zonae\",\n    \"zonda\",\n    \"zoned\",\n    \"zoner\",\n    \"zones\",\n    \"zonks\",\n    \"zooea\",\n    \"zooey\",\n    \"zooid\",\n    \"zooks\",\n    \"zooms\",\n    \"zoons\",\n    \"zooty\",\n    \"zoppa\",\n    \"zoppo\",\n    \"zoril\",\n    \"zoris\",\n    \"zorro\",\n    \"zouks\",\n    \"zowee\",\n    \"zowie\",\n    \"zulus\",\n    \"zupan\",\n    \"zupas\",\n    \"zuppa\",\n    \"zurfs\",\n    \"zuzim\",\n    \"zygal\",\n    \"zygon\",\n    \"zymes\",\n    \"zymic\"\n];\nvar SOLUTIONS = [\n    \"cigar\",\n    \"rebut\",\n    \"sissy\",\n    \"humph\",\n    \"awake\",\n    \"blush\",\n    \"focal\",\n    \"evade\",\n    \"naval\",\n    \"serve\",\n    \"heath\",\n    \"dwarf\",\n    \"model\",\n    \"karma\",\n    \"stink\",\n    \"grade\",\n    \"quiet\",\n    \"bench\",\n    \"abate\",\n    \"feign\",\n    \"major\",\n    \"death\",\n    \"fresh\",\n    \"crust\",\n    \"stool\",\n    \"colon\",\n    \"abase\",\n    \"marry\",\n    \"react\",\n    \"batty\",\n    \"pride\",\n    \"floss\",\n    \"helix\",\n    \"croak\",\n    \"staff\",\n    \"paper\",\n    \"unfed\",\n    \"whelp\",\n    \"trawl\",\n    \"outdo\",\n    \"adobe\",\n    \"crazy\",\n    \"sower\",\n    \"repay\",\n    \"digit\",\n    \"crate\",\n    \"cluck\",\n    \"spike\",\n    \"mimic\",\n    \"pound\",\n    \"maxim\",\n    \"linen\",\n    \"unmet\",\n    \"flesh\",\n    \"booby\",\n    \"forth\",\n    \"first\",\n    \"stand\",\n    \"belly\",\n    \"ivory\",\n    \"seedy\",\n    \"print\",\n    \"yearn\",\n    \"drain\",\n    \"bribe\",\n    \"stout\",\n    \"panel\",\n    \"crass\",\n    \"flume\",\n    \"offal\",\n    \"agree\",\n    \"error\",\n    \"swirl\",\n    \"argue\",\n    \"bleed\",\n    \"delta\",\n    \"flick\",\n    \"totem\",\n    \"wooer\",\n    \"front\",\n    \"shrub\",\n    \"parry\",\n    \"biome\",\n    \"lapel\",\n    \"start\",\n    \"greet\",\n    \"goner\",\n    \"golem\",\n    \"lusty\",\n    \"loopy\",\n    \"round\",\n    \"audit\",\n    \"lying\",\n    \"gamma\",\n    \"labor\",\n    \"islet\",\n    \"civic\",\n    \"forge\",\n    \"corny\",\n    \"moult\",\n    \"basic\",\n    \"salad\",\n    \"agate\",\n    \"spicy\",\n    \"spray\",\n    \"essay\",\n    \"fjord\",\n    \"spend\",\n    \"kebab\",\n    \"guild\",\n    \"aback\",\n    \"motor\",\n    \"alone\",\n    \"hatch\",\n    \"hyper\",\n    \"thumb\",\n    \"dowry\",\n    \"ought\",\n    \"belch\",\n    \"dutch\",\n    \"pilot\",\n    \"tweed\",\n    \"comet\",\n    \"jaunt\",\n    \"enema\",\n    \"steed\",\n    \"abyss\",\n    \"growl\",\n    \"fling\",\n    \"dozen\",\n    \"boozy\",\n    \"erode\",\n    \"world\",\n    \"gouge\",\n    \"click\",\n    \"briar\",\n    \"great\",\n    \"altar\",\n    \"pulpy\",\n    \"blurt\",\n    \"coast\",\n    \"duchy\",\n    \"groin\",\n    \"fixer\",\n    \"group\",\n    \"rogue\",\n    \"badly\",\n    \"smart\",\n    \"pithy\",\n    \"gaudy\",\n    \"chill\",\n    \"heron\",\n    \"vodka\",\n    \"finer\",\n    \"surer\",\n    \"radio\",\n    \"rouge\",\n    \"perch\",\n    \"retch\",\n    \"wrote\",\n    \"clock\",\n    \"tilde\",\n    \"store\",\n    \"prove\",\n    \"bring\",\n    \"solve\",\n    \"cheat\",\n    \"grime\",\n    \"exult\",\n    \"usher\",\n    \"epoch\",\n    \"triad\",\n    \"break\",\n    \"rhino\",\n    \"viral\",\n    \"conic\",\n    \"masse\",\n    \"sonic\",\n    \"vital\",\n    \"trace\",\n    \"using\",\n    \"peach\",\n    \"champ\",\n    \"baton\",\n    \"brake\",\n    \"pluck\",\n    \"craze\",\n    \"gripe\",\n    \"weary\",\n    \"picky\",\n    \"acute\",\n    \"ferry\",\n    \"aside\",\n    \"tapir\",\n    \"troll\",\n    \"unify\",\n    \"rebus\",\n    \"boost\",\n    \"truss\",\n    \"siege\",\n    \"tiger\",\n    \"banal\",\n    \"slump\",\n    \"crank\",\n    \"gorge\",\n    \"query\",\n    \"drink\",\n    \"favor\",\n    \"abbey\",\n    \"tangy\",\n    \"panic\",\n    \"solar\",\n    \"shire\",\n    \"proxy\",\n    \"point\",\n    \"robot\",\n    \"prick\",\n    \"wince\",\n    \"crimp\",\n    \"knoll\",\n    \"sugar\",\n    \"whack\",\n    \"mount\",\n    \"perky\",\n    \"could\",\n    \"wrung\",\n    \"light\",\n    \"those\",\n    \"moist\",\n    \"shard\",\n    \"pleat\",\n    \"aloft\",\n    \"skill\",\n    \"elder\",\n    \"frame\",\n    \"humor\",\n    \"pause\",\n    \"ulcer\",\n    \"ultra\",\n    \"robin\",\n    \"cynic\",\n    \"agora\",\n    \"aroma\",\n    \"caulk\",\n    \"shake\",\n    \"pupal\",\n    \"dodge\",\n    \"swill\",\n    \"tacit\",\n    \"other\",\n    \"thorn\",\n    \"trove\",\n    \"bloke\",\n    \"vivid\",\n    \"spill\",\n    \"chant\",\n    \"choke\",\n    \"rupee\",\n    \"nasty\",\n    \"mourn\",\n    \"ahead\",\n    \"brine\",\n    \"cloth\",\n    \"hoard\",\n    \"sweet\",\n    \"month\",\n    \"lapse\",\n    \"watch\",\n    \"today\",\n    \"focus\",\n    \"smelt\",\n    \"tease\",\n    \"cater\",\n    \"movie\",\n    \"lynch\",\n    \"saute\",\n    \"allow\",\n    \"renew\",\n    \"their\",\n    \"slosh\",\n    \"purge\",\n    \"chest\",\n    \"depot\",\n    \"epoxy\",\n    \"nymph\",\n    \"found\",\n    \"shall\",\n    \"harry\",\n    \"stove\",\n    \"lowly\",\n    \"snout\",\n    \"trope\",\n    \"fewer\",\n    \"shawl\",\n    \"natal\",\n    \"fibre\",\n    \"comma\",\n    \"foray\",\n    \"scare\",\n    \"stair\",\n    \"black\",\n    \"squad\",\n    \"royal\",\n    \"chunk\",\n    \"mince\",\n    \"slave\",\n    \"shame\",\n    \"cheek\",\n    \"ample\",\n    \"flair\",\n    \"foyer\",\n    \"cargo\",\n    \"oxide\",\n    \"plant\",\n    \"olive\",\n    \"inert\",\n    \"askew\",\n    \"heist\",\n    \"shown\",\n    \"zesty\",\n    \"hasty\",\n    \"trash\",\n    \"fella\",\n    \"larva\",\n    \"forgo\",\n    \"story\",\n    \"hairy\",\n    \"train\",\n    \"homer\",\n    \"badge\",\n    \"midst\",\n    \"canny\",\n    \"fetus\",\n    \"butch\",\n    \"farce\",\n    \"slung\",\n    \"tipsy\",\n    \"metal\",\n    \"yield\",\n    \"delve\",\n    \"being\",\n    \"scour\",\n    \"glass\",\n    \"gamer\",\n    \"scrap\",\n    \"money\",\n    \"hinge\",\n    \"album\",\n    \"vouch\",\n    \"asset\",\n    \"tiara\",\n    \"crept\",\n    \"bayou\",\n    \"atoll\",\n    \"manor\",\n    \"creak\",\n    \"showy\",\n    \"phase\",\n    \"froth\",\n    \"depth\",\n    \"gloom\",\n    \"flood\",\n    \"trait\",\n    \"girth\",\n    \"piety\",\n    \"payer\",\n    \"goose\",\n    \"float\",\n    \"donor\",\n    \"atone\",\n    \"primo\",\n    \"apron\",\n    \"blown\",\n    \"cacao\",\n    \"loser\",\n    \"input\",\n    \"gloat\",\n    \"awful\",\n    \"brink\",\n    \"smite\",\n    \"beady\",\n    \"rusty\",\n    \"retro\",\n    \"droll\",\n    \"gawky\",\n    \"hutch\",\n    \"pinto\",\n    \"gaily\",\n    \"egret\",\n    \"lilac\",\n    \"sever\",\n    \"field\",\n    \"fluff\",\n    \"hydro\",\n    \"flack\",\n    \"agape\",\n    \"wench\",\n    \"voice\",\n    \"stead\",\n    \"stalk\",\n    \"berth\",\n    \"madam\",\n    \"night\",\n    \"bland\",\n    \"liver\",\n    \"wedge\",\n    \"augur\",\n    \"roomy\",\n    \"wacky\",\n    \"flock\",\n    \"angry\",\n    \"bobby\",\n    \"trite\",\n    \"aphid\",\n    \"tryst\",\n    \"midge\",\n    \"power\",\n    \"elope\",\n    \"cinch\",\n    \"motto\",\n    \"stomp\",\n    \"upset\",\n    \"bluff\",\n    \"cramp\",\n    \"quart\",\n    \"coyly\",\n    \"youth\",\n    \"rhyme\",\n    \"buggy\",\n    \"alien\",\n    \"smear\",\n    \"unfit\",\n    \"patty\",\n    \"cling\",\n    \"glean\",\n    \"label\",\n    \"hunky\",\n    \"khaki\",\n    \"poker\",\n    \"gruel\",\n    \"twice\",\n    \"twang\",\n    \"shrug\",\n    \"treat\",\n    \"unlit\",\n    \"waste\",\n    \"merit\",\n    \"woven\",\n    \"octal\",\n    \"needy\",\n    \"clown\",\n    \"widow\",\n    \"irony\",\n    \"ruder\",\n    \"gauze\",\n    \"chief\",\n    \"onset\",\n    \"prize\",\n    \"fungi\",\n    \"charm\",\n    \"gully\",\n    \"inter\",\n    \"whoop\",\n    \"taunt\",\n    \"leery\",\n    \"class\",\n    \"theme\",\n    \"lofty\",\n    \"tibia\",\n    \"booze\",\n    \"alpha\",\n    \"thyme\",\n    \"eclat\",\n    \"doubt\",\n    \"parer\",\n    \"chute\",\n    \"stick\",\n    \"trice\",\n    \"alike\",\n    \"sooth\",\n    \"recap\",\n    \"saint\",\n    \"liege\",\n    \"glory\",\n    \"grate\",\n    \"admit\",\n    \"brisk\",\n    \"soggy\",\n    \"usurp\",\n    \"scald\",\n    \"scorn\",\n    \"leave\",\n    \"twine\",\n    \"sting\",\n    \"bough\",\n    \"marsh\",\n    \"sloth\",\n    \"dandy\",\n    \"vigor\",\n    \"howdy\",\n    \"enjoy\",\n    \"valid\",\n    \"ionic\",\n    \"equal\",\n    \"unset\",\n    \"floor\",\n    \"catch\",\n    \"spade\",\n    \"stein\",\n    \"exist\",\n    \"quirk\",\n    \"denim\",\n    \"grove\",\n    \"spiel\",\n    \"mummy\",\n    \"fault\",\n    \"foggy\",\n    \"flout\",\n    \"carry\",\n    \"sneak\",\n    \"libel\",\n    \"waltz\",\n    \"aptly\",\n    \"piney\",\n    \"inept\",\n    \"aloud\",\n    \"photo\",\n    \"dream\",\n    \"stale\",\n    \"vomit\",\n    \"ombre\",\n    \"fanny\",\n    \"unite\",\n    \"snarl\",\n    \"baker\",\n    \"there\",\n    \"glyph\",\n    \"pooch\",\n    \"hippy\",\n    \"spell\",\n    \"folly\",\n    \"louse\",\n    \"gulch\",\n    \"vault\",\n    \"godly\",\n    \"threw\",\n    \"fleet\",\n    \"grave\",\n    \"inane\",\n    \"shock\",\n    \"crave\",\n    \"spite\",\n    \"valve\",\n    \"skimp\",\n    \"claim\",\n    \"rainy\",\n    \"musty\",\n    \"pique\",\n    \"daddy\",\n    \"quasi\",\n    \"arise\",\n    \"aging\",\n    \"valet\",\n    \"opium\",\n    \"avert\",\n    \"stuck\",\n    \"recut\",\n    \"mulch\",\n    \"genre\",\n    \"plume\",\n    \"rifle\",\n    \"count\",\n    \"incur\",\n    \"total\",\n    \"wrest\",\n    \"mocha\",\n    \"deter\",\n    \"study\",\n    \"lover\",\n    \"safer\",\n    \"rivet\",\n    \"funny\",\n    \"smoke\",\n    \"mound\",\n    \"undue\",\n    \"sedan\",\n    \"pagan\",\n    \"swine\",\n    \"guile\",\n    \"gusty\",\n    \"equip\",\n    \"tough\",\n    \"canoe\",\n    \"chaos\",\n    \"covet\",\n    \"human\",\n    \"udder\",\n    \"lunch\",\n    \"blast\",\n    \"stray\",\n    \"manga\",\n    \"melee\",\n    \"lefty\",\n    \"quick\",\n    \"paste\",\n    \"given\",\n    \"octet\",\n    \"risen\",\n    \"groan\",\n    \"leaky\",\n    \"grind\",\n    \"carve\",\n    \"loose\",\n    \"sadly\",\n    \"spilt\",\n    \"apple\",\n    \"slack\",\n    \"honey\",\n    \"final\",\n    \"sheen\",\n    \"eerie\",\n    \"minty\",\n    \"slick\",\n    \"derby\",\n    \"wharf\",\n    \"spelt\",\n    \"coach\",\n    \"erupt\",\n    \"singe\",\n    \"price\",\n    \"spawn\",\n    \"fairy\",\n    \"jiffy\",\n    \"filmy\",\n    \"stack\",\n    \"chose\",\n    \"sleep\",\n    \"ardor\",\n    \"nanny\",\n    \"niece\",\n    \"woozy\",\n    \"handy\",\n    \"grace\",\n    \"ditto\",\n    \"stank\",\n    \"cream\",\n    \"usual\",\n    \"diode\",\n    \"valor\",\n    \"angle\",\n    \"ninja\",\n    \"muddy\",\n    \"chase\",\n    \"reply\",\n    \"prone\",\n    \"spoil\",\n    \"heart\",\n    \"shade\",\n    \"diner\",\n    \"arson\",\n    \"onion\",\n    \"sleet\",\n    \"dowel\",\n    \"couch\",\n    \"palsy\",\n    \"bowel\",\n    \"smile\",\n    \"evoke\",\n    \"creek\",\n    \"lance\",\n    \"eagle\",\n    \"idiot\",\n    \"siren\",\n    \"built\",\n    \"embed\",\n    \"award\",\n    \"dross\",\n    \"annul\",\n    \"goody\",\n    \"frown\",\n    \"patio\",\n    \"laden\",\n    \"humid\",\n    \"elite\",\n    \"lymph\",\n    \"edify\",\n    \"might\",\n    \"reset\",\n    \"visit\",\n    \"gusto\",\n    \"purse\",\n    \"vapor\",\n    \"crock\",\n    \"write\",\n    \"sunny\",\n    \"loath\",\n    \"chaff\",\n    \"slide\",\n    \"queer\",\n    \"venom\",\n    \"stamp\",\n    \"sorry\",\n    \"still\",\n    \"acorn\",\n    \"aping\",\n    \"pushy\",\n    \"tamer\",\n    \"hater\",\n    \"mania\",\n    \"awoke\",\n    \"brawn\",\n    \"swift\",\n    \"exile\",\n    \"birch\",\n    \"lucky\",\n    \"freer\",\n    \"risky\",\n    \"ghost\",\n    \"plier\",\n    \"lunar\",\n    \"winch\",\n    \"snare\",\n    \"nurse\",\n    \"house\",\n    \"borax\",\n    \"nicer\",\n    \"lurch\",\n    \"exalt\",\n    \"about\",\n    \"savvy\",\n    \"toxin\",\n    \"tunic\",\n    \"pried\",\n    \"inlay\",\n    \"chump\",\n    \"lanky\",\n    \"cress\",\n    \"eater\",\n    \"elude\",\n    \"cycle\",\n    \"kitty\",\n    \"boule\",\n    \"moron\",\n    \"tenet\",\n    \"place\",\n    \"lobby\",\n    \"plush\",\n    \"vigil\",\n    \"index\",\n    \"blink\",\n    \"clung\",\n    \"qualm\",\n    \"croup\",\n    \"clink\",\n    \"juicy\",\n    \"stage\",\n    \"decay\",\n    \"nerve\",\n    \"flier\",\n    \"shaft\",\n    \"crook\",\n    \"clean\",\n    \"china\",\n    \"ridge\",\n    \"vowel\",\n    \"gnome\",\n    \"snuck\",\n    \"icing\",\n    \"spiny\",\n    \"rigor\",\n    \"snail\",\n    \"flown\",\n    \"rabid\",\n    \"prose\",\n    \"thank\",\n    \"poppy\",\n    \"budge\",\n    \"fiber\",\n    \"moldy\",\n    \"dowdy\",\n    \"kneel\",\n    \"track\",\n    \"caddy\",\n    \"quell\",\n    \"dumpy\",\n    \"paler\",\n    \"swore\",\n    \"rebar\",\n    \"scuba\",\n    \"splat\",\n    \"flyer\",\n    \"horny\",\n    \"mason\",\n    \"doing\",\n    \"ozone\",\n    \"amply\",\n    \"molar\",\n    \"ovary\",\n    \"beset\",\n    \"queue\",\n    \"cliff\",\n    \"magic\",\n    \"truce\",\n    \"sport\",\n    \"fritz\",\n    \"edict\",\n    \"twirl\",\n    \"verse\",\n    \"llama\",\n    \"eaten\",\n    \"range\",\n    \"whisk\",\n    \"hovel\",\n    \"rehab\",\n    \"macaw\",\n    \"sigma\",\n    \"spout\",\n    \"verve\",\n    \"sushi\",\n    \"dying\",\n    \"fetid\",\n    \"brain\",\n    \"buddy\",\n    \"thump\",\n    \"scion\",\n    \"candy\",\n    \"chord\",\n    \"basin\",\n    \"march\",\n    \"crowd\",\n    \"arbor\",\n    \"gayly\",\n    \"musky\",\n    \"stain\",\n    \"dally\",\n    \"bless\",\n    \"bravo\",\n    \"stung\",\n    \"title\",\n    \"ruler\",\n    \"kiosk\",\n    \"blond\",\n    \"ennui\",\n    \"layer\",\n    \"fluid\",\n    \"tatty\",\n    \"score\",\n    \"cutie\",\n    \"zebra\",\n    \"barge\",\n    \"matey\",\n    \"bluer\",\n    \"aider\",\n    \"shook\",\n    \"river\",\n    \"privy\",\n    \"betel\",\n    \"frisk\",\n    \"bongo\",\n    \"begun\",\n    \"azure\",\n    \"weave\",\n    \"genie\",\n    \"sound\",\n    \"glove\",\n    \"braid\",\n    \"scope\",\n    \"wryly\",\n    \"rover\",\n    \"assay\",\n    \"ocean\",\n    \"bloom\",\n    \"irate\",\n    \"later\",\n    \"woken\",\n    \"silky\",\n    \"wreck\",\n    \"dwelt\",\n    \"slate\",\n    \"smack\",\n    \"solid\",\n    \"amaze\",\n    \"hazel\",\n    \"wrist\",\n    \"jolly\",\n    \"globe\",\n    \"flint\",\n    \"rouse\",\n    \"civil\",\n    \"vista\",\n    \"relax\",\n    \"cover\",\n    \"alive\",\n    \"beech\",\n    \"jetty\",\n    \"bliss\",\n    \"vocal\",\n    \"often\",\n    \"dolly\",\n    \"eight\",\n    \"joker\",\n    \"since\",\n    \"event\",\n    \"ensue\",\n    \"shunt\",\n    \"diver\",\n    \"poser\",\n    \"worst\",\n    \"sweep\",\n    \"alley\",\n    \"creed\",\n    \"anime\",\n    \"leafy\",\n    \"bosom\",\n    \"dunce\",\n    \"stare\",\n    \"pudgy\",\n    \"waive\",\n    \"choir\",\n    \"stood\",\n    \"spoke\",\n    \"outgo\",\n    \"delay\",\n    \"bilge\",\n    \"ideal\",\n    \"clasp\",\n    \"seize\",\n    \"hotly\",\n    \"laugh\",\n    \"sieve\",\n    \"block\",\n    \"meant\",\n    \"grape\",\n    \"noose\",\n    \"hardy\",\n    \"shied\",\n    \"drawl\",\n    \"daisy\",\n    \"putty\",\n    \"strut\",\n    \"burnt\",\n    \"tulip\",\n    \"crick\",\n    \"idyll\",\n    \"vixen\",\n    \"furor\",\n    \"geeky\",\n    \"cough\",\n    \"naive\",\n    \"shoal\",\n    \"stork\",\n    \"bathe\",\n    \"aunty\",\n    \"check\",\n    \"prime\",\n    \"brass\",\n    \"outer\",\n    \"furry\",\n    \"razor\",\n    \"elect\",\n    \"evict\",\n    \"imply\",\n    \"demur\",\n    \"quota\",\n    \"haven\",\n    \"cavil\",\n    \"swear\",\n    \"crump\",\n    \"dough\",\n    \"gavel\",\n    \"wagon\",\n    \"salon\",\n    \"nudge\",\n    \"harem\",\n    \"pitch\",\n    \"sworn\",\n    \"pupil\",\n    \"excel\",\n    \"stony\",\n    \"cabin\",\n    \"unzip\",\n    \"queen\",\n    \"trout\",\n    \"polyp\",\n    \"earth\",\n    \"storm\",\n    \"until\",\n    \"taper\",\n    \"enter\",\n    \"child\",\n    \"adopt\",\n    \"minor\",\n    \"fatty\",\n    \"husky\",\n    \"brave\",\n    \"filet\",\n    \"slime\",\n    \"glint\",\n    \"tread\",\n    \"steal\",\n    \"regal\",\n    \"guest\",\n    \"every\",\n    \"murky\",\n    \"share\",\n    \"spore\",\n    \"hoist\",\n    \"buxom\",\n    \"inner\",\n    \"otter\",\n    \"dimly\",\n    \"level\",\n    \"sumac\",\n    \"donut\",\n    \"stilt\",\n    \"arena\",\n    \"sheet\",\n    \"scrub\",\n    \"fancy\",\n    \"slimy\",\n    \"pearl\",\n    \"silly\",\n    \"porch\",\n    \"dingo\",\n    \"sepia\",\n    \"amble\",\n    \"shady\",\n    \"bread\",\n    \"friar\",\n    \"reign\",\n    \"dairy\",\n    \"quill\",\n    \"cross\",\n    \"brood\",\n    \"tuber\",\n    \"shear\",\n    \"posit\",\n    \"blank\",\n    \"villa\",\n    \"shank\",\n    \"piggy\",\n    \"freak\",\n    \"which\",\n    \"among\",\n    \"fecal\",\n    \"shell\",\n    \"would\",\n    \"algae\",\n    \"large\",\n    \"rabbi\",\n    \"agony\",\n    \"amuse\",\n    \"bushy\",\n    \"copse\",\n    \"swoon\",\n    \"knife\",\n    \"pouch\",\n    \"ascot\",\n    \"plane\",\n    \"crown\",\n    \"urban\",\n    \"snide\",\n    \"relay\",\n    \"abide\",\n    \"viola\",\n    \"rajah\",\n    \"straw\",\n    \"dilly\",\n    \"crash\",\n    \"amass\",\n    \"third\",\n    \"trick\",\n    \"tutor\",\n    \"woody\",\n    \"blurb\",\n    \"grief\",\n    \"disco\",\n    \"where\",\n    \"sassy\",\n    \"beach\",\n    \"sauna\",\n    \"comic\",\n    \"clued\",\n    \"creep\",\n    \"caste\",\n    \"graze\",\n    \"snuff\",\n    \"frock\",\n    \"gonad\",\n    \"drunk\",\n    \"prong\",\n    \"lurid\",\n    \"steel\",\n    \"halve\",\n    \"buyer\",\n    \"vinyl\",\n    \"utile\",\n    \"smell\",\n    \"adage\",\n    \"worry\",\n    \"tasty\",\n    \"local\",\n    \"trade\",\n    \"finch\",\n    \"ashen\",\n    \"modal\",\n    \"gaunt\",\n    \"clove\",\n    \"enact\",\n    \"adorn\",\n    \"roast\",\n    \"speck\",\n    \"sheik\",\n    \"missy\",\n    \"grunt\",\n    \"snoop\",\n    \"party\",\n    \"touch\",\n    \"mafia\",\n    \"emcee\",\n    \"array\",\n    \"south\",\n    \"vapid\",\n    \"jelly\",\n    \"skulk\",\n    \"angst\",\n    \"tubal\",\n    \"lower\",\n    \"crest\",\n    \"sweat\",\n    \"cyber\",\n    \"adore\",\n    \"tardy\",\n    \"swami\",\n    \"notch\",\n    \"groom\",\n    \"roach\",\n    \"hitch\",\n    \"young\",\n    \"align\",\n    \"ready\",\n    \"frond\",\n    \"strap\",\n    \"puree\",\n    \"realm\",\n    \"venue\",\n    \"swarm\",\n    \"offer\",\n    \"seven\",\n    \"dryer\",\n    \"diary\",\n    \"dryly\",\n    \"drank\",\n    \"acrid\",\n    \"heady\",\n    \"theta\",\n    \"junto\",\n    \"pixie\",\n    \"quoth\",\n    \"bonus\",\n    \"shalt\",\n    \"penne\",\n    \"amend\",\n    \"datum\",\n    \"build\",\n    \"piano\",\n    \"shelf\",\n    \"lodge\",\n    \"suing\",\n    \"rearm\",\n    \"coral\",\n    \"ramen\",\n    \"worth\",\n    \"psalm\",\n    \"infer\",\n    \"overt\",\n    \"mayor\",\n    \"ovoid\",\n    \"glide\",\n    \"usage\",\n    \"poise\",\n    \"randy\",\n    \"chuck\",\n    \"prank\",\n    \"fishy\",\n    \"tooth\",\n    \"ether\",\n    \"drove\",\n    \"idler\",\n    \"swath\",\n    \"stint\",\n    \"while\",\n    \"begat\",\n    \"apply\",\n    \"slang\",\n    \"tarot\",\n    \"radar\",\n    \"credo\",\n    \"aware\",\n    \"canon\",\n    \"shift\",\n    \"timer\",\n    \"bylaw\",\n    \"serum\",\n    \"three\",\n    \"steak\",\n    \"iliac\",\n    \"shirk\",\n    \"blunt\",\n    \"puppy\",\n    \"penal\",\n    \"joist\",\n    \"bunny\",\n    \"shape\",\n    \"beget\",\n    \"wheel\",\n    \"adept\",\n    \"stunt\",\n    \"stole\",\n    \"topaz\",\n    \"chore\",\n    \"fluke\",\n    \"afoot\",\n    \"bloat\",\n    \"bully\",\n    \"dense\",\n    \"caper\",\n    \"sneer\",\n    \"boxer\",\n    \"jumbo\",\n    \"lunge\",\n    \"space\",\n    \"avail\",\n    \"short\",\n    \"slurp\",\n    \"loyal\",\n    \"flirt\",\n    \"pizza\",\n    \"conch\",\n    \"tempo\",\n    \"droop\",\n    \"plate\",\n    \"bible\",\n    \"plunk\",\n    \"afoul\",\n    \"savoy\",\n    \"steep\",\n    \"agile\",\n    \"stake\",\n    \"dwell\",\n    \"knave\",\n    \"beard\",\n    \"arose\",\n    \"motif\",\n    \"smash\",\n    \"broil\",\n    \"glare\",\n    \"shove\",\n    \"baggy\",\n    \"mammy\",\n    \"swamp\",\n    \"along\",\n    \"rugby\",\n    \"wager\",\n    \"quack\",\n    \"squat\",\n    \"snaky\",\n    \"debit\",\n    \"mange\",\n    \"skate\",\n    \"ninth\",\n    \"joust\",\n    \"tramp\",\n    \"spurn\",\n    \"medal\",\n    \"micro\",\n    \"rebel\",\n    \"flank\",\n    \"learn\",\n    \"nadir\",\n    \"maple\",\n    \"comfy\",\n    \"remit\",\n    \"gruff\",\n    \"ester\",\n    \"least\",\n    \"mogul\",\n    \"fetch\",\n    \"cause\",\n    \"oaken\",\n    \"aglow\",\n    \"meaty\",\n    \"gaffe\",\n    \"shyly\",\n    \"racer\",\n    \"prowl\",\n    \"thief\",\n    \"stern\",\n    \"poesy\",\n    \"rocky\",\n    \"tweet\",\n    \"waist\",\n    \"spire\",\n    \"grope\",\n    \"havoc\",\n    \"patsy\",\n    \"truly\",\n    \"forty\",\n    \"deity\",\n    \"uncle\",\n    \"swish\",\n    \"giver\",\n    \"preen\",\n    \"bevel\",\n    \"lemur\",\n    \"draft\",\n    \"slope\",\n    \"annoy\",\n    \"lingo\",\n    \"bleak\",\n    \"ditty\",\n    \"curly\",\n    \"cedar\",\n    \"dirge\",\n    \"grown\",\n    \"horde\",\n    \"drool\",\n    \"shuck\",\n    \"crypt\",\n    \"cumin\",\n    \"stock\",\n    \"gravy\",\n    \"locus\",\n    \"wider\",\n    \"breed\",\n    \"quite\",\n    \"chafe\",\n    \"cache\",\n    \"blimp\",\n    \"deign\",\n    \"fiend\",\n    \"logic\",\n    \"cheap\",\n    \"elide\",\n    \"rigid\",\n    \"false\",\n    \"renal\",\n    \"pence\",\n    \"rowdy\",\n    \"shoot\",\n    \"blaze\",\n    \"envoy\",\n    \"posse\",\n    \"brief\",\n    \"never\",\n    \"abort\",\n    \"mouse\",\n    \"mucky\",\n    \"sulky\",\n    \"fiery\",\n    \"media\",\n    \"trunk\",\n    \"yeast\",\n    \"clear\",\n    \"skunk\",\n    \"scalp\",\n    \"bitty\",\n    \"cider\",\n    \"koala\",\n    \"duvet\",\n    \"segue\",\n    \"creme\",\n    \"super\",\n    \"grill\",\n    \"after\",\n    \"owner\",\n    \"ember\",\n    \"reach\",\n    \"nobly\",\n    \"empty\",\n    \"speed\",\n    \"gipsy\",\n    \"recur\",\n    \"smock\",\n    \"dread\",\n    \"merge\",\n    \"burst\",\n    \"kappa\",\n    \"amity\",\n    \"shaky\",\n    \"hover\",\n    \"carol\",\n    \"snort\",\n    \"synod\",\n    \"faint\",\n    \"haunt\",\n    \"flour\",\n    \"chair\",\n    \"detox\",\n    \"shrew\",\n    \"tense\",\n    \"plied\",\n    \"quark\",\n    \"burly\",\n    \"novel\",\n    \"waxen\",\n    \"stoic\",\n    \"jerky\",\n    \"blitz\",\n    \"beefy\",\n    \"lyric\",\n    \"hussy\",\n    \"towel\",\n    \"quilt\",\n    \"below\",\n    \"bingo\",\n    \"wispy\",\n    \"brash\",\n    \"scone\",\n    \"toast\",\n    \"easel\",\n    \"saucy\",\n    \"value\",\n    \"spice\",\n    \"honor\",\n    \"route\",\n    \"sharp\",\n    \"bawdy\",\n    \"radii\",\n    \"skull\",\n    \"phony\",\n    \"issue\",\n    \"lager\",\n    \"swell\",\n    \"urine\",\n    \"gassy\",\n    \"trial\",\n    \"flora\",\n    \"upper\",\n    \"latch\",\n    \"wight\",\n    \"brick\",\n    \"retry\",\n    \"holly\",\n    \"decal\",\n    \"grass\",\n    \"shack\",\n    \"dogma\",\n    \"mover\",\n    \"defer\",\n    \"sober\",\n    \"optic\",\n    \"crier\",\n    \"vying\",\n    \"nomad\",\n    \"flute\",\n    \"hippo\",\n    \"shark\",\n    \"drier\",\n    \"obese\",\n    \"bugle\",\n    \"tawny\",\n    \"chalk\",\n    \"feast\",\n    \"ruddy\",\n    \"pedal\",\n    \"scarf\",\n    \"cruel\",\n    \"bleat\",\n    \"tidal\",\n    \"slush\",\n    \"semen\",\n    \"windy\",\n    \"dusty\",\n    \"sally\",\n    \"igloo\",\n    \"nerdy\",\n    \"jewel\",\n    \"shone\",\n    \"whale\",\n    \"hymen\",\n    \"abuse\",\n    \"fugue\",\n    \"elbow\",\n    \"crumb\",\n    \"pansy\",\n    \"welsh\",\n    \"syrup\",\n    \"terse\",\n    \"suave\",\n    \"gamut\",\n    \"swung\",\n    \"drake\",\n    \"freed\",\n    \"afire\",\n    \"shirt\",\n    \"grout\",\n    \"oddly\",\n    \"tithe\",\n    \"plaid\",\n    \"dummy\",\n    \"broom\",\n    \"blind\",\n    \"torch\",\n    \"enemy\",\n    \"again\",\n    \"tying\",\n    \"pesky\",\n    \"alter\",\n    \"gazer\",\n    \"noble\",\n    \"ethos\",\n    \"bride\",\n    \"extol\",\n    \"decor\",\n    \"hobby\",\n    \"beast\",\n    \"idiom\",\n    \"utter\",\n    \"these\",\n    \"sixth\",\n    \"alarm\",\n    \"erase\",\n    \"elegy\",\n    \"spunk\",\n    \"piper\",\n    \"scaly\",\n    \"scold\",\n    \"hefty\",\n    \"chick\",\n    \"sooty\",\n    \"canal\",\n    \"whiny\",\n    \"slash\",\n    \"quake\",\n    \"joint\",\n    \"swept\",\n    \"prude\",\n    \"heavy\",\n    \"wield\",\n    \"femme\",\n    \"lasso\",\n    \"maize\",\n    \"shale\",\n    \"screw\",\n    \"spree\",\n    \"smoky\",\n    \"whiff\",\n    \"scent\",\n    \"glade\",\n    \"spent\",\n    \"prism\",\n    \"stoke\",\n    \"riper\",\n    \"orbit\",\n    \"cocoa\",\n    \"guilt\",\n    \"humus\",\n    \"shush\",\n    \"table\",\n    \"smirk\",\n    \"wrong\",\n    \"noisy\",\n    \"alert\",\n    \"shiny\",\n    \"elate\",\n    \"resin\",\n    \"whole\",\n    \"hunch\",\n    \"pixel\",\n    \"polar\",\n    \"hotel\",\n    \"sword\",\n    \"cleat\",\n    \"mango\",\n    \"rumba\",\n    \"puffy\",\n    \"filly\",\n    \"billy\",\n    \"leash\",\n    \"clout\",\n    \"dance\",\n    \"ovate\",\n    \"facet\",\n    \"chili\",\n    \"paint\",\n    \"liner\",\n    \"curio\",\n    \"salty\",\n    \"audio\",\n    \"snake\",\n    \"fable\",\n    \"cloak\",\n    \"navel\",\n    \"spurt\",\n    \"pesto\",\n    \"balmy\",\n    \"flash\",\n    \"unwed\",\n    \"early\",\n    \"churn\",\n    \"weedy\",\n    \"stump\",\n    \"lease\",\n    \"witty\",\n    \"wimpy\",\n    \"spoof\",\n    \"saner\",\n    \"blend\",\n    \"salsa\",\n    \"thick\",\n    \"warty\",\n    \"manic\",\n    \"blare\",\n    \"squib\",\n    \"spoon\",\n    \"probe\",\n    \"crepe\",\n    \"knack\",\n    \"force\",\n    \"debut\",\n    \"order\",\n    \"haste\",\n    \"teeth\",\n    \"agent\",\n    \"widen\",\n    \"icily\",\n    \"slice\",\n    \"ingot\",\n    \"clash\",\n    \"juror\",\n    \"blood\",\n    \"abode\",\n    \"throw\",\n    \"unity\",\n    \"pivot\",\n    \"slept\",\n    \"troop\",\n    \"spare\",\n    \"sewer\",\n    \"parse\",\n    \"morph\",\n    \"cacti\",\n    \"tacky\",\n    \"spool\",\n    \"demon\",\n    \"moody\",\n    \"annex\",\n    \"begin\",\n    \"fuzzy\",\n    \"patch\",\n    \"water\",\n    \"lumpy\",\n    \"admin\",\n    \"omega\",\n    \"limit\",\n    \"tabby\",\n    \"macho\",\n    \"aisle\",\n    \"skiff\",\n    \"basis\",\n    \"plank\",\n    \"verge\",\n    \"botch\",\n    \"crawl\",\n    \"lousy\",\n    \"slain\",\n    \"cubic\",\n    \"raise\",\n    \"wrack\",\n    \"guide\",\n    \"foist\",\n    \"cameo\",\n    \"under\",\n    \"actor\",\n    \"revue\",\n    \"fraud\",\n    \"harpy\",\n    \"scoop\",\n    \"climb\",\n    \"refer\",\n    \"olden\",\n    \"clerk\",\n    \"debar\",\n    \"tally\",\n    \"ethic\",\n    \"cairn\",\n    \"tulle\",\n    \"ghoul\",\n    \"hilly\",\n    \"crude\",\n    \"apart\",\n    \"scale\",\n    \"older\",\n    \"plain\",\n    \"sperm\",\n    \"briny\",\n    \"abbot\",\n    \"rerun\",\n    \"quest\",\n    \"crisp\",\n    \"bound\",\n    \"befit\",\n    \"drawn\",\n    \"suite\",\n    \"itchy\",\n    \"cheer\",\n    \"bagel\",\n    \"guess\",\n    \"broad\",\n    \"axiom\",\n    \"chard\",\n    \"caput\",\n    \"leant\",\n    \"harsh\",\n    \"curse\",\n    \"proud\",\n    \"swing\",\n    \"opine\",\n    \"taste\",\n    \"lupus\",\n    \"gumbo\",\n    \"miner\",\n    \"green\",\n    \"chasm\",\n    \"lipid\",\n    \"topic\",\n    \"armor\",\n    \"brush\",\n    \"crane\",\n    \"mural\",\n    \"abled\",\n    \"habit\",\n    \"bossy\",\n    \"maker\",\n    \"dusky\",\n    \"dizzy\",\n    \"lithe\",\n    \"brook\",\n    \"jazzy\",\n    \"fifty\",\n    \"sense\",\n    \"giant\",\n    \"surly\",\n    \"legal\",\n    \"fatal\",\n    \"flunk\",\n    \"began\",\n    \"prune\",\n    \"small\",\n    \"slant\",\n    \"scoff\",\n    \"torus\",\n    \"ninny\",\n    \"covey\",\n    \"viper\",\n    \"taken\",\n    \"moral\",\n    \"vogue\",\n    \"owing\",\n    \"token\",\n    \"entry\",\n    \"booth\",\n    \"voter\",\n    \"chide\",\n    \"elfin\",\n    \"ebony\",\n    \"neigh\",\n    \"minim\",\n    \"melon\",\n    \"kneed\",\n    \"decoy\",\n    \"voila\",\n    \"ankle\",\n    \"arrow\",\n    \"mushy\",\n    \"tribe\",\n    \"cease\",\n    \"eager\",\n    \"birth\",\n    \"graph\",\n    \"odder\",\n    \"terra\",\n    \"weird\",\n    \"tried\",\n    \"clack\",\n    \"color\",\n    \"rough\",\n    \"weigh\",\n    \"uncut\",\n    \"ladle\",\n    \"strip\",\n    \"craft\",\n    \"minus\",\n    \"dicey\",\n    \"titan\",\n    \"lucid\",\n    \"vicar\",\n    \"dress\",\n    \"ditch\",\n    \"gypsy\",\n    \"pasta\",\n    \"taffy\",\n    \"flame\",\n    \"swoop\",\n    \"aloof\",\n    \"sight\",\n    \"broke\",\n    \"teary\",\n    \"chart\",\n    \"sixty\",\n    \"wordy\",\n    \"sheer\",\n    \"leper\",\n    \"nosey\",\n    \"bulge\",\n    \"savor\",\n    \"clamp\",\n    \"funky\",\n    \"foamy\",\n    \"toxic\",\n    \"brand\",\n    \"plumb\",\n    \"dingy\",\n    \"butte\",\n    \"drill\",\n    \"tripe\",\n    \"bicep\",\n    \"tenor\",\n    \"krill\",\n    \"worse\",\n    \"drama\",\n    \"hyena\",\n    \"think\",\n    \"ratio\",\n    \"cobra\",\n    \"basil\",\n    \"scrum\",\n    \"bused\",\n    \"phone\",\n    \"court\",\n    \"camel\",\n    \"proof\",\n    \"heard\",\n    \"angel\",\n    \"petal\",\n    \"pouty\",\n    \"throb\",\n    \"maybe\",\n    \"fetal\",\n    \"sprig\",\n    \"spine\",\n    \"shout\",\n    \"cadet\",\n    \"macro\",\n    \"dodgy\",\n    \"satyr\",\n    \"rarer\",\n    \"binge\",\n    \"trend\",\n    \"nutty\",\n    \"leapt\",\n    \"amiss\",\n    \"split\",\n    \"myrrh\",\n    \"width\",\n    \"sonar\",\n    \"tower\",\n    \"baron\",\n    \"fever\",\n    \"waver\",\n    \"spark\",\n    \"belie\",\n    \"sloop\",\n    \"expel\",\n    \"smote\",\n    \"baler\",\n    \"above\",\n    \"north\",\n    \"wafer\",\n    \"scant\",\n    \"frill\",\n    \"awash\",\n    \"snack\",\n    \"scowl\",\n    \"frail\",\n    \"drift\",\n    \"limbo\",\n    \"fence\",\n    \"motel\",\n    \"ounce\",\n    \"wreak\",\n    \"revel\",\n    \"talon\",\n    \"prior\",\n    \"knelt\",\n    \"cello\",\n    \"flake\",\n    \"debug\",\n    \"anode\",\n    \"crime\",\n    \"salve\",\n    \"scout\",\n    \"imbue\",\n    \"pinky\",\n    \"stave\",\n    \"vague\",\n    \"chock\",\n    \"fight\",\n    \"video\",\n    \"stone\",\n    \"teach\",\n    \"cleft\",\n    \"frost\",\n    \"prawn\",\n    \"booty\",\n    \"twist\",\n    \"apnea\",\n    \"stiff\",\n    \"plaza\",\n    \"ledge\",\n    \"tweak\",\n    \"board\",\n    \"grant\",\n    \"medic\",\n    \"bacon\",\n    \"cable\",\n    \"brawl\",\n    \"slunk\",\n    \"raspy\",\n    \"forum\",\n    \"drone\",\n    \"women\",\n    \"mucus\",\n    \"boast\",\n    \"toddy\",\n    \"coven\",\n    \"tumor\",\n    \"truer\",\n    \"wrath\",\n    \"stall\",\n    \"steam\",\n    \"axial\",\n    \"purer\",\n    \"daily\",\n    \"trail\",\n    \"niche\",\n    \"mealy\",\n    \"juice\",\n    \"nylon\",\n    \"plump\",\n    \"merry\",\n    \"flail\",\n    \"papal\",\n    \"wheat\",\n    \"berry\",\n    \"cower\",\n    \"erect\",\n    \"brute\",\n    \"leggy\",\n    \"snipe\",\n    \"sinew\",\n    \"skier\",\n    \"penny\",\n    \"jumpy\",\n    \"rally\",\n    \"umbra\",\n    \"scary\",\n    \"modem\",\n    \"gross\",\n    \"avian\",\n    \"greed\",\n    \"satin\",\n    \"tonic\",\n    \"parka\",\n    \"sniff\",\n    \"livid\",\n    \"stark\",\n    \"trump\",\n    \"giddy\",\n    \"reuse\",\n    \"taboo\",\n    \"avoid\",\n    \"quote\",\n    \"devil\",\n    \"liken\",\n    \"gloss\",\n    \"gayer\",\n    \"beret\",\n    \"noise\",\n    \"gland\",\n    \"dealt\",\n    \"sling\",\n    \"rumor\",\n    \"opera\",\n    \"thigh\",\n    \"tonga\",\n    \"flare\",\n    \"wound\",\n    \"white\",\n    \"bulky\",\n    \"etude\",\n    \"horse\",\n    \"circa\",\n    \"paddy\",\n    \"inbox\",\n    \"fizzy\",\n    \"grain\",\n    \"exert\",\n    \"surge\",\n    \"gleam\",\n    \"belle\",\n    \"salvo\",\n    \"crush\",\n    \"fruit\",\n    \"sappy\",\n    \"taker\",\n    \"tract\",\n    \"ovine\",\n    \"spiky\",\n    \"frank\",\n    \"reedy\",\n    \"filth\",\n    \"spasm\",\n    \"heave\",\n    \"mambo\",\n    \"right\",\n    \"clank\",\n    \"trust\",\n    \"lumen\",\n    \"borne\",\n    \"spook\",\n    \"sauce\",\n    \"amber\",\n    \"lathe\",\n    \"carat\",\n    \"corer\",\n    \"dirty\",\n    \"slyly\",\n    \"affix\",\n    \"alloy\",\n    \"taint\",\n    \"sheep\",\n    \"kinky\",\n    \"wooly\",\n    \"mauve\",\n    \"flung\",\n    \"yacht\",\n    \"fried\",\n    \"quail\",\n    \"brunt\",\n    \"grimy\",\n    \"curvy\",\n    \"cagey\",\n    \"rinse\",\n    \"deuce\",\n    \"state\",\n    \"grasp\",\n    \"milky\",\n    \"bison\",\n    \"graft\",\n    \"sandy\",\n    \"baste\",\n    \"flask\",\n    \"hedge\",\n    \"girly\",\n    \"swash\",\n    \"boney\",\n    \"coupe\",\n    \"endow\",\n    \"abhor\",\n    \"welch\",\n    \"blade\",\n    \"tight\",\n    \"geese\",\n    \"miser\",\n    \"mirth\",\n    \"cloud\",\n    \"cabal\",\n    \"leech\",\n    \"close\",\n    \"tenth\",\n    \"pecan\",\n    \"droit\",\n    \"grail\",\n    \"clone\",\n    \"guise\",\n    \"ralph\",\n    \"tango\",\n    \"biddy\",\n    \"smith\",\n    \"mower\",\n    \"payee\",\n    \"serif\",\n    \"drape\",\n    \"fifth\",\n    \"spank\",\n    \"glaze\",\n    \"allot\",\n    \"truck\",\n    \"kayak\",\n    \"virus\",\n    \"testy\",\n    \"tepee\",\n    \"fully\",\n    \"zonal\",\n    \"metro\",\n    \"curry\",\n    \"grand\",\n    \"banjo\",\n    \"axion\",\n    \"bezel\",\n    \"occur\",\n    \"chain\",\n    \"nasal\",\n    \"gooey\",\n    \"filer\",\n    \"brace\",\n    \"allay\",\n    \"pubic\",\n    \"raven\",\n    \"plead\",\n    \"gnash\",\n    \"flaky\",\n    \"munch\",\n    \"dully\",\n    \"eking\",\n    \"thing\",\n    \"slink\",\n    \"hurry\",\n    \"theft\",\n    \"shorn\",\n    \"pygmy\",\n    \"ranch\",\n    \"wring\",\n    \"lemon\",\n    \"shore\",\n    \"mamma\",\n    \"froze\",\n    \"newer\",\n    \"style\",\n    \"moose\",\n    \"antic\",\n    \"drown\",\n    \"vegan\",\n    \"chess\",\n    \"guppy\",\n    \"union\",\n    \"lever\",\n    \"lorry\",\n    \"image\",\n    \"cabby\",\n    \"druid\",\n    \"exact\",\n    \"truth\",\n    \"dopey\",\n    \"spear\",\n    \"cried\",\n    \"chime\",\n    \"crony\",\n    \"stunk\",\n    \"timid\",\n    \"batch\",\n    \"gauge\",\n    \"rotor\",\n    \"crack\",\n    \"curve\",\n    \"latte\",\n    \"witch\",\n    \"bunch\",\n    \"repel\",\n    \"anvil\",\n    \"soapy\",\n    \"meter\",\n    \"broth\",\n    \"madly\",\n    \"dried\",\n    \"scene\",\n    \"known\",\n    \"magma\",\n    \"roost\",\n    \"woman\",\n    \"thong\",\n    \"punch\",\n    \"pasty\",\n    \"downy\",\n    \"knead\",\n    \"whirl\",\n    \"rapid\",\n    \"clang\",\n    \"anger\",\n    \"drive\",\n    \"goofy\",\n    \"email\",\n    \"music\",\n    \"stuff\",\n    \"bleep\",\n    \"rider\",\n    \"mecca\",\n    \"folio\",\n    \"setup\",\n    \"verso\",\n    \"quash\",\n    \"fauna\",\n    \"gummy\",\n    \"happy\",\n    \"newly\",\n    \"fussy\",\n    \"relic\",\n    \"guava\",\n    \"ratty\",\n    \"fudge\",\n    \"femur\",\n    \"chirp\",\n    \"forte\",\n    \"alibi\",\n    \"whine\",\n    \"petty\",\n    \"golly\",\n    \"plait\",\n    \"fleck\",\n    \"felon\",\n    \"gourd\",\n    \"brown\",\n    \"thrum\",\n    \"ficus\",\n    \"stash\",\n    \"decry\",\n    \"wiser\",\n    \"junta\",\n    \"visor\",\n    \"daunt\",\n    \"scree\",\n    \"impel\",\n    \"await\",\n    \"press\",\n    \"whose\",\n    \"turbo\",\n    \"stoop\",\n    \"speak\",\n    \"mangy\",\n    \"eying\",\n    \"inlet\",\n    \"crone\",\n    \"pulse\",\n    \"mossy\",\n    \"staid\",\n    \"hence\",\n    \"pinch\",\n    \"teddy\",\n    \"sully\",\n    \"snore\",\n    \"ripen\",\n    \"snowy\",\n    \"attic\",\n    \"going\",\n    \"leach\",\n    \"mouth\",\n    \"hound\",\n    \"clump\",\n    \"tonal\",\n    \"bigot\",\n    \"peril\",\n    \"piece\",\n    \"blame\",\n    \"haute\",\n    \"spied\",\n    \"undid\",\n    \"intro\",\n    \"basal\",\n    \"shine\",\n    \"gecko\",\n    \"rodeo\",\n    \"guard\",\n    \"steer\",\n    \"loamy\",\n    \"scamp\",\n    \"scram\",\n    \"manly\",\n    \"hello\",\n    \"vaunt\",\n    \"organ\",\n    \"feral\",\n    \"knock\",\n    \"extra\",\n    \"condo\",\n    \"adapt\",\n    \"willy\",\n    \"polka\",\n    \"rayon\",\n    \"skirt\",\n    \"faith\",\n    \"torso\",\n    \"match\",\n    \"mercy\",\n    \"tepid\",\n    \"sleek\",\n    \"riser\",\n    \"twixt\",\n    \"peace\",\n    \"flush\",\n    \"catty\",\n    \"login\",\n    \"eject\",\n    \"roger\",\n    \"rival\",\n    \"untie\",\n    \"refit\",\n    \"aorta\",\n    \"adult\",\n    \"judge\",\n    \"rower\",\n    \"artsy\",\n    \"rural\",\n    \"shave\"\n];\nvar DATE_OFFSET = new Date(2021, 5, 19);\nfunction getSolutionForDate(date) {\n    if (date === void 0) { date = new Date(); }\n    var index = getDateDiffInDays(date, DATE_OFFSET);\n    return SOLUTIONS[index];\n}\nfunction getDateDiffInDays(a, b) {\n    return Math.floor((a.getTime() - b.getTime()) / (1000 * 3600 * 24));\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/WORD_LIST.ts?");

/***/ }),

/***/ "./src/alternate-screen.ts":
/*!*********************************!*\
  !*** ./src/alternate-screen.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showAlternateScreen\": () => (/* binding */ showAlternateScreen),\n/* harmony export */   \"hideAlternateScreen\": () => (/* binding */ hideAlternateScreen)\n/* harmony export */ });\nfunction showAlternateScreen() {\n    process.stdout.write(Buffer.from([0x1b, 0x5b, 0x3f, 0x31, 0x30, 0x34, 0x39, 0x68]));\n}\nfunction hideAlternateScreen() {\n    process.stdout.write(Buffer.from([0x1b, 0x5b, 0x3f, 0x31, 0x30, 0x34, 0x39, 0x6c]));\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/alternate-screen.ts?");

/***/ }),

/***/ "./src/date-picker.ts":
/*!****************************!*\
  !*** ./src/date-picker.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"promptDatePicker\": () => (/* binding */ promptDatePicker)\n/* harmony export */ });\n/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dialog */ \"./src/dialog.ts\");\n/* harmony import */ var boxen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! boxen */ \"./node_modules/boxen/index.js\");\n/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chalk */ \"./node_modules/chalk/source/index.js\");\n\n\n\nfunction promptDatePicker() {\n    return new Promise(function (resolve) {\n        var focusedComponentIndex = 0;\n        var focusedButtonIndex = 1;\n        var dateText = \"\";\n        var validDate = false;\n        function getDateComponents() {\n            return [\n                dateText.substring(0, 2).padEnd(2, \"_\"),\n                dateText.substring(2, 4).padEnd(2, \"_\"),\n                dateText.substring(4, 8).padEnd(4, \"_\")\n            ];\n        }\n        function renderSelectedDateText() {\n            return getDateComponents().map(function (c) { return chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].blue.underline(c); }).join(\"/\");\n        }\n        function formatDate() {\n            return getDateComponents().join(\"/\");\n        }\n        function cleanup() {\n            process.stdin.removeListener('data', handleKeyPressed);\n        }\n        function validateDate() {\n            validDate = dateText.length === 8;\n        }\n        function handleKeyPressed(key) {\n            switch (key) {\n                case \"\\u001b[A\":\n                    if (focusedComponentIndex > 0) {\n                        focusedComponentIndex = 0;\n                        render();\n                    }\n                    break;\n                case \"\\u001b[B\":\n                    if (focusedComponentIndex == 0) {\n                        focusedComponentIndex = focusedButtonIndex;\n                        render();\n                    }\n                    break;\n                case \"\\u001b[C\":\n                    if (focusedComponentIndex == 1) {\n                        focusedComponentIndex = 2;\n                        focusedButtonIndex = 2;\n                        render();\n                    }\n                    break;\n                case \"\\u001b[D\":\n                    if (focusedComponentIndex == 2) {\n                        focusedComponentIndex = 1;\n                        focusedButtonIndex = 1;\n                        render();\n                    }\n                    break;\n                case \"\\r\":\n                    if (focusedComponentIndex == 1) {\n                        cleanup();\n                        resolve(null);\n                    }\n                    else if (validDate) {\n                        cleanup();\n                        resolve(new Date(formatDate()));\n                    }\n                    break;\n                case \"\\x7F\":\n                    if (focusedComponentIndex == 0) {\n                        dateText.substring(0, Math.max(dateText.length - 1, 0));\n                        render();\n                    }\n                    break;\n                default:\n                    var numberValue = Number(key);\n                    if (numberValue >= 0 && numberValue <= 9 && dateText.length < 8) {\n                        dateText += key;\n                        validateDate();\n                        render();\n                    }\n            }\n        }\n        function renderButton(text, focused, disabled) {\n            if (disabled === void 0) { disabled = false; }\n            var func = chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n            if (focused) {\n                func = func.blue.underline;\n            }\n            if (disabled) {\n                func = func.gray;\n            }\n            return func(text);\n        }\n        function render() {\n            console.clear();\n            (0,_dialog__WEBPACK_IMPORTED_MODULE_0__.printCentered)((0,boxen__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n                focusedComponentIndex == 0 ? renderSelectedDateText() : formatDate(),\n                \"\".concat(renderButton(\"cancel\", focusedComponentIndex == 1), \"  \").concat(renderButton(\"ok\", focusedComponentIndex == 2, !validDate))\n            ].join(\"\\n\"), {\n                title: chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].green(\"Pick a Date\"),\n                borderColor: \"yellow\",\n                titleAlignment: \"center\",\n                textAlignment: \"center\",\n                padding: {\n                    top: 0,\n                    bottom: 0,\n                    left: 1,\n                    right: 1\n                },\n            }));\n        }\n        process.stdin.on('data', handleKeyPressed);\n        render();\n    });\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/date-picker.ts?");

/***/ }),

/***/ "./src/dialog.ts":
/*!***********************!*\
  !*** ./src/dialog.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printCentered\": () => (/* binding */ printCentered),\n/* harmony export */   \"promptCentered\": () => (/* binding */ promptCentered),\n/* harmony export */   \"promptCenteredActionDialog\": () => (/* binding */ promptCenteredActionDialog)\n/* harmony export */ });\n/* harmony import */ var string_width__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\");\n/* harmony import */ var boxen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! boxen */ \"./node_modules/boxen/index.js\");\n/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chalk */ \"./node_modules/chalk/source/index.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nfunction printCentered(text) {\n    console.clear();\n    var lines = text.split(/\\n/g);\n    var _a = [Math.trunc(process.stdout.columns / 2), Math.trunc(process.stdout.rows / 2)], termCenterX = _a[0], termCenterY = _a[1];\n    var promptCenterY = Math.trunc(lines.length / 2);\n    var promptCenterX = Math.trunc(Math.max.apply(Math, lines\n        .map(function (x) { return (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(x); })) / 2);\n    var startY = termCenterY - promptCenterY;\n    // not sure why but we have to divide by 2 twice\n    var startX = termCenterX - Math.trunc(promptCenterX / 2);\n    lines.forEach(function (line, index) {\n        process.stdout.cursorTo(startX, startY + index);\n        process.stdout.write(line);\n    });\n}\nfunction promptCentered(title, options) {\n    return new Promise(function (resolve) {\n        // checks\n        if (options.length == 0)\n            throw \"At least one option must be provided\";\n        // vars\n        var selectedOptionIndex = 0;\n        // functions\n        var render = function () { return renderPromptCentered(title, transformOptions()); };\n        function cleanup() {\n            process.stdout.removeListener('resize', render);\n            process.stdin.removeListener('data', handleKeyPress);\n        }\n        function handleKeyPress(key) {\n            switch (key) {\n                case \"\\u001b[A\":\n                    selectedOptionIndex = Math.max(0, selectedOptionIndex - 1);\n                    render();\n                    break;\n                case \"\\u001b[B\":\n                    selectedOptionIndex = Math.min(options.length - 1, selectedOptionIndex + 1);\n                    render();\n                    break;\n                case \"\\r\":\n                    cleanup();\n                    resolve([options[selectedOptionIndex], selectedOptionIndex]);\n                    break;\n            }\n        }\n        function transformUnselectedOption(option) {\n            return \"  \".concat(option);\n        }\n        function transformSelectedOption(option) {\n            return \"\".concat(chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].blue('❯'), \" \").concat(chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].cyan.underline(option));\n        }\n        function transformOptions() {\n            return options\n                .map(function (option, index) { return index === selectedOptionIndex ? transformSelectedOption(option) : transformUnselectedOption(option); });\n        }\n        // setup\n        process.stdout.on('resize', render);\n        process.stdin.on('data', handleKeyPress);\n        render();\n    });\n}\nfunction promptCenteredActionDialog(title) {\n    var options = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        options[_i - 1] = arguments[_i];\n    }\n    return __awaiter(this, void 0, void 0, function () {\n        var optionsText, _a, resultIndex;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    optionsText = options.map(function (x) { return x.text; });\n                    return [4 /*yield*/, promptCentered(title, optionsText)];\n                case 1:\n                    _a = _b.sent(), resultIndex = _a[1];\n                    return [4 /*yield*/, Promise.resolve().then(function () { return options[resultIndex].action(); })];\n                case 2: return [2 /*return*/, _b.sent()];\n            }\n        });\n    });\n}\nfunction renderPromptCentered(title, options) {\n    printCentered((0,boxen__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.join(\"\\n\"), {\n        title: chalk__WEBPACK_IMPORTED_MODULE_2__[\"default\"].green(title),\n        titleAlignment: \"center\",\n        borderStyle: 'round',\n        padding: {\n            top: 0,\n            bottom: 0,\n            left: 2,\n            right: 2,\n        },\n        borderColor: \"yellow\"\n    }));\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/dialog.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _setup_process_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup-process-hooks */ \"./src/setup-process-hooks.ts\");\n/* harmony import */ var _dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dialog */ \"./src/dialog.ts\");\n/* harmony import */ var _date_picker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date-picker */ \"./src/date-picker.ts\");\n/* harmony import */ var _WORD_LIST__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WORD_LIST */ \"./src/WORD_LIST.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\nmain().then();\nfunction main() {\n    return __awaiter(this, void 0, void 0, function () {\n        var result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0,_setup_process_hooks__WEBPACK_IMPORTED_MODULE_0__.setupProcessHooks)();\n                    return [4 /*yield*/, mainScreen()];\n                case 1:\n                    result = _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction startWordle(solution) {\n    console.clear();\n    console.log(solution);\n}\nfunction startTodaysWordle() {\n    startWordle((0,_WORD_LIST__WEBPACK_IMPORTED_MODULE_3__.getSolutionForDate)());\n}\nfunction startRandomWordle() {\n    startWordle(_WORD_LIST__WEBPACK_IMPORTED_MODULE_3__.SOLUTIONS[Math.floor(Math.random() * _WORD_LIST__WEBPACK_IMPORTED_MODULE_3__.SOLUTIONS.length)]);\n}\nfunction showDateChooser() {\n    return __awaiter(this, void 0, void 0, function () {\n        var result, solutionForDate;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, (0,_date_picker__WEBPACK_IMPORTED_MODULE_2__.promptDatePicker)()];\n                case 1:\n                    result = _a.sent();\n                    if (!(result == null)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, mainScreen()];\n                case 2: return [2 /*return*/, _a.sent()];\n                case 3:\n                    solutionForDate = (0,_WORD_LIST__WEBPACK_IMPORTED_MODULE_3__.getSolutionForDate)(result);\n                    if (!(solutionForDate == null)) return [3 /*break*/, 5];\n                    return [4 /*yield*/, (0,_dialog__WEBPACK_IMPORTED_MODULE_1__.promptCenteredActionDialog)(\"Invalid Date\", {\n                            text: \"Ok\",\n                            action: showDateChooser\n                        })];\n                case 4: return [2 /*return*/, _a.sent()];\n                case 5:\n                    startWordle(solutionForDate);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction exit() {\n    process.exit(0);\n}\nfunction mainScreen() {\n    return (0,_dialog__WEBPACK_IMPORTED_MODULE_1__.promptCenteredActionDialog)(\"Wordle-CLI\", {\n        text: \"Today's wordle\",\n        action: startTodaysWordle\n    }, {\n        text: \"Random Wordle\",\n        action: startRandomWordle\n    }, {\n        text: \"Specific Wordle\",\n        action: showDateChooser\n    }, {\n        text: \"Exit\",\n        action: exit\n    });\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/index.ts?");

/***/ }),

/***/ "./src/program-argument-parsing.ts":
/*!*****************************************!*\
  !*** ./src/program-argument-parsing.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseArguments\": () => (/* binding */ parseArguments)\n/* harmony export */ });\nfunction parseArguments(args) {\n    if (args === void 0) { args = process.argv.slice(2); }\n    return {\n        disableBackground: args.includes(\"--disable-background\")\n    };\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/program-argument-parsing.ts?");

/***/ }),

/***/ "./src/setup-process-hooks.ts":
/*!************************************!*\
  !*** ./src/setup-process-hooks.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cursor\": () => (/* binding */ cursor),\n/* harmony export */   \"programArgs\": () => (/* binding */ programArgs),\n/* harmony export */   \"setupProcessHooks\": () => (/* binding */ setupProcessHooks)\n/* harmony export */ });\n/* harmony import */ var _alternate_screen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alternate-screen */ \"./src/alternate-screen.ts\");\n/* harmony import */ var ansi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ansi */ \"./node_modules/ansi/lib/ansi.js\");\n/* harmony import */ var ansi__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ansi__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _program_argument_parsing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./program-argument-parsing */ \"./src/program-argument-parsing.ts\");\n\n\n\nvar INTERRUPT_SIGNAL = '\\u0003';\nvar cursor = ansi__WEBPACK_IMPORTED_MODULE_1___default()(process.stdout);\nvar programArgs = (0,_program_argument_parsing__WEBPACK_IMPORTED_MODULE_2__.parseArguments)();\nfunction setupProcessHooks() {\n    (0,_alternate_screen__WEBPACK_IMPORTED_MODULE_0__.showAlternateScreen)();\n    process.stdin.setEncoding('utf8');\n    process.stdin.setRawMode(true);\n    process.stdin.resume();\n    cursor.hide();\n    if (!programArgs.disableBackground)\n        cursor.bg.black();\n    process.on('exit', cleanup);\n    process.stdin.on('data', function (b) {\n        if (b === INTERRUPT_SIGNAL)\n            process.exit(0);\n    });\n}\nfunction cleanup() {\n    (0,_alternate_screen__WEBPACK_IMPORTED_MODULE_0__.hideAlternateScreen)();\n    cursor.show();\n    cursor.reset();\n}\n\n\n//# sourceURL=webpack://wordle-cli/./src/setup-process-hooks.ts?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:os");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:tty":
/*!***************************!*\
  !*** external "node:tty" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:tty");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "./node_modules/ansi-regex/index.js":
/*!******************************************!*\
  !*** ./node_modules/ansi-regex/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ansiRegex)\n/* harmony export */ });\nfunction ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-regex/index.js?");

/***/ }),

/***/ "./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ansiStyles);\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/boxen/index.js":
/*!*************************************!*\
  !*** ./node_modules/boxen/index.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ boxen),\n/* harmony export */   \"_borderStyles\": () => (/* binding */ _borderStyles)\n/* harmony export */ });\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:process */ \"node:process\");\n/* harmony import */ var string_width__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\");\n/* harmony import */ var chalk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chalk */ \"./node_modules/boxen/node_modules/chalk/source/index.js\");\n/* harmony import */ var widest_line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! widest-line */ \"./node_modules/widest-line/index.js\");\n/* harmony import */ var cli_boxes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cli-boxes */ \"./node_modules/cli-boxes/index.js\");\n/* harmony import */ var camelcase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! camelcase */ \"./node_modules/camelcase/index.js\");\n/* harmony import */ var ansi_align__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ansi-align */ \"./node_modules/ansi-align/index.js\");\n/* harmony import */ var wrap_ansi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wrap-ansi */ \"./node_modules/wrap-ansi/index.js\");\n\n\n\n\n\n\n\n\n\nconst NEWLINE = '\\n';\nconst PAD = ' ';\nconst BORDERS_WIDTH = 2;\n\nconst terminalColumns = () => {\n\tconst {env, stdout, stderr} = node_process__WEBPACK_IMPORTED_MODULE_0__;\n\n\tif (stdout && stdout.columns) {\n\t\treturn stdout.columns;\n\t}\n\n\tif (stderr && stderr.columns) {\n\t\treturn stderr.columns;\n\t}\n\n\tif (env.COLUMNS) {\n\t\treturn Number.parseInt(env.COLUMNS, 10);\n\t}\n\n\treturn 80;\n};\n\nconst getObject = detail => typeof detail === 'number' ? {\n\ttop: detail,\n\tright: detail * 3,\n\tbottom: detail,\n\tleft: detail * 3,\n} : {\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n\t...detail,\n};\n\nconst getBorderChars = borderStyle => {\n\tconst sides = [\n\t\t'topLeft',\n\t\t'topRight',\n\t\t'bottomRight',\n\t\t'bottomLeft',\n\t\t'left',\n\t\t'right',\n\t\t'top',\n\t\t'bottom',\n\t];\n\n\tlet characters;\n\n\tif (typeof borderStyle === 'string') {\n\t\tcharacters = cli_boxes__WEBPACK_IMPORTED_MODULE_4__[borderStyle];\n\n\t\tif (!characters) {\n\t\t\tthrow new TypeError(`Invalid border style: ${borderStyle}`);\n\t\t}\n\t} else {\n\t\t// Ensure retro-compatibility\n\t\tif (borderStyle.vertical && typeof borderStyle.vertical === 'string') {\n\t\t\tborderStyle.left = borderStyle.vertical;\n\t\t\tborderStyle.right = borderStyle.vertical;\n\t\t}\n\n\t\t// Ensure retro-compatibility\n\t\tif (borderStyle.horizontal && typeof borderStyle.horizontal === 'string') {\n\t\t\tborderStyle.top = borderStyle.horizontal;\n\t\t\tborderStyle.bottom = borderStyle.horizontal;\n\t\t}\n\n\t\tfor (const side of sides) {\n\t\t\tif (!borderStyle[side] || typeof borderStyle[side] !== 'string') {\n\t\t\t\tthrow new TypeError(`Invalid border style: ${side}`);\n\t\t\t}\n\t\t}\n\n\t\tcharacters = borderStyle;\n\t}\n\n\treturn characters;\n};\n\nconst makeTitle = (text, horizontal, alignement) => {\n\tlet title = '';\n\n\tconst textWidth = (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(text);\n\n\tswitch (alignement) {\n\t\tcase 'left':\n\t\t\ttitle = text + horizontal.slice(textWidth);\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\ttitle = horizontal.slice(textWidth) + text;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\thorizontal = horizontal.slice(textWidth);\n\n\t\t\tif (horizontal.length % 2 === 1) { // This is needed in case the length is odd\n\t\t\t\thorizontal = horizontal.slice(Math.floor(horizontal.length / 2));\n\t\t\t\ttitle = horizontal.slice(1) + text + horizontal; // We reduce the left part of one character to avoid the bar to go beyond its limit\n\t\t\t} else {\n\t\t\t\thorizontal = horizontal.slice(horizontal.length / 2);\n\t\t\t\ttitle = horizontal + text + horizontal;\n\t\t\t}\n\n\t\t\tbreak;\n\t}\n\n\treturn title;\n};\n\nconst makeContentText = (text, padding, columns, align) => {\n\ttext = ansi_align__WEBPACK_IMPORTED_MODULE_6__(text, {align});\n\tlet lines = text.split(NEWLINE);\n\tconst textWidth = (0,widest_line__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(text);\n\n\tconst max = columns - padding.left - padding.right;\n\n\tif (textWidth > max) {\n\t\tconst newLines = [];\n\t\tfor (const line of lines) {\n\t\t\tconst createdLines = (0,wrap_ansi__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(line, max, {hard: true});\n\t\t\tconst alignedLines = ansi_align__WEBPACK_IMPORTED_MODULE_6__(createdLines, {align});\n\t\t\tconst alignedLinesArray = alignedLines.split('\\n');\n\t\t\tconst longestLength = Math.max(...alignedLinesArray.map(s => (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(s)));\n\n\t\t\tfor (const alignedLine of alignedLinesArray) {\n\t\t\t\tlet paddedLine;\n\t\t\t\tswitch (align) {\n\t\t\t\t\tcase 'center':\n\t\t\t\t\t\tpaddedLine = PAD.repeat((max - longestLength) / 2) + alignedLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tpaddedLine = PAD.repeat(max - longestLength) + alignedLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tpaddedLine = alignedLine;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tnewLines.push(paddedLine);\n\t\t\t}\n\t\t}\n\n\t\tlines = newLines;\n\t}\n\n\tif (align === 'center' && textWidth < max) {\n\t\tlines = lines.map(line => PAD.repeat((max - textWidth) / 2) + line);\n\t} else if (align === 'right' && textWidth < max) {\n\t\tlines = lines.map(line => PAD.repeat(max - textWidth) + line);\n\t}\n\n\tconst paddingLeft = PAD.repeat(padding.left);\n\tconst paddingRight = PAD.repeat(padding.right);\n\n\tlines = lines.map(line => paddingLeft + line + paddingRight);\n\n\tlines = lines.map(line => {\n\t\tif (columns - (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(line) > 0) {\n\t\t\tswitch (align) {\n\t\t\t\tcase 'center':\n\t\t\t\t\treturn line + PAD.repeat(columns - (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(line));\n\t\t\t\tcase 'right':\n\t\t\t\t\treturn line + PAD.repeat(columns - (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(line));\n\t\t\t\tdefault:\n\t\t\t\t\treturn line + PAD.repeat(columns - (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(line));\n\t\t\t}\n\t\t}\n\n\t\treturn line;\n\t});\n\n\tif (padding.top > 0) {\n\t\tlines = [...Array.from({length: padding.top}).fill(PAD.repeat(columns)), ...lines];\n\t}\n\n\tif (padding.bottom > 0) {\n\t\tlines = [...lines, ...Array.from({length: padding.bottom}).fill(PAD.repeat(columns))];\n\t}\n\n\treturn lines.join(NEWLINE);\n};\n\nconst boxContent = (content, contentWidth, options) => {\n\tconst colorizeBorder = border => {\n\t\tconst newBorder = options.borderColor ? getColorFn(options.borderColor)(border) : border;\n\t\treturn options.dimBorder ? chalk__WEBPACK_IMPORTED_MODULE_2__.dim(newBorder) : newBorder;\n\t};\n\n\tconst colorizeContent = content => options.backgroundColor ? getBGColorFn(options.backgroundColor)(content) : content;\n\n\tconst chars = getBorderChars(options.borderStyle);\n\tconst columns = terminalColumns();\n\tlet marginLeft = PAD.repeat(options.margin.left);\n\n\tif (options.float === 'center') {\n\t\tconst marginWidth = Math.max((columns - contentWidth - BORDERS_WIDTH) / 2, 0);\n\t\tmarginLeft = PAD.repeat(marginWidth);\n\t} else if (options.float === 'right') {\n\t\tconst marginWidth = Math.max(columns - contentWidth - options.margin.right - BORDERS_WIDTH, 0);\n\t\tmarginLeft = PAD.repeat(marginWidth);\n\t}\n\n\tconst top = colorizeBorder(NEWLINE.repeat(options.margin.top) + marginLeft + chars.topLeft + (options.title ? makeTitle(options.title, chars.top.repeat(contentWidth), options.titleAlignment) : chars.top.repeat(contentWidth)) + chars.topRight);\n\tconst bottom = colorizeBorder(marginLeft + chars.bottomLeft + chars.bottom.repeat(contentWidth) + chars.bottomRight + NEWLINE.repeat(options.margin.bottom));\n\n\tconst LINE_SEPARATOR = (contentWidth + BORDERS_WIDTH + options.margin.left >= columns) ? '' : NEWLINE;\n\n\tconst lines = content.split(NEWLINE);\n\n\tconst middle = lines.map(line => marginLeft + colorizeBorder(chars.left) + colorizeContent(line) + colorizeBorder(chars.right)).join(LINE_SEPARATOR);\n\n\treturn top + LINE_SEPARATOR + middle + LINE_SEPARATOR + bottom;\n};\n\nconst determineDimensions = (text, options) => {\n\tconst widthOverride = options.width !== undefined;\n\tconst columns = terminalColumns();\n\tconst maxWidth = columns - options.margin.left - options.margin.right - BORDERS_WIDTH;\n\n\t// If width is provided, make sure it's not below 1\n\tif (options.width) {\n\t\toptions.width = Math.max(1, options.width - BORDERS_WIDTH);\n\t}\n\n\tconst widest = (0,widest_line__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,wrap_ansi__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(text, columns - BORDERS_WIDTH, {hard: true, trim: false})) + options.padding.left + options.padding.right;\n\n\t// If title and width are provided, title adheres to fixed width\n\tif (options.title && widthOverride) {\n\t\toptions.title = options.title.slice(0, Math.max(0, options.width - 2));\n\t\tif (options.title) {\n\t\t\toptions.title = ` ${options.title} `;\n\t\t}\n\t} else if (options.title) {\n\t\toptions.title = options.title.slice(0, Math.max(0, maxWidth - 2));\n\n\t\t// Recheck if title isn't empty now\n\t\tif (options.title) {\n\t\t\toptions.title = ` ${options.title} `;\n\t\t\t// If the title is larger than content, box adheres to title width\n\t\t\tif ((0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.title) > widest) {\n\t\t\t\toptions.width = (0,string_width__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.title);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If fixed width is provided, use it or content width as reference\n\toptions.width = options.width ? options.width : widest;\n\n\tif (!widthOverride) {\n\t\tif ((options.margin.left && options.margin.right) && options.width > maxWidth) {\n\t\t\t// Let's assume we have margins: left = 3, right = 5, in total = 8\n\t\t\tconst spaceForMargins = columns - options.width - BORDERS_WIDTH;\n\t\t\t// Let's assume we have space = 4\n\t\t\tconst multiplier = spaceForMargins / (options.margin.left + options.margin.right);\n\t\t\t// Here: multiplier = 4/8 = 0.5\n\t\t\toptions.margin.left = Math.max(0, Math.floor(options.margin.left * multiplier));\n\t\t\toptions.margin.right = Math.max(0, Math.floor(options.margin.right * multiplier));\n\t\t\t// Left: 3 * 0.5 = 1.5 -> 1\n\t\t\t// Right: 6 * 0.5 = 3\n\t\t}\n\n\t\t// Re-cap width considering the margins after shrinking\n\t\toptions.width = Math.min(options.width, columns - BORDERS_WIDTH - options.margin.left - options.margin.right);\n\t}\n\n\t// Prevent padding overflow\n\tif (options.width - (options.padding.left + options.padding.right) <= 0) {\n\t\toptions.padding.left = 0;\n\t\toptions.padding.right = 0;\n\t}\n\n\treturn options;\n};\n\nconst isHex = color => color.match(/^#(?:[0-f]{3}){1,2}$/i);\nconst isColorValid = color => typeof color === 'string' && ((chalk__WEBPACK_IMPORTED_MODULE_2__[color]) || isHex(color));\nconst getColorFn = color => isHex(color) ? chalk__WEBPACK_IMPORTED_MODULE_2__.hex(color) : chalk__WEBPACK_IMPORTED_MODULE_2__[color];\nconst getBGColorFn = color => isHex(color) ? chalk__WEBPACK_IMPORTED_MODULE_2__.bgHex(color) : chalk__WEBPACK_IMPORTED_MODULE_2__[camelcase__WEBPACK_IMPORTED_MODULE_5__(['bg', color])];\n\nfunction boxen(text, options) {\n\toptions = {\n\t\tpadding: 0,\n\t\tborderStyle: 'single',\n\t\tdimBorder: false,\n\t\ttextAlignment: 'left',\n\t\tfloat: 'left',\n\t\ttitleAlignment: 'left',\n\t\t...options,\n\t};\n\n\t// This option is deprecated\n\tif (options.align) {\n\t\toptions.textAlignment = options.align;\n\t}\n\n\tif (options.borderColor && !isColorValid(options.borderColor)) {\n\t\tthrow new Error(`${options.borderColor} is not a valid borderColor`);\n\t}\n\n\tif (options.backgroundColor && !isColorValid(options.backgroundColor)) {\n\t\tthrow new Error(`${options.backgroundColor} is not a valid backgroundColor`);\n\t}\n\n\toptions.padding = getObject(options.padding);\n\toptions.margin = getObject(options.margin);\n\n\toptions = determineDimensions(text, options);\n\n\ttext = makeContentText(text, options.padding, options.width, options.textAlignment);\n\n\treturn boxContent(text, options.width, options);\n}\n\nconst _borderStyles = cli_boxes__WEBPACK_IMPORTED_MODULE_4__;\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/boxen/index.js?");

/***/ }),

/***/ "./node_modules/chalk/source/index.js":
/*!********************************************!*\
  !*** ./node_modules/chalk/source/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Chalk\": () => (/* binding */ Chalk),\n/* harmony export */   \"chalkStderr\": () => (/* binding */ chalkStderr),\n/* harmony export */   \"supportsColor\": () => (/* binding */ stdoutColor),\n/* harmony export */   \"supportsColorStderr\": () => (/* binding */ stderrColor),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _ansi_styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! #ansi-styles */ \"./node_modules/chalk/source/vendor/ansi-styles/index.js\");\n/* harmony import */ var _supports_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! #supports-color */ \"./node_modules/chalk/source/vendor/supports-color/index.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities.js */ \"./node_modules/chalk/source/utilities.js\");\n\n\n\n\nconst {stdout: stdoutColor, stderr: stderrColor} = _supports_color__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(_ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type].ansi256(_ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type].ansi(_ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ..._ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexToRgb(...arguments_));\n\t}\n\n\treturn _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), _ansi_styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.stringReplaceAll)(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.stringEncaseCRLFWithFirstIndex)(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nconst chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (chalk);\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/chalk/source/index.js?");

/***/ }),

/***/ "./node_modules/chalk/source/utilities.js":
/*!************************************************!*\
  !*** ./node_modules/chalk/source/utilities.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stringReplaceAll\": () => (/* binding */ stringReplaceAll),\n/* harmony export */   \"stringEncaseCRLFWithFirstIndex\": () => (/* binding */ stringEncaseCRLFWithFirstIndex)\n/* harmony export */ });\n// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nfunction stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nfunction stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/chalk/source/utilities.js?");

/***/ }),

/***/ "./node_modules/chalk/source/vendor/ansi-styles/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/chalk/source/vendor/ansi-styles/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29],\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39],\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49],\n\t\t},\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue: code => {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ansiStyles);\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/chalk/source/vendor/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/chalk/source/vendor/supports-color/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/chalk/source/vendor/supports-color/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSupportsColor\": () => (/* binding */ createSupportsColor),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:process */ \"node:process\");\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_tty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:tty */ \"node:tty\");\n\n\n\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\nfunction hasFlag(flag, argv = node_process__WEBPACK_IMPORTED_MODULE_0__.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = node_process__WEBPACK_IMPORTED_MODULE_0__;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (node_process__WEBPACK_IMPORTED_MODULE_0__.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = node_os__WEBPACK_IMPORTED_MODULE_1__.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\t// Check for Azure DevOps pipelines\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: node_tty__WEBPACK_IMPORTED_MODULE_2__.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: node_tty__WEBPACK_IMPORTED_MODULE_2__.isatty(2)}),\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supportsColor);\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/chalk/source/vendor/supports-color/index.js?");

/***/ }),

/***/ "./node_modules/string-width/index.js":
/*!********************************************!*\
  !*** ./node_modules/string-width/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stringWidth)\n/* harmony export */ });\n/* harmony import */ var strip_ansi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\n/* harmony import */ var eastasianwidth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eastasianwidth */ \"./node_modules/eastasianwidth/eastasianwidth.js\");\n/* harmony import */ var emoji_regex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emoji-regex */ \"./node_modules/emoji-regex/index.js\");\n\n\n\n\nfunction stringWidth(string, options = {}) {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = (0,strip_ansi__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emoji_regex__WEBPACK_IMPORTED_MODULE_2__(), '  ');\n\n\tconst ambiguousCharWidth = options.ambiguousIsNarrow ? 1 : 2;\n\tlet width = 0;\n\n\tfor (let index = 0; index < string.length; index++) {\n\t\tconst codePoint = string.codePointAt(index);\n\n\t\t// Ignore control characters\n\t\tif (codePoint <= 0x1F || (codePoint >= 0x7F && codePoint <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (codePoint >= 0x300 && codePoint <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst code = eastasianwidth__WEBPACK_IMPORTED_MODULE_1__.eastAsianWidth(string.charAt(index));\n\t\tswitch (code) {\n\t\t\tcase 'F':\n\t\t\tcase 'W':\n\t\t\t\twidth += 2;\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\t\twidth += ambiguousCharWidth;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\twidth += 1;\n\t\t}\n\t}\n\n\treturn width;\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/string-width/index.js?");

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stripAnsi)\n/* harmony export */ });\n/* harmony import */ var ansi_regex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ansi-regex */ \"./node_modules/ansi-regex/index.js\");\n\n\nfunction stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\treturn string.replace((0,ansi_regex__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), '');\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/strip-ansi/index.js?");

/***/ }),

/***/ "./node_modules/widest-line/index.js":
/*!*******************************************!*\
  !*** ./node_modules/widest-line/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ widestLine)\n/* harmony export */ });\n/* harmony import */ var string_width__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\");\n\n\nfunction widestLine(string) {\n\tlet lineWidth = 0;\n\n\tfor (const line of string.split('\\n')) {\n\t\tlineWidth = Math.max(lineWidth, (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(line));\n\t}\n\n\treturn lineWidth;\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/widest-line/index.js?");

/***/ }),

/***/ "./node_modules/wrap-ansi/index.js":
/*!*****************************************!*\
  !*** ./node_modules/wrap-ansi/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wrapAnsi)\n/* harmony export */ });\n/* harmony import */ var string_width__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! string-width */ \"./node_modules/string-width/index.js\");\n/* harmony import */ var strip_ansi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strip-ansi */ \"./node_modules/strip-ansi/index.js\");\n/* harmony import */ var ansi_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ansi-styles */ \"./node_modules/ansi-styles/index.js\");\n\n\n\n\nconst ESCAPES = new Set([\n\t'\\u001B',\n\t'\\u009B',\n]);\n\nconst END_CODE = 39;\nconst ANSI_ESCAPE_BELL = '\\u0007';\nconst ANSI_CSI = '[';\nconst ANSI_OSC = ']';\nconst ANSI_SGR_TERMINATOR = 'm';\nconst ANSI_ESCAPE_LINK = `${ANSI_OSC}8;;`;\n\nconst wrapAnsiCode = code => `${ESCAPES.values().next().value}${ANSI_CSI}${code}${ANSI_SGR_TERMINATOR}`;\nconst wrapAnsiHyperlink = uri => `${ESCAPES.values().next().value}${ANSI_ESCAPE_LINK}${uri}${ANSI_ESCAPE_BELL}`;\n\n// Calculate the length of words split on ' ', ignoring\n// the extra characters added by ansi escape codes\nconst wordLengths = string => string.split(' ').map(character => (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(character));\n\n// Wrap a long word across multiple rows\n// Ansi escape codes do not count towards length\nconst wrapWord = (rows, word, columns) => {\n\tconst characters = [...word];\n\n\tlet isInsideEscape = false;\n\tlet isInsideLinkEscape = false;\n\tlet visible = (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,strip_ansi__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rows[rows.length - 1]));\n\n\tfor (const [index, character] of characters.entries()) {\n\t\tconst characterLength = (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(character);\n\n\t\tif (visible + characterLength <= columns) {\n\t\t\trows[rows.length - 1] += character;\n\t\t} else {\n\t\t\trows.push(character);\n\t\t\tvisible = 0;\n\t\t}\n\n\t\tif (ESCAPES.has(character)) {\n\t\t\tisInsideEscape = true;\n\t\t\tisInsideLinkEscape = characters.slice(index + 1).join('').startsWith(ANSI_ESCAPE_LINK);\n\t\t}\n\n\t\tif (isInsideEscape) {\n\t\t\tif (isInsideLinkEscape) {\n\t\t\t\tif (character === ANSI_ESCAPE_BELL) {\n\t\t\t\t\tisInsideEscape = false;\n\t\t\t\t\tisInsideLinkEscape = false;\n\t\t\t\t}\n\t\t\t} else if (character === ANSI_SGR_TERMINATOR) {\n\t\t\t\tisInsideEscape = false;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvisible += characterLength;\n\n\t\tif (visible === columns && index < characters.length - 1) {\n\t\t\trows.push('');\n\t\t\tvisible = 0;\n\t\t}\n\t}\n\n\t// It's possible that the last row we copy over is only\n\t// ansi escape characters, handle this edge-case\n\tif (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {\n\t\trows[rows.length - 2] += rows.pop();\n\t}\n};\n\n// Trims spaces from a string ignoring invisible sequences\nconst stringVisibleTrimSpacesRight = string => {\n\tconst words = string.split(' ');\n\tlet last = words.length;\n\n\twhile (last > 0) {\n\t\tif ((0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(words[last - 1]) > 0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlast--;\n\t}\n\n\tif (last === words.length) {\n\t\treturn string;\n\t}\n\n\treturn words.slice(0, last).join(' ') + words.slice(last).join('');\n};\n\n// The wrap-ansi module can be invoked in either 'hard' or 'soft' wrap mode\n//\n// 'hard' will never allow a string to take up more than columns characters\n//\n// 'soft' allows long words to expand past the column length\nconst exec = (string, columns, options = {}) => {\n\tif (options.trim !== false && string.trim() === '') {\n\t\treturn '';\n\t}\n\n\tlet returnValue = '';\n\tlet escapeCode;\n\tlet escapeUrl;\n\n\tconst lengths = wordLengths(string);\n\tlet rows = [''];\n\n\tfor (const [index, word] of string.split(' ').entries()) {\n\t\tif (options.trim !== false) {\n\t\t\trows[rows.length - 1] = rows[rows.length - 1].trimStart();\n\t\t}\n\n\t\tlet rowLength = (0,string_width__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(rows[rows.length - 1]);\n\n\t\tif (index !== 0) {\n\t\t\tif (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {\n\t\t\t\t// If we start with a new word but the current row length equals the length of the columns, add a new row\n\t\t\t\trows.push('');\n\t\t\t\trowLength = 0;\n\t\t\t}\n\n\t\t\tif (rowLength > 0 || options.trim === false) {\n\t\t\t\trows[rows.length - 1] += ' ';\n\t\t\t\trowLength++;\n\t\t\t}\n\t\t}\n\n\t\t// In 'hard' wrap mode, the length of a line is never allowed to extend past 'columns'\n\t\tif (options.hard && lengths[index] > columns) {\n\t\t\tconst remainingColumns = (columns - rowLength);\n\t\t\tconst breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);\n\t\t\tconst breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);\n\t\t\tif (breaksStartingNextLine < breaksStartingThisLine) {\n\t\t\t\trows.push('');\n\t\t\t}\n\n\t\t\twrapWord(rows, word, columns);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {\n\t\t\tif (options.wordWrap === false && rowLength < columns) {\n\t\t\t\twrapWord(rows, word, columns);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows.push('');\n\t\t}\n\n\t\tif (rowLength + lengths[index] > columns && options.wordWrap === false) {\n\t\t\twrapWord(rows, word, columns);\n\t\t\tcontinue;\n\t\t}\n\n\t\trows[rows.length - 1] += word;\n\t}\n\n\tif (options.trim !== false) {\n\t\trows = rows.map(row => stringVisibleTrimSpacesRight(row));\n\t}\n\n\tconst pre = [...rows.join('\\n')];\n\n\tfor (const [index, character] of pre.entries()) {\n\t\treturnValue += character;\n\n\t\tif (ESCAPES.has(character)) {\n\t\t\tconst {groups} = new RegExp(`(?:\\\\${ANSI_CSI}(?<code>\\\\d+)m|\\\\${ANSI_ESCAPE_LINK}(?<uri>.*)${ANSI_ESCAPE_BELL})`).exec(pre.slice(index).join('')) || {groups: {}};\n\t\t\tif (groups.code !== undefined) {\n\t\t\t\tconst code = Number.parseFloat(groups.code);\n\t\t\t\tescapeCode = code === END_CODE ? undefined : code;\n\t\t\t} else if (groups.uri !== undefined) {\n\t\t\t\tescapeUrl = groups.uri.length === 0 ? undefined : groups.uri;\n\t\t\t}\n\t\t}\n\n\t\tconst code = ansi_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].codes.get(Number(escapeCode));\n\n\t\tif (pre[index + 1] === '\\n') {\n\t\t\tif (escapeUrl) {\n\t\t\t\treturnValue += wrapAnsiHyperlink('');\n\t\t\t}\n\n\t\t\tif (escapeCode && code) {\n\t\t\t\treturnValue += wrapAnsiCode(code);\n\t\t\t}\n\t\t} else if (character === '\\n') {\n\t\t\tif (escapeCode && code) {\n\t\t\t\treturnValue += wrapAnsiCode(escapeCode);\n\t\t\t}\n\n\t\t\tif (escapeUrl) {\n\t\t\t\treturnValue += wrapAnsiHyperlink(escapeUrl);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn returnValue;\n};\n\n// For each newline, invoke the method separately\nfunction wrapAnsi(string, columns, options) {\n\treturn String(string)\n\t\t.normalize()\n\t\t.replace(/\\r\\n/g, '\\n')\n\t\t.split('\\n')\n\t\t.map(line => exec(line, columns, options))\n\t\t.join('\\n');\n}\n\n\n//# sourceURL=webpack://wordle-cli/./node_modules/wrap-ansi/index.js?");

/***/ }),

/***/ "./node_modules/cli-boxes/boxes.json":
/*!*******************************************!*\
  !*** ./node_modules/cli-boxes/boxes.json ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"single\":{\"topLeft\":\"┌\",\"top\":\"─\",\"topRight\":\"┐\",\"right\":\"│\",\"bottomRight\":\"┘\",\"bottom\":\"─\",\"bottomLeft\":\"└\",\"left\":\"│\"},\"double\":{\"topLeft\":\"╔\",\"top\":\"═\",\"topRight\":\"╗\",\"right\":\"║\",\"bottomRight\":\"╝\",\"bottom\":\"═\",\"bottomLeft\":\"╚\",\"left\":\"║\"},\"round\":{\"topLeft\":\"╭\",\"top\":\"─\",\"topRight\":\"╮\",\"right\":\"│\",\"bottomRight\":\"╯\",\"bottom\":\"─\",\"bottomLeft\":\"╰\",\"left\":\"│\"},\"bold\":{\"topLeft\":\"┏\",\"top\":\"━\",\"topRight\":\"┓\",\"right\":\"┃\",\"bottomRight\":\"┛\",\"bottom\":\"━\",\"bottomLeft\":\"┗\",\"left\":\"┃\"},\"singleDouble\":{\"topLeft\":\"╓\",\"top\":\"─\",\"topRight\":\"╖\",\"right\":\"║\",\"bottomRight\":\"╜\",\"bottom\":\"─\",\"bottomLeft\":\"╙\",\"left\":\"║\"},\"doubleSingle\":{\"topLeft\":\"╒\",\"top\":\"═\",\"topRight\":\"╕\",\"right\":\"│\",\"bottomRight\":\"╛\",\"bottom\":\"═\",\"bottomLeft\":\"╘\",\"left\":\"│\"},\"classic\":{\"topLeft\":\"+\",\"top\":\"-\",\"topRight\":\"+\",\"right\":\"|\",\"bottomRight\":\"+\",\"bottom\":\"-\",\"bottomLeft\":\"+\",\"left\":\"|\"},\"arrow\":{\"topLeft\":\"↘\",\"top\":\"↓\",\"topRight\":\"↙\",\"right\":\"←\",\"bottomRight\":\"↖\",\"bottom\":\"↑\",\"bottomLeft\":\"↗\",\"left\":\"→\"}}');\n\n//# sourceURL=webpack://wordle-cli/./node_modules/cli-boxes/boxes.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;